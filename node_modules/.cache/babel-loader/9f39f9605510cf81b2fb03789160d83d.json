{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/layouts/ConvertUnits/components/UnitInput/UnitInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/layouts/ConvertUnits/components/UnitInput/UnitInput.vue","mtime":1574664278290},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/thread-loader/dist/cjs.js","mtime":1574664277654},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js","mtime":1574664275010},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js","mtime":1574664277774}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { BigNumber } from 'bignumber.js';\nimport { mapState } from 'vuex';\nimport DropDownUnitSelector from \"../DropDownUnitSelector\";\nimport utils from 'web3-utils';\nexport default {\n  components: {\n    'dropdown-unit-selector': DropDownUnitSelector\n  },\n  props: {\n    options: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      selectedLeft: 'wei',\n      selectedRight: 'ether',\n      valueLeft: 1000000000000000000,\n      valueRight: 1\n    };\n  },\n  computed: _objectSpread({}, mapState(['web3'])),\n  watch: {\n    valueLeft: function valueLeft(newVal) {\n      this.valueRight = this.convertFromTo(newVal, this.selectedLeft, this.selectedRight);\n    },\n    valueRight: function valueRight(newVal) {\n      this.valueLeft = this.convertFromTo(newVal, this.selectedRight, this.selectedLeft);\n    },\n    selectedLeft: function selectedLeft(newVal) {\n      this.valueRight = this.convertFromTo(this.valueLeft, newVal, this.selectedRight);\n    },\n    selectedRight: function selectedRight(newVal) {\n      this.valueLeft = this.convertFromTo(this.valueRight, newVal, this.selectedLeft);\n    }\n  },\n  methods: {\n    getValueOfUnit: function getValueOfUnit(unit) {\n      unit = unit ? unit.toLowerCase() : 'ether';\n      var unitValue = utils.unitMap[unit];\n      return new BigNumber(unitValue, 10);\n    },\n    convertFromTo: function convertFromTo(amt, from, to) {\n      return new BigNumber(String(amt)).times(this.getValueOfUnit(from)).div(this.getValueOfUnit(to)).toString(10);\n    },\n    updateCurrency: function updateCurrency(e) {\n      if (e[1] === 'left') {\n        this.selectedLeft = e[0];\n      } else {\n        this.selectedRight = e[0];\n      }\n    }\n  }\n};",{"version":3,"sources":["UnitInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA,SAAA,SAAA,QAAA,cAAA;AACA,SAAA,QAAA,QAAA,MAAA;AACA,OAAA,oBAAA;AACA,OAAA,KAAA,MAAA,YAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,8BAAA;AADA,GADA;AAIA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA,oBAAA;AACA,eAAA,EAAA;AACA;AAJA;AADA,GAJA;AAYA,EAAA,IAZA,kBAYA;AACA,WAAA;AACA,MAAA,YAAA,EAAA,KADA;AAEA,MAAA,aAAA,EAAA,OAFA;AAGA,MAAA,SAAA,EAAA,mBAHA;AAIA,MAAA,UAAA,EAAA;AAJA,KAAA;AAMA,GAnBA;AAoBA,EAAA,QAAA,oBACA,QAAA,CAAA,CAAA,MAAA,CAAA,CADA,CApBA;AAuBA,EAAA,KAAA,EAAA;AACA,IAAA,SADA,qBACA,MADA,EACA;AACA,WAAA,UAAA,GAAA,KAAA,aAAA,CACA,MADA,EAEA,KAAA,YAFA,EAGA,KAAA,aAHA,CAAA;AAKA,KAPA;AAQA,IAAA,UARA,sBAQA,MARA,EAQA;AACA,WAAA,SAAA,GAAA,KAAA,aAAA,CACA,MADA,EAEA,KAAA,aAFA,EAGA,KAAA,YAHA,CAAA;AAKA,KAdA;AAeA,IAAA,YAfA,wBAeA,MAfA,EAeA;AACA,WAAA,UAAA,GAAA,KAAA,aAAA,CACA,KAAA,SADA,EAEA,MAFA,EAGA,KAAA,aAHA,CAAA;AAKA,KArBA;AAsBA,IAAA,aAtBA,yBAsBA,MAtBA,EAsBA;AACA,WAAA,SAAA,GAAA,KAAA,aAAA,CACA,KAAA,UADA,EAEA,MAFA,EAGA,KAAA,YAHA,CAAA;AAKA;AA5BA,GAvBA;AAqDA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,0BACA,IADA,EACA;AACA,MAAA,IAAA,GAAA,IAAA,GAAA,IAAA,CAAA,WAAA,EAAA,GAAA,OAAA;AACA,UAAA,SAAA,GAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,aAAA,IAAA,SAAA,CAAA,SAAA,EAAA,EAAA,CAAA;AACA,KALA;AAMA,IAAA,aANA,yBAMA,GANA,EAMA,IANA,EAMA,EANA,EAMA;AACA,aAAA,IAAA,SAAA,CAAA,MAAA,CAAA,GAAA,CAAA,EACA,KADA,CACA,KAAA,cAAA,CAAA,IAAA,CADA,EAEA,GAFA,CAEA,KAAA,cAAA,CAAA,EAAA,CAFA,EAGA,QAHA,CAGA,EAHA,CAAA;AAIA,KAXA;AAYA,IAAA,cAZA,0BAYA,CAZA,EAYA;AACA,UAAA,CAAA,CAAA,CAAA,CAAA,KAAA,MAAA,EAAA;AACA,aAAA,YAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AACA,OAFA,MAEA;AACA,aAAA,aAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AACA;AACA;AAlBA;AArDA,CAAA","sourcesContent":["<template>\n  <div class=\"unit-input\">\n    <div class=\"wrap\">\n      <div class=\"block-left\">\n        <div class=\"select-block\">\n          <dropdown-unit-selector\n            :options=\"options\"\n            :current-selected=\"selectedLeft\"\n            :left=\"true\"\n            @updateSelected=\"updateCurrency\"\n          />\n        </div>\n        <div>\n          <input\n            v-model=\"valueLeft\"\n            type=\"number\"\n            step=\"any\"\n            placeholder=\"Amount\"\n          />\n        </div>\n      </div>\n\n      <div class=\"block-center\">\n        <div class=\"convert-icon\">\n          <img src=\"~@/assets/images/icons/swap-widget.svg\" alt />\n        </div>\n      </div>\n\n      <div class=\"block-right\">\n        <div class=\"select-block\">\n          <dropdown-unit-selector\n            :options=\"options\"\n            :current-selected=\"selectedRight\"\n            :left=\"false\"\n            @updateSelected=\"updateCurrency\"\n          />\n        </div>\n        <div>\n          <input\n            v-model=\"valueRight\"\n            type=\"number\"\n            placeholder=\"Amount\"\n            step=\"any\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { BigNumber } from 'bignumber.js';\nimport { mapState } from 'vuex';\nimport DropDownUnitSelector from '../DropDownUnitSelector';\nimport utils from 'web3-utils';\n\nexport default {\n  components: {\n    'dropdown-unit-selector': DropDownUnitSelector\n  },\n  props: {\n    options: {\n      type: Array,\n      default: function() {\n        return [];\n      }\n    }\n  },\n  data() {\n    return {\n      selectedLeft: 'wei',\n      selectedRight: 'ether',\n      valueLeft: 1000000000000000000,\n      valueRight: 1\n    };\n  },\n  computed: {\n    ...mapState(['web3'])\n  },\n  watch: {\n    valueLeft(newVal) {\n      this.valueRight = this.convertFromTo(\n        newVal,\n        this.selectedLeft,\n        this.selectedRight\n      );\n    },\n    valueRight(newVal) {\n      this.valueLeft = this.convertFromTo(\n        newVal,\n        this.selectedRight,\n        this.selectedLeft\n      );\n    },\n    selectedLeft(newVal) {\n      this.valueRight = this.convertFromTo(\n        this.valueLeft,\n        newVal,\n        this.selectedRight\n      );\n    },\n    selectedRight(newVal) {\n      this.valueLeft = this.convertFromTo(\n        this.valueRight,\n        newVal,\n        this.selectedLeft\n      );\n    }\n  },\n  methods: {\n    getValueOfUnit(unit) {\n      unit = unit ? unit.toLowerCase() : 'ether';\n      const unitValue = utils.unitMap[unit];\n      return new BigNumber(unitValue, 10);\n    },\n    convertFromTo(amt, from, to) {\n      return new BigNumber(String(amt))\n        .times(this.getValueOfUnit(from))\n        .div(this.getValueOfUnit(to))\n        .toString(10);\n    },\n    updateCurrency(e) {\n      if (e[1] === 'left') {\n        this.selectedLeft = e[0];\n      } else {\n        this.selectedRight = e[0];\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'UnitInput.scss';\n</style>\n"],"sourceRoot":"src/layouts/ConvertUnits/components/UnitInput"}]}