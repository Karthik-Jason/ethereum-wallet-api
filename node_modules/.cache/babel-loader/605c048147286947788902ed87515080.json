{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/containers/HeaderContainer/components/MobileMenu/components/MobileBalanceBlock/MobileBalanceBlock.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/containers/HeaderContainer/components/MobileMenu/components/MobileBalanceBlock/MobileBalanceBlock.vue","mtime":1573477611640},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport { Toast } from '@/helpers';\nimport BigNumber from 'bignumber.js';\nimport InterfaceBalanceModal from '@/layouts/InterfaceLayout/components/InterfaceBalanceModal';\nexport default {\n  components: {\n    'interface-balance-modal': InterfaceBalanceModal\n  },\n  computed: _objectSpread({}, mapState(['network', 'web3', 'account']), {\n    accountBalance: function accountBalance() {\n      return this.web3.utils.fromWei(new BigNumber(this.account.balance).toFixed(), 'ether');\n    }\n  }),\n  methods: {\n    showBalanceModal: function showBalanceModal() {\n      this.getBalance();\n      this.$refs.balanceModal.$refs.balance.show();\n    },\n    getBalance: function getBalance() {\n      var _this = this;\n\n      if (this.account.address) {\n        this.web3.eth.getBalance(this.account.address.toLowerCase()).then(function (res) {\n          _this.$store.dispatch('setAccountBalance', res);\n        }).catch(function (err) {\n          Toast.responseHandler(err, Toast.ERROR);\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["MobileBalanceBlock.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,SAAA,QAAA,QAAA,MAAA;AACA,SAAA,KAAA,QAAA,WAAA;AACA,OAAA,SAAA,MAAA,cAAA;AACA,OAAA,qBAAA,MAAA,4DAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,+BAAA;AADA,GADA;AAIA,EAAA,QAAA,oBACA,QAAA,CAAA,CAAA,SAAA,EAAA,MAAA,EAAA,SAAA,CAAA,CADA;AAEA,IAAA,cAFA,4BAEA;AACA,aAAA,KAAA,IAAA,CAAA,KAAA,CAAA,OAAA,CACA,IAAA,SAAA,CAAA,KAAA,OAAA,CAAA,OAAA,EAAA,OAAA,EADA,EAEA,OAFA,CAAA;AAIA;AAPA,IAJA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,8BACA;AACA,WAAA,UAAA;AACA,WAAA,KAAA,CAAA,YAAA,CAAA,KAAA,CAAA,OAAA,CAAA,IAAA;AACA,KAJA;AAKA,IAAA,UALA,wBAKA;AAAA;;AACA,UAAA,KAAA,OAAA,CAAA,OAAA,EAAA;AACA,aAAA,IAAA,CAAA,GAAA,CACA,UADA,CACA,KAAA,OAAA,CAAA,OAAA,CAAA,WAAA,EADA,EAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,mBAAA,EAAA,GAAA;AACA,SAJA,EAKA,KALA,CAKA,UAAA,GAAA,EAAA;AACA,UAAA,KAAA,CAAA,eAAA,CAAA,GAAA,EAAA,KAAA,CAAA,KAAA;AACA,SAPA;AAQA;AACA;AAhBA;AAbA,CAAA","sourcesContent":["<template>\n  <div class=\"mobile-address-block\">\n    <interface-balance-modal ref=\"balanceModal\" :balance=\"accountBalance\" />\n    <div class=\"wrap\">\n      <div class=\"top-block\">\n        <div class=\"block-title\">{{ $t('common.balance') }}</div>\n        <button class=\"show-balance-button\" @click=\"showBalanceModal\">\n          <img src=\"~@/assets/images/icons/more.svg\" alt />\n        </button>\n      </div>\n      <div class=\"bottom-block\">\n        <p class=\"the-address\">\n          {{ accountBalance }}\n          {{ network.type.currencyName }}\n        </p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport { Toast } from '@/helpers';\nimport BigNumber from 'bignumber.js';\nimport InterfaceBalanceModal from '@/layouts/InterfaceLayout/components/InterfaceBalanceModal';\n\nexport default {\n  components: {\n    'interface-balance-modal': InterfaceBalanceModal\n  },\n  computed: {\n    ...mapState(['network', 'web3', 'account']),\n    accountBalance() {\n      return this.web3.utils.fromWei(\n        new BigNumber(this.account.balance).toFixed(),\n        'ether'\n      );\n    }\n  },\n  methods: {\n    showBalanceModal() {\n      this.getBalance();\n      this.$refs.balanceModal.$refs.balance.show();\n    },\n    getBalance() {\n      if (this.account.address) {\n        this.web3.eth\n          .getBalance(this.account.address.toLowerCase())\n          .then(res => {\n            this.$store.dispatch('setAccountBalance', res);\n          })\n          .catch(err => {\n            Toast.responseHandler(err, Toast.ERROR);\n          });\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'MobileBalanceBlock.scss';\n</style>\n"],"sourceRoot":"src/containers/HeaderContainer/components/MobileMenu/components/MobileBalanceBlock"}]}