{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/layouts/InterfaceLayout/components/InterfaceAddress/InterfaceAddress.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/layouts/InterfaceLayout/components/InterfaceAddress/InterfaceAddress.vue","mtime":1573477611948},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Blockie from '@/components/Blockie';\nimport { mapState } from 'vuex';\nimport { Toast } from '@/helpers';\nimport { KEYSTORE, PRIV_KEY, MEW_CONNECT, WEB3_WALLET } from '@/wallets/bip44/walletTypes';\nexport default {\n  components: {\n    blockie: Blockie\n  },\n  props: {\n    address: {\n      type: String,\n      default: ''\n    },\n    print: {\n      type: Function,\n      default: function _default() {}\n    },\n    switchAddr: {\n      type: Function,\n      default: function _default() {}\n    },\n    displayAddr: {\n      type: Function,\n      default: undefined\n    },\n    qrcode: {\n      type: Function,\n      default: function _default() {}\n    }\n  },\n  data: function data() {\n    return {\n      hasMultipleAddr: false\n    };\n  },\n  computed: _objectSpread({}, mapState(['account'])),\n  mounted: function mounted() {\n    if (this.account.address !== null) {\n      if (this.account.identifier !== KEYSTORE && this.account.identifier !== PRIV_KEY && this.account.identifier !== MEW_CONNECT && this.account.identifier !== WEB3_WALLET) {\n        this.hasMultipleAddr = true;\n      } else {\n        this.hasMultipleAddr = false;\n      }\n    }\n  },\n  methods: {\n    copy: function copy() {\n      this.$refs.copyAddress.select();\n      document.execCommand('copy');\n      Toast.responseHandler('Copied!', Toast.INFO);\n    }\n  }\n};",{"version":3,"sources":["InterfaceAddress.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsGA,OAAA,OAAA,MAAA,sBAAA;AACA,SAAA,QAAA,QAAA,MAAA;AACA,SAAA,KAAA,QAAA,WAAA;AACA,SACA,QADA,EAEA,QAFA,EAGA,WAHA,EAIA,WAJA,QAKA,6BALA;AAOA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,OAAA,EAAA;AADA,GADA;AAIA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,QADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA,KALA;AASA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,QADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA,KATA;AAaA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,QADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAbA;AAiBA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,QADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA;AAjBA,GAJA;AA0BA,EAAA,IA1BA,kBA0BA;AACA,WAAA;AACA,MAAA,eAAA,EAAA;AADA,KAAA;AAGA,GA9BA;AA+BA,EAAA,QAAA,oBACA,QAAA,CAAA,CAAA,SAAA,CAAA,CADA,CA/BA;AAkCA,EAAA,OAlCA,qBAkCA;AACA,QAAA,KAAA,OAAA,CAAA,OAAA,KAAA,IAAA,EAAA;AACA,UACA,KAAA,OAAA,CAAA,UAAA,KAAA,QAAA,IACA,KAAA,OAAA,CAAA,UAAA,KAAA,QADA,IAEA,KAAA,OAAA,CAAA,UAAA,KAAA,WAFA,IAGA,KAAA,OAAA,CAAA,UAAA,KAAA,WAJA,EAKA;AACA,aAAA,eAAA,GAAA,IAAA;AACA,OAPA,MAOA;AACA,aAAA,eAAA,GAAA,KAAA;AACA;AACA;AACA,GA/CA;AAgDA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,WAAA,KAAA,CAAA,WAAA,CAAA,MAAA;AACA,MAAA,QAAA,CAAA,WAAA,CAAA,MAAA;AACA,MAAA,KAAA,CAAA,eAAA,CAAA,SAAA,EAAA,KAAA,CAAA,IAAA;AACA;AALA;AAhDA,CAAA","sourcesContent":["<template>\n  <div class=\"interface-address\">\n    <div class=\"info-block address\">\n      <div class=\"block-image\">\n        <blockie\n          :address=\"address\"\n          :size=\"8\"\n          :scale=\"16\"\n          width=\"64px\"\n          height=\"64px\"\n          class=\"blockie-image\"\n        />\n        <input\n          ref=\"copyAddress\"\n          :value=\"address\"\n          class=\"hidden-input\"\n          autocomplete=\"off\"\n        />\n      </div>\n      <div class=\"block-content\">\n        <div class=\"information-container\">\n          <h2>{{ $t('common.address') }}</h2>\n          <p class=\"address\">{{ address }}</p>\n        </div>\n        <div class=\"icon-container\">\n          <button\n            v-if=\"hasMultipleAddr\"\n            id=\"popover-ref-switch\"\n            class=\"change-button\"\n            @click=\"switchAddr\"\n          >\n            Switch\n          </button>\n          <b-btn id=\"popover-ref-qrcode\" class=\"custom-tooltip\" @click=\"qrcode\">\n            <img alt src=\"~@/assets/images/icons/qr-code-white.svg\" />\n          </b-btn>\n          <b-btn id=\"popover-ref-print\" class=\"custom-tooltip\" @click=\"print\">\n            <img alt src=\"~@/assets/images/icons/printer-white.svg\" />\n          </b-btn>\n          <b-btn id=\"popover-ref-copy\" class=\"custom-tooltip\" @click=\"copy\">\n            <img alt src=\"~@/assets/images/icons/copy.svg\" />\n          </b-btn>\n          <b-btn\n            v-show=\"displayAddr\"\n            id=\"popover-ref-address\"\n            class=\"custom-tooltip button-address\"\n            @click=\"displayAddr\"\n          >\n            <img\n              alt\n              src=\"~@/assets/images/icons/Interface/Buttons/Address.svg\"\n            />\n          </b-btn>\n          <b-popover\n            content=\"Switch Address\"\n            target=\"popover-ref-address\"\n            placement=\"top\"\n            triggers=\"hover\"\n            title\n          />\n          <b-popover\n            :content=\"$t('popover.print')\"\n            target=\"popover-ref-print\"\n            placement=\"top\"\n            triggers=\"hover\"\n            title\n          />\n          <b-popover\n            :content=\"$t('popover.copy')\"\n            target=\"popover-ref-copy\"\n            placement=\"top\"\n            triggers=\"hover\"\n            title\n          />\n          <b-popover\n            :content=\"$t('popover.switchAddress')\"\n            target=\"popover-ref-switch\"\n            placement=\"top\"\n            triggers=\"hover\"\n            title\n          />\n          <b-popover\n            :content=\"$t('popover.displayAddress')\"\n            target=\"popover-ref-address\"\n            placement=\"top\"\n            triggers=\"hover\"\n            title\n          />\n          <b-popover\n            content=\"Address in Qrcode\"\n            target=\"popover-ref-qrcode\"\n            placement=\"top\"\n            triggers=\"hover\"\n            title\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Blockie from '@/components/Blockie';\nimport { mapState } from 'vuex';\nimport { Toast } from '@/helpers';\nimport {\n  KEYSTORE,\n  PRIV_KEY,\n  MEW_CONNECT,\n  WEB3_WALLET\n} from '@/wallets/bip44/walletTypes';\n\nexport default {\n  components: {\n    blockie: Blockie\n  },\n  props: {\n    address: {\n      type: String,\n      default: ''\n    },\n    print: {\n      type: Function,\n      default: function() {}\n    },\n    switchAddr: {\n      type: Function,\n      default: function() {}\n    },\n    displayAddr: {\n      type: Function,\n      default: undefined\n    },\n    qrcode: {\n      type: Function,\n      default: function() {}\n    }\n  },\n  data() {\n    return {\n      hasMultipleAddr: false\n    };\n  },\n  computed: {\n    ...mapState(['account'])\n  },\n  mounted() {\n    if (this.account.address !== null) {\n      if (\n        this.account.identifier !== KEYSTORE &&\n        this.account.identifier !== PRIV_KEY &&\n        this.account.identifier !== MEW_CONNECT &&\n        this.account.identifier !== WEB3_WALLET\n      ) {\n        this.hasMultipleAddr = true;\n      } else {\n        this.hasMultipleAddr = false;\n      }\n    }\n  },\n  methods: {\n    copy() {\n      this.$refs.copyAddress.select();\n      document.execCommand('copy');\n      Toast.responseHandler('Copied!', Toast.INFO);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'InterfaceAddress.scss';\n</style>\n"],"sourceRoot":"src/layouts/InterfaceLayout/components/InterfaceAddress"}]}