{"remainingRequest":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/eslint-loader/index.js??ref--13-0!/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/router/index.js","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/router/index.js","mtime":1573477612096},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport Router from 'vue-router';\nimport store from '@/store';\nimport { getMode, getRoutes } from '@/builds/configs';\nimport { ExtensionHelpers } from '@/helpers';\nimport { isAddress } from '@/helpers/addressUtils';\nimport Misc from '@/helpers/misc';\n\nvar storeQuery = function storeQuery(query) {\n  var queryKeys = Object.keys(query);\n\n  if (queryKeys.length > 0) {\n    var blankObj = {};\n\n    for (var key in query) {\n      blankObj[key] = Misc.stripTags(query[key]);\n    }\n\n    store.dispatch('saveQueryVal', blankObj);\n  }\n};\n\nvar router = new Router({\n  mode: getMode(),\n  routes: getRoutes(),\n  scrollBehavior: function scrollBehavior(to) {\n    if (to.hash) {\n      return {\n        selector: to.hash\n      };\n    }\n\n    window.scrollTo(0, 0);\n  }\n});\nrouter.beforeResolve(function (to, from, next) {\n  storeQuery(to.query);\n\n  if (to.meta.hasOwnProperty('requiresAuth')) {\n    next();\n  } else {\n    if (store.state.wallet === null) {\n      if (BUILD_TYPE === 'mewcx') {\n        ExtensionHelpers.getAccounts(function (item) {\n          var hasStoredWallet = Object.keys(item).filter(function (key) {\n            var newObj = {};\n\n            if (isAddress(key)) {\n              return newObj[key] = item[key];\n            }\n          });\n\n          if (hasStoredWallet.length > 0) {\n            next('/');\n          } else {\n            next({\n              name: 'AccessWalletLayout'\n            });\n          }\n        });\n      } else {\n        store.dispatch('setLastPath', to.path);\n        next({\n          name: 'AccessWalletLayout'\n        });\n      }\n    } else {\n      if (store.state.path !== '') {\n        var localPath = store.state.path;\n        store.dispatch('setLastPath', '');\n        next({\n          path: localPath\n        });\n      } else {\n        next();\n      }\n    }\n  }\n});\nexport default router;",{"version":3,"sources":["/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/router/index.js"],"names":["Router","store","getMode","getRoutes","ExtensionHelpers","isAddress","Misc","storeQuery","query","queryKeys","Object","keys","length","blankObj","key","stripTags","dispatch","router","mode","routes","scrollBehavior","to","hash","selector","window","scrollTo","beforeResolve","from","next","meta","hasOwnProperty","state","wallet","BUILD_TYPE","getAccounts","item","hasStoredWallet","filter","newObj","name","path","localPath"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,YAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,kBAAnC;AACA,SAASC,gBAAT,QAAiC,WAAjC;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,OAAOC,IAAP,MAAiB,gBAAjB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EAAI;AAC1B,MAAMC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAZ,CAAlB;;AACA,MAAIC,SAAS,CAACG,MAAV,GAAmB,CAAvB,EAA0B;AACxB,QAAMC,QAAQ,GAAG,EAAjB;;AACA,SAAK,IAAMC,GAAX,IAAkBN,KAAlB,EAAyB;AACvBK,MAAAA,QAAQ,CAACC,GAAD,CAAR,GAAgBR,IAAI,CAACS,SAAL,CAAeP,KAAK,CAACM,GAAD,CAApB,CAAhB;AACD;;AAEDb,IAAAA,KAAK,CAACe,QAAN,CAAe,cAAf,EAA+BH,QAA/B;AACD;AACF,CAVD;;AAYA,IAAMI,MAAM,GAAG,IAAIjB,MAAJ,CAAW;AACxBkB,EAAAA,IAAI,EAAEhB,OAAO,EADW;AAExBiB,EAAAA,MAAM,EAAEhB,SAAS,EAFO;AAGxBiB,EAAAA,cAHwB,0BAGTC,EAHS,EAGL;AACjB,QAAIA,EAAE,CAACC,IAAP,EAAa;AACX,aAAO;AACLC,QAAAA,QAAQ,EAAEF,EAAE,CAACC;AADR,OAAP;AAGD;;AACDE,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD;AAVuB,CAAX,CAAf;AAaAR,MAAM,CAACS,aAAP,CAAqB,UAACL,EAAD,EAAKM,IAAL,EAAWC,IAAX,EAAoB;AACvCrB,EAAAA,UAAU,CAACc,EAAE,CAACb,KAAJ,CAAV;;AACA,MAAIa,EAAE,CAACQ,IAAH,CAAQC,cAAR,CAAuB,cAAvB,CAAJ,EAA4C;AAC1CF,IAAAA,IAAI;AACL,GAFD,MAEO;AACL,QAAI3B,KAAK,CAAC8B,KAAN,CAAYC,MAAZ,KAAuB,IAA3B,EAAiC;AAC/B,UAAIC,UAAU,KAAK,OAAnB,EAA4B;AAC1B7B,QAAAA,gBAAgB,CAAC8B,WAAjB,CAA6B,UAAAC,IAAI,EAAI;AACnC,cAAMC,eAAe,GAAG1B,MAAM,CAACC,IAAP,CAAYwB,IAAZ,EAAkBE,MAAlB,CAAyB,UAAAvB,GAAG,EAAI;AACtD,gBAAMwB,MAAM,GAAG,EAAf;;AACA,gBAAIjC,SAAS,CAACS,GAAD,CAAb,EAAoB;AAClB,qBAAQwB,MAAM,CAACxB,GAAD,CAAN,GAAcqB,IAAI,CAACrB,GAAD,CAA1B;AACD;AACF,WALuB,CAAxB;;AAMA,cAAIsB,eAAe,CAACxB,MAAhB,GAAyB,CAA7B,EAAgC;AAC9BgB,YAAAA,IAAI,CAAC,GAAD,CAAJ;AACD,WAFD,MAEO;AACLA,YAAAA,IAAI,CAAC;AAAEW,cAAAA,IAAI,EAAE;AAAR,aAAD,CAAJ;AACD;AACF,SAZD;AAaD,OAdD,MAcO;AACLtC,QAAAA,KAAK,CAACe,QAAN,CAAe,aAAf,EAA8BK,EAAE,CAACmB,IAAjC;AACAZ,QAAAA,IAAI,CAAC;AAAEW,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAJ;AACD;AACF,KAnBD,MAmBO;AACL,UAAItC,KAAK,CAAC8B,KAAN,CAAYS,IAAZ,KAAqB,EAAzB,EAA6B;AAC3B,YAAMC,SAAS,GAAGxC,KAAK,CAAC8B,KAAN,CAAYS,IAA9B;AACAvC,QAAAA,KAAK,CAACe,QAAN,CAAe,aAAf,EAA8B,EAA9B;AACAY,QAAAA,IAAI,CAAC;AAAEY,UAAAA,IAAI,EAAEC;AAAR,SAAD,CAAJ;AACD,OAJD,MAIO;AACLb,QAAAA,IAAI;AACL;AACF;AACF;AACF,CAlCD;AAoCA,eAAeX,MAAf","sourcesContent":["import Router from 'vue-router';\nimport store from '@/store';\nimport { getMode, getRoutes } from '@/builds/configs';\nimport { ExtensionHelpers } from '@/helpers';\nimport { isAddress } from '@/helpers/addressUtils';\nimport Misc from '@/helpers/misc';\n\nconst storeQuery = query => {\n  const queryKeys = Object.keys(query);\n  if (queryKeys.length > 0) {\n    const blankObj = {};\n    for (const key in query) {\n      blankObj[key] = Misc.stripTags(query[key]);\n    }\n\n    store.dispatch('saveQueryVal', blankObj);\n  }\n};\n\nconst router = new Router({\n  mode: getMode(),\n  routes: getRoutes(),\n  scrollBehavior(to) {\n    if (to.hash) {\n      return {\n        selector: to.hash\n      };\n    }\n    window.scrollTo(0, 0);\n  }\n});\n\nrouter.beforeResolve((to, from, next) => {\n  storeQuery(to.query);\n  if (to.meta.hasOwnProperty('requiresAuth')) {\n    next();\n  } else {\n    if (store.state.wallet === null) {\n      if (BUILD_TYPE === 'mewcx') {\n        ExtensionHelpers.getAccounts(item => {\n          const hasStoredWallet = Object.keys(item).filter(key => {\n            const newObj = {};\n            if (isAddress(key)) {\n              return (newObj[key] = item[key]);\n            }\n          });\n          if (hasStoredWallet.length > 0) {\n            next('/');\n          } else {\n            next({ name: 'AccessWalletLayout' });\n          }\n        });\n      } else {\n        store.dispatch('setLastPath', to.path);\n        next({ name: 'AccessWalletLayout' });\n      }\n    } else {\n      if (store.state.path !== '') {\n        const localPath = store.state.path;\n        store.dispatch('setLastPath', '');\n        next({ path: localPath });\n      } else {\n        next();\n      }\n    }\n  }\n});\n\nexport default router;\n"]}]}