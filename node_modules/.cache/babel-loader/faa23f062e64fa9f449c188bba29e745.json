{"remainingRequest":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/eslint-loader/index.js??ref--13-0!/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/partners/changelly/changelly-api.js","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/partners/changelly/changelly-api.js","mtime":1573477612092},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport debugLogger from 'debug';\nimport changellyCalls from \"./changelly-calls\";\nimport { requireExtraId } from \"./config\";\nimport { utils } from \"../helpers\";\nvar errorLogger = debugLogger('v5-error:changelly-api');\n\nvar getSupportedCurrencies =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(network) {\n    var currencyList, currencyDetails, tokenDetails, i, details;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return changellyCalls.getCurrencies(network);\n\n          case 3:\n            currencyList = _context.sent;\n            currencyDetails = {};\n            tokenDetails = {};\n\n            if (!currencyList) {\n              _context.next = 9;\n              break;\n            }\n\n            for (i = 0; i < currencyList.length; i++) {\n              if (!requireExtraId.includes(currencyList[i].name.toUpperCase()) && currencyList[i].enabled) {\n                if (currencyList[i].extraIdName === null || currencyList[i].extraIdName === undefined) {\n                  details = {\n                    symbol: currencyList[i].name.toUpperCase(),\n                    name: currencyList[i].fullName,\n                    fixRateEnabled: currencyList[i].fixRateEnabled\n                  };\n                  currencyDetails[details.symbol] = details;\n                  tokenDetails[details.symbol] = details;\n                }\n              }\n            }\n\n            return _context.abrupt(\"return\", {\n              currencyDetails: currencyDetails,\n              tokenDetails: tokenDetails\n            });\n\n          case 9:\n            throw Error('Changelly get supported currencies failed to return a value');\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            utils.handleOrThrow(_context.t0);\n            errorLogger(_context.t0);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 12]]);\n  }));\n\n  return function getSupportedCurrencies(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default {\n  getSupportedCurrencies: getSupportedCurrencies\n};",{"version":3,"sources":["/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/partners/changelly/changelly-api.js"],"names":["debugLogger","changellyCalls","requireExtraId","utils","errorLogger","getSupportedCurrencies","network","getCurrencies","currencyList","currencyDetails","tokenDetails","i","length","includes","name","toUpperCase","enabled","extraIdName","undefined","details","symbol","fullName","fixRateEnabled","Error","handleOrThrow"],"mappings":";;;;;AAAA,OAAOA,WAAP,MAAwB,OAAxB;AACA,OAAOC,cAAP;AACA,SAASC,cAAT;AACA,SAASC,KAAT;AAEA,IAAMC,WAAW,GAAGJ,WAAW,CAAC,wBAAD,CAA/B;;AAEA,IAAMK,sBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEAL,cAAc,CAACM,aAAf,CAA6BD,OAA7B,CAFA;;AAAA;AAErBE,YAAAA,YAFqB;AAGrBC,YAAAA,eAHqB,GAGH,EAHG;AAIrBC,YAAAA,YAJqB,GAIN,EAJM;;AAAA,iBAKvBF,YALuB;AAAA;AAAA;AAAA;;AAMzB,iBAASG,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAGH,YAAY,CAACI,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5C,kBACE,CAACT,cAAc,CAACW,QAAf,CAAwBL,YAAY,CAACG,CAAD,CAAZ,CAAgBG,IAAhB,CAAqBC,WAArB,EAAxB,CAAD,IACAP,YAAY,CAACG,CAAD,CAAZ,CAAgBK,OAFlB,EAGE;AACA,oBACER,YAAY,CAACG,CAAD,CAAZ,CAAgBM,WAAhB,KAAgC,IAAhC,IACAT,YAAY,CAACG,CAAD,CAAZ,CAAgBM,WAAhB,KAAgCC,SAFlC,EAGE;AACMC,kBAAAA,OADN,GACgB;AACdC,oBAAAA,MAAM,EAAEZ,YAAY,CAACG,CAAD,CAAZ,CAAgBG,IAAhB,CAAqBC,WAArB,EADM;AAEdD,oBAAAA,IAAI,EAAEN,YAAY,CAACG,CAAD,CAAZ,CAAgBU,QAFR;AAGdC,oBAAAA,cAAc,EAAEd,YAAY,CAACG,CAAD,CAAZ,CAAgBW;AAHlB,mBADhB;AAMAb,kBAAAA,eAAe,CAACU,OAAO,CAACC,MAAT,CAAf,GAAkCD,OAAlC;AACAT,kBAAAA,YAAY,CAACS,OAAO,CAACC,MAAT,CAAZ,GAA+BD,OAA/B;AACD;AACF;AACF;;AAxBwB,6CAyBlB;AAAEV,cAAAA,eAAe,EAAfA,eAAF;AAAmBC,cAAAA,YAAY,EAAZA;AAAnB,aAzBkB;;AAAA;AAAA,kBA2BrBa,KAAK,CAAC,6DAAD,CA3BgB;;AAAA;AAAA;AAAA;AA6B3BpB,YAAAA,KAAK,CAACqB,aAAN;AACApB,YAAAA,WAAW,aAAX;;AA9B2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAtBC,sBAAsB;AAAA;AAAA;AAAA,GAA5B;;AAkCA,eAAe;AACbA,EAAAA,sBAAsB,EAAtBA;AADa,CAAf","sourcesContent":["import debugLogger from 'debug';\nimport changellyCalls from './changelly-calls';\nimport { requireExtraId } from './config';\nimport { utils } from '../helpers';\n\nconst errorLogger = debugLogger('v5-error:changelly-api');\n\nconst getSupportedCurrencies = async network => {\n  try {\n    const currencyList = await changellyCalls.getCurrencies(network);\n    const currencyDetails = {};\n    const tokenDetails = {};\n    if (currencyList) {\n      for (let i = 0; i < currencyList.length; i++) {\n        if (\n          !requireExtraId.includes(currencyList[i].name.toUpperCase()) &&\n          currencyList[i].enabled\n        ) {\n          if (\n            currencyList[i].extraIdName === null ||\n            currencyList[i].extraIdName === undefined\n          ) {\n            const details = {\n              symbol: currencyList[i].name.toUpperCase(),\n              name: currencyList[i].fullName,\n              fixRateEnabled: currencyList[i].fixRateEnabled\n            };\n            currencyDetails[details.symbol] = details;\n            tokenDetails[details.symbol] = details;\n          }\n        }\n      }\n      return { currencyDetails, tokenDetails };\n    }\n    throw Error('Changelly get supported currencies failed to return a value');\n  } catch (e) {\n    utils.handleOrThrow(e);\n    errorLogger(e);\n  }\n};\n\nexport default {\n  getSupportedCurrencies\n};\n"]}]}