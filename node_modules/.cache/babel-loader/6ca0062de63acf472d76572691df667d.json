{"remainingRequest":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/eslint-loader/index.js??ref--13-0!/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/partners/kyber/config/config.js","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/partners/kyber/config/config.js","mtime":1573477612092},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["// TODO: look into only using kyberTokenInfoList for ETH and parsing results differently if ROP?\nimport { TIME_SWAP_VALID_DEFAULT } from \"../../partnersConfig/config\";\nimport { KyberCurrenciesETH } from \"./currenciesETH\";\nimport { KyberCurrenciesROP } from \"./currenciesROP\";\nimport { KyberCurrenciesKOV } from \"./currenciesKOV\";\nvar ETH_ENDPINT = 'https://api.kyber.network';\nvar ROP_ENDPOINT = 'https://ropsten-api.kyber.network';\nvar kyberTokenList = {\n  ETH: \"\".concat(ETH_ENDPINT, \"/currencies\"),\n  ROP: \"\".concat(ROP_ENDPOINT, \"/currencies\")\n};\nvar kyberTokenInfoList = {\n  ETH: \"\".concat(ETH_ENDPINT, \"/api/tokens/pairs\")\n};\nvar kyberGasLimitList = {\n  ETH: \"\".concat(ETH_ENDPINT, \"/gasLimitConfig\"),\n  ROP: \"\".concat(ROP_ENDPOINT, \"/gasLimitConfig\")\n};\nvar kyberAddressFallback = {\n  ETH: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n  ROP: '0x818E6FECD516Ecc3849DAf6845e3EC868087B755',\n  KOV: '0x692f391bCc85cefCe8C237C01e1f636BbD70EA4D'\n};\nvar KyberCurrencies = {\n  ETH: KyberCurrenciesETH,\n  ROP: KyberCurrenciesROP,\n  KOV: KyberCurrenciesKOV\n};\nvar walletDepositeAddress = '0x4247951c2eb6d0bA38d233fe7d542c8c80c9d46A'; // i.e. where payments go\n\nvar kyberNetworkENS = 'kybernetwork.eth';\nvar kyberValidNetworks = ['ETH', 'ROP', 'KOV'];\nvar defaultValues = {\n  tradeGasLimit: 500000,\n  tokenToTokenGasLimit: 500000,\n  tokenApprovalGasLimit: 150000,\n  //40205,\n  maxGasPrice: 30000000000,\n  // 30 Gwei\n  gasPrice: 2000000000 // 2 Gwei\n\n};\nvar kyberMethods = {\n  ETH: {\n    currencies: 'getSupportedTokens',\n    rate: 'getCryptoRates',\n    gasLimits: 'getGasLimits'\n  },\n  ROP: {\n    currencies: 'getSupportedTokens',\n    rate: 'getCryptoRates',\n    gasLimits: 'getGasLimits'\n  }\n};\nvar FEE_RATE = 0;\nvar MIN_RATE_BUFFER = 0.05; // 5%\n\nvar MAX_DEST_AMOUNT = '1000000000000000000000000000000000000';\nvar TIME_SWAP_VALID = TIME_SWAP_VALID_DEFAULT;\nvar PROVIDER_NAME = 'kybernetwork';\nvar kyberBaseCurrency = 'ETH';\nvar specialGasLimits = {\n  DGX: 750000\n};\nexport { kyberBaseCurrency, FEE_RATE, PROVIDER_NAME, TIME_SWAP_VALID, MAX_DEST_AMOUNT, MIN_RATE_BUFFER, defaultValues, specialGasLimits, kyberTokenList, kyberTokenInfoList, kyberValidNetworks, kyberNetworkENS, walletDepositeAddress, KyberCurrencies, kyberGasLimitList, kyberAddressFallback, kyberMethods };",{"version":3,"sources":["/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/partners/kyber/config/config.js"],"names":["TIME_SWAP_VALID_DEFAULT","KyberCurrenciesETH","KyberCurrenciesROP","KyberCurrenciesKOV","ETH_ENDPINT","ROP_ENDPOINT","kyberTokenList","ETH","ROP","kyberTokenInfoList","kyberGasLimitList","kyberAddressFallback","KOV","KyberCurrencies","walletDepositeAddress","kyberNetworkENS","kyberValidNetworks","defaultValues","tradeGasLimit","tokenToTokenGasLimit","tokenApprovalGasLimit","maxGasPrice","gasPrice","kyberMethods","currencies","rate","gasLimits","FEE_RATE","MIN_RATE_BUFFER","MAX_DEST_AMOUNT","TIME_SWAP_VALID","PROVIDER_NAME","kyberBaseCurrency","specialGasLimits","DGX"],"mappings":"AAAA;AACA,SAASA,uBAAT;AAEA,SAASC,kBAAT;AACA,SAASC,kBAAT;AACA,SAASC,kBAAT;AAEA,IAAMC,WAAW,GAAG,2BAApB;AACA,IAAMC,YAAY,GAAG,mCAArB;AAEA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,GAAG,YAAKH,WAAL,gBADkB;AAErBI,EAAAA,GAAG,YAAKH,YAAL;AAFkB,CAAvB;AAKA,IAAMI,kBAAkB,GAAG;AACzBF,EAAAA,GAAG,YAAKH,WAAL;AADsB,CAA3B;AAIA,IAAMM,iBAAiB,GAAG;AACxBH,EAAAA,GAAG,YAAKH,WAAL,oBADqB;AAExBI,EAAAA,GAAG,YAAKH,YAAL;AAFqB,CAA1B;AAKA,IAAMM,oBAAoB,GAAG;AAC3BJ,EAAAA,GAAG,EAAE,4CADsB;AAE3BC,EAAAA,GAAG,EAAE,4CAFsB;AAG3BI,EAAAA,GAAG,EAAE;AAHsB,CAA7B;AAMA,IAAMC,eAAe,GAAG;AACtBN,EAAAA,GAAG,EAAEN,kBADiB;AAEtBO,EAAAA,GAAG,EAAEN,kBAFiB;AAGtBU,EAAAA,GAAG,EAAET;AAHiB,CAAxB;AAMA,IAAMW,qBAAqB,GAAG,4CAA9B,C,CAA4E;;AAC5E,IAAMC,eAAe,GAAG,kBAAxB;AACA,IAAMC,kBAAkB,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CAA3B;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,aAAa,EAAE,MADK;AAEpBC,EAAAA,oBAAoB,EAAE,MAFF;AAGpBC,EAAAA,qBAAqB,EAAE,MAHH;AAGW;AAC/BC,EAAAA,WAAW,EAAE,WAJO;AAIM;AAC1BC,EAAAA,QAAQ,EAAE,UALU,CAKC;;AALD,CAAtB;AAQA,IAAMC,YAAY,GAAG;AACnBhB,EAAAA,GAAG,EAAE;AACHiB,IAAAA,UAAU,EAAE,oBADT;AAEHC,IAAAA,IAAI,EAAE,gBAFH;AAGHC,IAAAA,SAAS,EAAE;AAHR,GADc;AAMnBlB,EAAAA,GAAG,EAAE;AACHgB,IAAAA,UAAU,EAAE,oBADT;AAEHC,IAAAA,IAAI,EAAE,gBAFH;AAGHC,IAAAA,SAAS,EAAE;AAHR;AANc,CAArB;AAaA,IAAMC,QAAQ,GAAG,CAAjB;AACA,IAAMC,eAAe,GAAG,IAAxB,C,CAA8B;;AAC9B,IAAMC,eAAe,GAAG,uCAAxB;AACA,IAAMC,eAAe,GAAG9B,uBAAxB;AACA,IAAM+B,aAAa,GAAG,cAAtB;AACA,IAAMC,iBAAiB,GAAG,KAA1B;AAEA,IAAMC,gBAAgB,GAAG;AACvBC,EAAAA,GAAG,EAAE;AADkB,CAAzB;AAIA,SACEF,iBADF,EAEEL,QAFF,EAGEI,aAHF,EAIED,eAJF,EAKED,eALF,EAMED,eANF,EAOEX,aAPF,EAQEgB,gBARF,EASE3B,cATF,EAUEG,kBAVF,EAWEO,kBAXF,EAYED,eAZF,EAaED,qBAbF,EAcED,eAdF,EAeEH,iBAfF,EAgBEC,oBAhBF,EAiBEY,YAjBF","sourcesContent":["// TODO: look into only using kyberTokenInfoList for ETH and parsing results differently if ROP?\nimport { TIME_SWAP_VALID_DEFAULT } from '../../partnersConfig/config';\n\nimport { KyberCurrenciesETH } from './currenciesETH';\nimport { KyberCurrenciesROP } from './currenciesROP';\nimport { KyberCurrenciesKOV } from './currenciesKOV';\n\nconst ETH_ENDPINT = 'https://api.kyber.network';\nconst ROP_ENDPOINT = 'https://ropsten-api.kyber.network';\n\nconst kyberTokenList = {\n  ETH: `${ETH_ENDPINT}/currencies`,\n  ROP: `${ROP_ENDPOINT}/currencies`\n};\n\nconst kyberTokenInfoList = {\n  ETH: `${ETH_ENDPINT}/api/tokens/pairs`\n};\n\nconst kyberGasLimitList = {\n  ETH: `${ETH_ENDPINT}/gasLimitConfig`,\n  ROP: `${ROP_ENDPOINT}/gasLimitConfig`\n};\n\nconst kyberAddressFallback = {\n  ETH: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n  ROP: '0x818E6FECD516Ecc3849DAf6845e3EC868087B755',\n  KOV: '0x692f391bCc85cefCe8C237C01e1f636BbD70EA4D'\n};\n\nconst KyberCurrencies = {\n  ETH: KyberCurrenciesETH,\n  ROP: KyberCurrenciesROP,\n  KOV: KyberCurrenciesKOV\n};\n\nconst walletDepositeAddress = '0x4247951c2eb6d0bA38d233fe7d542c8c80c9d46A'; // i.e. where payments go\nconst kyberNetworkENS = 'kybernetwork.eth';\nconst kyberValidNetworks = ['ETH', 'ROP', 'KOV'];\n\nconst defaultValues = {\n  tradeGasLimit: 500000,\n  tokenToTokenGasLimit: 500000,\n  tokenApprovalGasLimit: 150000, //40205,\n  maxGasPrice: 30000000000, // 30 Gwei\n  gasPrice: 2000000000 // 2 Gwei\n};\n\nconst kyberMethods = {\n  ETH: {\n    currencies: 'getSupportedTokens',\n    rate: 'getCryptoRates',\n    gasLimits: 'getGasLimits'\n  },\n  ROP: {\n    currencies: 'getSupportedTokens',\n    rate: 'getCryptoRates',\n    gasLimits: 'getGasLimits'\n  }\n};\n\nconst FEE_RATE = 0;\nconst MIN_RATE_BUFFER = 0.05; // 5%\nconst MAX_DEST_AMOUNT = '1000000000000000000000000000000000000';\nconst TIME_SWAP_VALID = TIME_SWAP_VALID_DEFAULT;\nconst PROVIDER_NAME = 'kybernetwork';\nconst kyberBaseCurrency = 'ETH';\n\nconst specialGasLimits = {\n  DGX: 750000\n};\n\nexport {\n  kyberBaseCurrency,\n  FEE_RATE,\n  PROVIDER_NAME,\n  TIME_SWAP_VALID,\n  MAX_DEST_AMOUNT,\n  MIN_RATE_BUFFER,\n  defaultValues,\n  specialGasLimits,\n  kyberTokenList,\n  kyberTokenInfoList,\n  kyberValidNetworks,\n  kyberNetworkENS,\n  walletDepositeAddress,\n  KyberCurrencies,\n  kyberGasLimitList,\n  kyberAddressFallback,\n  kyberMethods\n};\n"]}]}