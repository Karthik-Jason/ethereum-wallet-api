{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/eslint-loader/index.js??ref--13-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/networks/index.js","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/networks/index.js","mtime":1573477612088},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\n\nvar platform = require('platform');\n\nimport * as types from \"./types\";\nimport * as nodes from \"./nodes\";\nvar nodeList = {};\nObject.keys(types).forEach(function (key) {\n  nodeList[types[key].name] = [];\n});\nObject.keys(nodes).forEach(function (key) {\n  if (nodes[key].service === nodes['ethmew'].service) {\n    nodeList[nodes[key].type.name].splice(0, 0, nodes[key]);\n  } else if (nodes[key].service === 'infura.io' && platform.name && platform.name === 'firefox') return; // temp until infura fix https://github.com/INFURA/infura/issues/174\n  else {\n      nodeList[nodes[key].type.name].push(nodes[key]);\n    }\n});\n\nif (BUILD_TYPE === 'mewcx') {\n  var obj = {};\n  Object.keys(nodeList).forEach(function (network) {\n    obj[network] = nodeList[network].filter(function (item) {\n      return item.service.includes('-ws');\n    });\n  });\n  Object.keys(obj).forEach(function (network) {\n    if (obj[network].length === 0) {\n      delete obj[network];\n    }\n  });\n  nodeList = Object.assign({}, obj);\n}\n\nexport default nodeList;",{"version":3,"sources":["/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/networks/index.js"],"names":["platform","require","types","nodes","nodeList","Object","keys","forEach","key","name","service","type","splice","push","BUILD_TYPE","obj","network","filter","item","includes","length","assign"],"mappings":";;;;;;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,OAAO,KAAKC,KAAZ;AACA,OAAO,KAAKC,KAAZ;AAEA,IAAIC,QAAQ,GAAG,EAAf;AACAC,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmBK,OAAnB,CAA2B,UAAAC,GAAG,EAAI;AAChCJ,EAAAA,QAAQ,CAACF,KAAK,CAACM,GAAD,CAAL,CAAWC,IAAZ,CAAR,GAA4B,EAA5B;AACD,CAFD;AAIAJ,MAAM,CAACC,IAAP,CAAYH,KAAZ,EAAmBI,OAAnB,CAA2B,UAAAC,GAAG,EAAI;AAChC,MAAIL,KAAK,CAACK,GAAD,CAAL,CAAWE,OAAX,KAAuBP,KAAK,CAAC,QAAD,CAAL,CAAgBO,OAA3C,EAAoD;AAClDN,IAAAA,QAAQ,CAACD,KAAK,CAACK,GAAD,CAAL,CAAWG,IAAX,CAAgBF,IAAjB,CAAR,CAA+BG,MAA/B,CAAsC,CAAtC,EAAyC,CAAzC,EAA4CT,KAAK,CAACK,GAAD,CAAjD;AACD,GAFD,MAEO,IACLL,KAAK,CAACK,GAAD,CAAL,CAAWE,OAAX,KAAuB,WAAvB,IACAV,QAAQ,CAACS,IADT,IAEAT,QAAQ,CAACS,IAAT,KAAkB,SAHb,EAKL,OALK,CAMP;AANO,OAOF;AACHL,MAAAA,QAAQ,CAACD,KAAK,CAACK,GAAD,CAAL,CAAWG,IAAX,CAAgBF,IAAjB,CAAR,CAA+BI,IAA/B,CAAoCV,KAAK,CAACK,GAAD,CAAzC;AACD;AACF,CAbD;;AAeA,IAAIM,UAAU,KAAK,OAAnB,EAA4B;AAC1B,MAAMC,GAAG,GAAG,EAAZ;AACAV,EAAAA,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsBG,OAAtB,CAA8B,UAAAS,OAAO,EAAI;AACvCD,IAAAA,GAAG,CAACC,OAAD,CAAH,GAAeZ,QAAQ,CAACY,OAAD,CAAR,CAAkBC,MAAlB,CAAyB,UAAAC,IAAI,EAAI;AAC9C,aAAOA,IAAI,CAACR,OAAL,CAAaS,QAAb,CAAsB,KAAtB,CAAP;AACD,KAFc,CAAf;AAGD,GAJD;AAMAd,EAAAA,MAAM,CAACC,IAAP,CAAYS,GAAZ,EAAiBR,OAAjB,CAAyB,UAAAS,OAAO,EAAI;AAClC,QAAID,GAAG,CAACC,OAAD,CAAH,CAAaI,MAAb,KAAwB,CAA5B,EAA+B;AAC7B,aAAOL,GAAG,CAACC,OAAD,CAAV;AACD;AACF,GAJD;AAMAZ,EAAAA,QAAQ,GAAGC,MAAM,CAACgB,MAAP,CAAc,EAAd,EAAkBN,GAAlB,CAAX;AACD;;AAED,eAAeX,QAAf","sourcesContent":["const platform = require('platform');\nimport * as types from './types';\nimport * as nodes from './nodes';\n\nlet nodeList = {};\nObject.keys(types).forEach(key => {\n  nodeList[types[key].name] = [];\n});\n\nObject.keys(nodes).forEach(key => {\n  if (nodes[key].service === nodes['ethmew'].service) {\n    nodeList[nodes[key].type.name].splice(0, 0, nodes[key]);\n  } else if (\n    nodes[key].service === 'infura.io' &&\n    platform.name &&\n    platform.name === 'firefox'\n  )\n    return;\n  // temp until infura fix https://github.com/INFURA/infura/issues/174\n  else {\n    nodeList[nodes[key].type.name].push(nodes[key]);\n  }\n});\n\nif (BUILD_TYPE === 'mewcx') {\n  const obj = {};\n  Object.keys(nodeList).forEach(network => {\n    obj[network] = nodeList[network].filter(item => {\n      return item.service.includes('-ws');\n    });\n  });\n\n  Object.keys(obj).forEach(network => {\n    if (obj[network].length === 0) {\n      delete obj[network];\n    }\n  });\n\n  nodeList = Object.assign({}, obj);\n}\n\nexport default nodeList;\n"]}]}