{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/eslint-loader/index.js??ref--13-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/partners/changelly/changelly-calls.js","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/partners/changelly/changelly-calls.js","mtime":1573477612092},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport { post } from '@/helpers/httpRequests';\nimport { changellyMethods } from \"./config\";\nimport { swapApiEndpoints } from \"../partnersConfig\";\nimport { utils } from \"../helpers\";\n\nfunction buildPath() {\n  return swapApiEndpoints.base + swapApiEndpoints.changelly;\n}\n\nvar getCurrencies =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(network) {\n    var results;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n\n            if (!changellyMethods[network]) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 4;\n            return post(buildPath(), utils.buildPayload(changellyMethods[network].currenciesFull, {}));\n\n          case 4:\n            results = _context.sent;\n\n            if (!results.error) {\n              _context.next = 7;\n              break;\n            }\n\n            throw Error(results.error.message);\n\n          case 7:\n            return _context.abrupt(\"return\", results.result);\n\n          case 8:\n            return _context.abrupt(\"return\", Promise.resolve({}));\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            utils.handleOrThrow(_context.t0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 11]]);\n  }));\n\n  return function getCurrencies(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar getRate =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(fromCurrency, toCurrency, fromValue, network) {\n    var results;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n\n            if (!changellyMethods[network]) {\n              _context2.next = 8;\n              break;\n            }\n\n            _context2.next = 4;\n            return post(buildPath(), utils.buildPayload(changellyMethods[network].rate, [{\n              from: fromCurrency,\n              to: toCurrency,\n              amount: fromValue\n            }]));\n\n          case 4:\n            results = _context2.sent;\n\n            if (!results.error) {\n              _context2.next = 7;\n              break;\n            }\n\n            throw Error(results.error.message);\n\n          case 7:\n            return _context2.abrupt(\"return\", results.result);\n\n          case 8:\n            return _context2.abrupt(\"return\", Promise.resolve(-1));\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](0);\n            utils.handleOrThrow(_context2.t0);\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 11]]);\n  }));\n\n  return function getRate(_x2, _x3, _x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar getResultAmount =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(fromCurrency, toCurrency, fromValue, network) {\n    var results;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n\n            if (!changellyMethods[network]) {\n              _context3.next = 8;\n              break;\n            }\n\n            _context3.next = 4;\n            return post(buildPath(), utils.buildPayload(changellyMethods[network].rate, {\n              from: fromCurrency,\n              to: toCurrency,\n              amount: fromValue\n            }));\n\n          case 4:\n            results = _context3.sent;\n\n            if (!results.error) {\n              _context3.next = 7;\n              break;\n            }\n\n            throw Error(results.error.message);\n\n          case 7:\n            return _context3.abrupt(\"return\", results.result);\n\n          case 8:\n            return _context3.abrupt(\"return\", Promise.resolve(-1));\n\n          case 11:\n            _context3.prev = 11;\n            _context3.t0 = _context3[\"catch\"](0);\n            utils.handleOrThrow(_context3.t0);\n\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 11]]);\n  }));\n\n  return function getResultAmount(_x6, _x7, _x8, _x9) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar getMin =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(fromCurrency, toCurrency, fromValue, network) {\n    var results;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n\n            if (!changellyMethods[network]) {\n              _context4.next = 8;\n              break;\n            }\n\n            _context4.next = 4;\n            return post(buildPath(), utils.buildPayload(changellyMethods[network].min, {\n              from: fromCurrency,\n              to: toCurrency\n            }));\n\n          case 4:\n            results = _context4.sent;\n\n            if (!results.error) {\n              _context4.next = 7;\n              break;\n            }\n\n            throw Error(results.error.message);\n\n          case 7:\n            return _context4.abrupt(\"return\", results.result);\n\n          case 8:\n            return _context4.abrupt(\"return\", Promise.resolve(-1));\n\n          case 11:\n            _context4.prev = 11;\n            _context4.t0 = _context4[\"catch\"](0);\n            utils.handleOrThrow(_context4.t0);\n\n          case 14:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 11]]);\n  }));\n\n  return function getMin(_x10, _x11, _x12, _x13) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar validateAddress =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(addressDetails, network) {\n    var results;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n\n            if (!changellyMethods[network]) {\n              _context5.next = 8;\n              break;\n            }\n\n            _context5.next = 4;\n            return post(buildPath(), utils.buildPayload(changellyMethods[network].validate, addressDetails));\n\n          case 4:\n            results = _context5.sent;\n\n            if (!results.error) {\n              _context5.next = 7;\n              break;\n            }\n\n            throw Error(results.error.message);\n\n          case 7:\n            return _context5.abrupt(\"return\", results.result);\n\n          case 8:\n            return _context5.abrupt(\"return\", Promise.resolve(-1));\n\n          case 11:\n            _context5.prev = 11;\n            _context5.t0 = _context5[\"catch\"](0);\n            utils.handleOrThrow(_context5.t0);\n\n          case 14:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 11]]);\n  }));\n\n  return function validateAddress(_x14, _x15) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nvar createTransaction =\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6(transactionParams, network) {\n    var results;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n\n            if (!changellyMethods[network]) {\n              _context6.next = 8;\n              break;\n            }\n\n            _context6.next = 4;\n            return post(buildPath(), utils.buildPayload(changellyMethods[network].createTransaction, transactionParams));\n\n          case 4:\n            results = _context6.sent;\n\n            if (!results.error) {\n              _context6.next = 7;\n              break;\n            }\n\n            throw Error(results.error.message);\n\n          case 7:\n            return _context6.abrupt(\"return\", results.result);\n\n          case 8:\n            return _context6.abrupt(\"return\", Promise.resolve(-1));\n\n          case 11:\n            _context6.prev = 11;\n            _context6.t0 = _context6[\"catch\"](0);\n            utils.handleOrThrow(_context6.t0);\n\n          case 14:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[0, 11]]);\n  }));\n\n  return function createTransaction(_x16, _x17) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nvar getStatus =\n/*#__PURE__*/\nfunction () {\n  var _ref7 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee7(orderId, network) {\n    var results;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.prev = 0;\n\n            if (!changellyMethods[network]) {\n              _context7.next = 8;\n              break;\n            }\n\n            _context7.next = 4;\n            return post(buildPath(), utils.buildPayload(changellyMethods[network].status, {\n              id: orderId\n            }));\n\n          case 4:\n            results = _context7.sent;\n\n            if (!results.error) {\n              _context7.next = 7;\n              break;\n            }\n\n            throw Error(results.error.message);\n\n          case 7:\n            return _context7.abrupt(\"return\", results.result);\n\n          case 8:\n            throw Error(\"Changelly does not support \".concat(network, \" network\"));\n\n          case 11:\n            _context7.prev = 11;\n            _context7.t0 = _context7[\"catch\"](0);\n            utils.handleOrThrow(_context7.t0);\n\n          case 14:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[0, 11]]);\n  }));\n\n  return function getStatus(_x18, _x19) {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\nvar login = function login() {\n  return Promise.resolve({});\n};\n\nvar getFixRate =\n/*#__PURE__*/\nfunction () {\n  var _ref8 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee8(fromCurrency, toCurrency, fromValue, network) {\n    var results;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.prev = 0;\n\n            if (!changellyMethods[network]) {\n              _context8.next = 8;\n              break;\n            }\n\n            _context8.next = 4;\n            return post(buildPath(), utils.buildPayload(changellyMethods[network].getFixRate, [{\n              from: fromCurrency,\n              to: toCurrency\n            }]));\n\n          case 4:\n            results = _context8.sent;\n\n            if (!results.error) {\n              _context8.next = 7;\n              break;\n            }\n\n            throw Error(results.error.message);\n\n          case 7:\n            return _context8.abrupt(\"return\", results.result);\n\n          case 8:\n            return _context8.abrupt(\"return\", Promise.resolve(-1));\n\n          case 11:\n            _context8.prev = 11;\n            _context8.t0 = _context8[\"catch\"](0);\n            utils.handleOrThrow(_context8.t0);\n\n          case 14:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[0, 11]]);\n  }));\n\n  return function getFixRate(_x20, _x21, _x22, _x23) {\n    return _ref8.apply(this, arguments);\n  };\n}();\n\nvar createFixTransaction =\n/*#__PURE__*/\nfunction () {\n  var _ref9 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee9(transactionParams, network) {\n    var results;\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.prev = 0;\n\n            if (!changellyMethods[network]) {\n              _context9.next = 8;\n              break;\n            }\n\n            _context9.next = 4;\n            return post(buildPath(), utils.buildPayload(changellyMethods[network].createFixTransaction, transactionParams));\n\n          case 4:\n            results = _context9.sent;\n\n            if (!results.error) {\n              _context9.next = 7;\n              break;\n            }\n\n            throw Error(results.error.message);\n\n          case 7:\n            return _context9.abrupt(\"return\", results.result);\n\n          case 8:\n            return _context9.abrupt(\"return\", Promise.resolve(-1));\n\n          case 11:\n            _context9.prev = 11;\n            _context9.t0 = _context9[\"catch\"](0);\n            utils.handleOrThrow(_context9.t0);\n\n          case 14:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9, null, [[0, 11]]);\n  }));\n\n  return function createFixTransaction(_x24, _x25) {\n    return _ref9.apply(this, arguments);\n  };\n}();\n\nexport default {\n  getCurrencies: getCurrencies,\n  getRate: getRate,\n  getResultAmount: getResultAmount,\n  getMin: getMin,\n  validateAddress: validateAddress,\n  createTransaction: createTransaction,\n  getStatus: getStatus,\n  login: login,\n  getFixRate: getFixRate,\n  createFixTransaction: createFixTransaction\n};",{"version":3,"sources":["/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/partners/changelly/changelly-calls.js"],"names":["post","changellyMethods","swapApiEndpoints","utils","buildPath","base","changelly","getCurrencies","network","buildPayload","currenciesFull","results","error","Error","message","result","Promise","resolve","handleOrThrow","getRate","fromCurrency","toCurrency","fromValue","rate","from","to","amount","getResultAmount","getMin","min","validateAddress","addressDetails","validate","createTransaction","transactionParams","getStatus","orderId","status","id","login","getFixRate","createFixTransaction"],"mappings":"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","sourcesContent":["import { post } from '@/helpers/httpRequests';\nimport { changellyMethods } from './config';\nimport { swapApiEndpoints } from '../partnersConfig';\nimport { utils } from '../helpers';\n\nfunction buildPath() {\n  return swapApiEndpoints.base + swapApiEndpoints.changelly;\n}\n\nconst getCurrencies = async network => {\n  try {\n    if (changellyMethods[network]) {\n      const results = await post(\n        buildPath(),\n        utils.buildPayload(changellyMethods[network].currenciesFull, {})\n      );\n\n      if (results.error) {\n        throw Error(results.error.message);\n      }\n\n      return results.result;\n    }\n    return Promise.resolve({});\n  } catch (e) {\n    utils.handleOrThrow(e);\n  }\n};\n\nconst getRate = async (fromCurrency, toCurrency, fromValue, network) => {\n  try {\n    if (changellyMethods[network]) {\n      const results = await post(\n        buildPath(),\n        utils.buildPayload(changellyMethods[network].rate, [\n          {\n            from: fromCurrency,\n            to: toCurrency,\n            amount: fromValue\n          }\n        ])\n      );\n\n      if (results.error) {\n        throw Error(results.error.message);\n      }\n      return results.result;\n    }\n    return Promise.resolve(-1);\n  } catch (e) {\n    utils.handleOrThrow(e);\n  }\n};\n\nconst getResultAmount = async (\n  fromCurrency,\n  toCurrency,\n  fromValue,\n  network\n) => {\n  try {\n    if (changellyMethods[network]) {\n      const results = await post(\n        buildPath(),\n        utils.buildPayload(changellyMethods[network].rate, {\n          from: fromCurrency,\n          to: toCurrency,\n          amount: fromValue\n        })\n      );\n\n      if (results.error) {\n        throw Error(results.error.message);\n      }\n      return results.result;\n    }\n    return Promise.resolve(-1);\n  } catch (e) {\n    utils.handleOrThrow(e);\n  }\n};\n\nconst getMin = async (fromCurrency, toCurrency, fromValue, network) => {\n  try {\n    if (changellyMethods[network]) {\n      const results = await post(\n        buildPath(),\n        utils.buildPayload(changellyMethods[network].min, {\n          from: fromCurrency,\n          to: toCurrency\n        })\n      );\n\n      if (results.error) {\n        throw Error(results.error.message);\n      }\n\n      return results.result;\n    }\n    return Promise.resolve(-1);\n  } catch (e) {\n    utils.handleOrThrow(e);\n  }\n};\n\nconst validateAddress = async (addressDetails, network) => {\n  try {\n    if (changellyMethods[network]) {\n      const results = await post(\n        buildPath(),\n        utils.buildPayload(changellyMethods[network].validate, addressDetails)\n      );\n\n      if (results.error) {\n        throw Error(results.error.message);\n      }\n\n      return results.result;\n    }\n    return Promise.resolve(-1);\n  } catch (e) {\n    utils.handleOrThrow(e);\n  }\n};\n\nconst createTransaction = async (transactionParams, network) => {\n  try {\n    if (changellyMethods[network]) {\n      const results = await post(\n        buildPath(),\n        utils.buildPayload(\n          changellyMethods[network].createTransaction,\n          transactionParams\n        )\n      );\n\n      if (results.error) {\n        throw Error(results.error.message);\n      }\n\n      return results.result;\n    }\n    return Promise.resolve(-1);\n  } catch (e) {\n    utils.handleOrThrow(e);\n  }\n};\n\nconst getStatus = async (orderId, network) => {\n  try {\n    if (changellyMethods[network]) {\n      const results = await post(\n        buildPath(),\n        utils.buildPayload(changellyMethods[network].status, {\n          id: orderId\n        })\n      );\n\n      if (results.error) {\n        throw Error(results.error.message);\n      }\n\n      return results.result;\n    }\n    throw Error(`Changelly does not support ${network} network`);\n  } catch (e) {\n    utils.handleOrThrow(e);\n  }\n};\n\nconst login = () => {\n  return Promise.resolve({});\n};\n\nconst getFixRate = async (fromCurrency, toCurrency, fromValue, network) => {\n  try {\n    if (changellyMethods[network]) {\n      const results = await post(\n        buildPath(),\n        utils.buildPayload(changellyMethods[network].getFixRate, [\n          {\n            from: fromCurrency,\n            to: toCurrency\n          }\n        ])\n      );\n\n      if (results.error) {\n        throw Error(results.error.message);\n      }\n      return results.result;\n    }\n    return Promise.resolve(-1);\n  } catch (e) {\n    utils.handleOrThrow(e);\n  }\n};\n\nconst createFixTransaction = async (transactionParams, network) => {\n  try {\n    if (changellyMethods[network]) {\n      const results = await post(\n        buildPath(),\n        utils.buildPayload(\n          changellyMethods[network].createFixTransaction,\n          transactionParams\n        )\n      );\n\n      if (results.error) {\n        throw Error(results.error.message);\n      }\n\n      return results.result;\n    }\n    return Promise.resolve(-1);\n  } catch (e) {\n    utils.handleOrThrow(e);\n  }\n};\n\nexport default {\n  getCurrencies,\n  getRate,\n  getResultAmount,\n  getMin,\n  validateAddress,\n  createTransaction,\n  getStatus,\n  login,\n  getFixRate,\n  createFixTransaction\n};\n"]}]}