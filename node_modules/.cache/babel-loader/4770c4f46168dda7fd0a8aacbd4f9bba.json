{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/eslint-loader/index.js??ref--13-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/partners/helpers/sortAndIdentify.js","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/partners/helpers/sortAndIdentify.js","mtime":1574664278314},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js","mtime":1574664275010},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/eslint-loader/index.js","mtime":1574664275986}],"contextDependencies":[],"result":["import _toConsumableArray from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.array.sort\";\n\n/* from https://stackoverflow.com/questions/1129216/sort-array-of-objects-by-string-property-value/4760279#4760279\n   Use `-` to reverse the sort order for the specified property */\nfunction dynamicSort(property, convertFunc) {\n  var sortOrder = 1;\n\n  if (property[0] === '-') {\n    sortOrder = -1;\n    property = property.substr(1);\n  }\n\n  return function (a, b) {\n    if (convertFunc) {\n      var _result = convertFunc(+a[property]) < convertFunc(+b[property]) ? -1 : convertFunc(+a[property]) > convertFunc(+b[property]) ? 1 : 0;\n\n      return _result * sortOrder;\n    }\n\n    var result = +a[property] < +b[property] ? -1 : +a[property] > +b[property] ? 1 : 0;\n    return result * sortOrder;\n  };\n}\n\nfunction dynamicSortMultiple() {\n  var props = arguments;\n  return function (obj1, obj2) {\n    var i = 0;\n    var result = 0;\n    var numberOfProperties = props.length;\n\n    while (result === 0 && i < numberOfProperties) {\n      if (Array.isArray(props[i])) {\n        try {\n          if (typeof props[i][1] === 'function') {\n            result = dynamicSort(props[i][0], props[i][1])(obj1, obj2);\n          }\n        } catch (e) {\n          result = dynamicSort(props[i][0])(obj1, obj2);\n        }\n      } else {\n        result = dynamicSort(props[i])(obj1, obj2);\n      }\n\n      i++;\n    }\n\n    return result;\n  };\n}\n\nfunction cleanUndefined(providerData) {\n  return providerData.filter(function (entry) {\n    return typeof entry !== 'undefined';\n  });\n}\n\nfunction bestProviderForQuantity(providerData, value) {\n  providerData = cleanUndefined(providerData);\n\n  if (providerData.every(function (entry) {\n    return value >= +entry.minValue;\n  })) {\n    providerData.sort(dynamicSortMultiple('-rate'));\n  } else if (providerData.some(function (entry) {\n    return value >= +entry.minValue;\n  })) {\n    providerData = [].concat(_toConsumableArray(providerData.filter(function (entry) {\n      return value >= entry.minValue;\n    }).sort(dynamicSortMultiple('-rate'))), _toConsumableArray(providerData.filter(function (entry) {\n      return value < entry.minValue;\n    }).sort(dynamicSortMultiple('-rate', 'minValue'))));\n  } else {\n    providerData.sort(dynamicSortMultiple('-rate', 'minValue'));\n  }\n\n  return providerData;\n}\n\nfunction bestRateForQuantity(providerData, value) {\n  var data = bestProviderForQuantity(providerData, +value);\n\n  for (var i = 0; i < data.length; i++) {\n    if (+value >= +data[i].minValue) {\n      return +data[i].rate;\n    } else if (+data[i].minValue === 0) {\n      return +data[i].rate;\n    }\n  }\n\n  return -1;\n}\n\nexport { bestRateForQuantity, bestProviderForQuantity, dynamicSortMultiple };",{"version":3,"sources":["/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/partners/helpers/sortAndIdentify.js"],"names":["dynamicSort","property","convertFunc","sortOrder","substr","a","b","result","dynamicSortMultiple","props","arguments","obj1","obj2","i","numberOfProperties","length","Array","isArray","e","cleanUndefined","providerData","filter","entry","bestProviderForQuantity","value","every","minValue","sort","some","bestRateForQuantity","data","rate"],"mappings":"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","sourcesContent":["/* from https://stackoverflow.com/questions/1129216/sort-array-of-objects-by-string-property-value/4760279#4760279\n   Use `-` to reverse the sort order for the specified property */\nfunction dynamicSort(property, convertFunc) {\n  let sortOrder = 1;\n  if (property[0] === '-') {\n    sortOrder = -1;\n    property = property.substr(1);\n  }\n  return function(a, b) {\n    if (convertFunc) {\n      const result =\n        convertFunc(+a[property]) < convertFunc(+b[property])\n          ? -1\n          : convertFunc(+a[property]) > convertFunc(+b[property])\n          ? 1\n          : 0;\n      return result * sortOrder;\n    }\n    const result =\n      +a[property] < +b[property] ? -1 : +a[property] > +b[property] ? 1 : 0;\n    return result * sortOrder;\n  };\n}\n\nfunction dynamicSortMultiple() {\n  const props = arguments;\n  return function(obj1, obj2) {\n    let i = 0;\n    let result = 0;\n    const numberOfProperties = props.length;\n    while (result === 0 && i < numberOfProperties) {\n      if (Array.isArray(props[i])) {\n        try {\n          if (typeof props[i][1] === 'function') {\n            result = dynamicSort(props[i][0], props[i][1])(obj1, obj2);\n          }\n        } catch (e) {\n          result = dynamicSort(props[i][0])(obj1, obj2);\n        }\n      } else {\n        result = dynamicSort(props[i])(obj1, obj2);\n      }\n      i++;\n    }\n    return result;\n  };\n}\nfunction cleanUndefined(providerData) {\n  return providerData.filter(entry => typeof entry !== 'undefined');\n}\n\nfunction bestProviderForQuantity(providerData, value) {\n  providerData = cleanUndefined(providerData);\n  if (providerData.every(entry => value >= +entry.minValue)) {\n    providerData.sort(dynamicSortMultiple('-rate'));\n  } else if (providerData.some(entry => value >= +entry.minValue)) {\n    providerData = [\n      ...providerData\n        .filter(entry => value >= entry.minValue)\n        .sort(dynamicSortMultiple('-rate')),\n      ...providerData\n        .filter(entry => value < entry.minValue)\n        .sort(dynamicSortMultiple('-rate', 'minValue'))\n    ];\n  } else {\n    providerData.sort(dynamicSortMultiple('-rate', 'minValue'));\n  }\n  return providerData;\n}\n\nfunction bestRateForQuantity(providerData, value) {\n  const data = bestProviderForQuantity(providerData, +value);\n  for (let i = 0; i < data.length; i++) {\n    if (+value >= +data[i].minValue) {\n      return +data[i].rate;\n    } else if (+data[i].minValue === 0) {\n      return +data[i].rate;\n    }\n  }\n  return -1;\n}\n\nexport { bestRateForQuantity, bestProviderForQuantity, dynamicSortMultiple };\n"]}]}