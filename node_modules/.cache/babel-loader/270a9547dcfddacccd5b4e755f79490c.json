{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/eslint-loader/index.js??ref--13-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/wallets/web3-provider/providers/pocket-provider.js","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/wallets/web3-provider/providers/pocket-provider.js","mtime":1574664278326},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js","mtime":1574664275010},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/eslint-loader/index.js","mtime":1574664275986}],"contextDependencies":[],"result":["import _classCallCheck from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport PocketRequestManger from \"./pocket-request-manager\";\nimport MiddleWare from \"../middleware\";\nimport { ethSendTransaction, ethSignTransaction, ethSign, ethAccounts, ethCoinbase, ethGetTransactionCount, ethGetTransactionReceipt, ethGetBlockByNumber, ethGetBlockNumber, netVersion } from \"../methods\";\n\nvar PocketProvider = function PocketProvider(host, options, store, eventHub) {\n  _classCallCheck(this, PocketProvider);\n\n  var requestManager = new PocketRequestManger(host);\n  this.PocketProvider = {\n    send: function send(payload, callback) {\n      var req = {\n        payload: payload,\n        store: store,\n        requestManager: requestManager,\n        eventHub: eventHub\n      };\n      var middleware = new MiddleWare();\n      middleware.use(ethSendTransaction);\n      middleware.use(ethSignTransaction);\n      middleware.use(ethGetTransactionCount);\n      middleware.use(ethGetTransactionReceipt);\n      middleware.use(ethSign);\n      middleware.use(ethAccounts);\n      middleware.use(ethCoinbase);\n      middleware.use(ethGetBlockByNumber);\n      middleware.use(ethGetBlockNumber);\n      middleware.use(netVersion);\n      middleware.run(req, callback).then(function () {\n        requestManager.provider.send(payload, callback);\n      });\n    }\n  };\n  return this.PocketProvider;\n};\n\nexport default PocketProvider;",{"version":3,"sources":["/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/wallets/web3-provider/providers/pocket-provider.js"],"names":["PocketRequestManger","MiddleWare","ethSendTransaction","ethSignTransaction","ethSign","ethAccounts","ethCoinbase","ethGetTransactionCount","ethGetTransactionReceipt","ethGetBlockByNumber","ethGetBlockNumber","netVersion","PocketProvider","host","options","store","eventHub","requestManager","send","payload","callback","req","middleware","use","run","then","provider"],"mappings":";AAAA,OAAOA,mBAAP;AACA,OAAOC,UAAP;AACA,SACEC,kBADF,EAEEC,kBAFF,EAGEC,OAHF,EAIEC,WAJF,EAKEC,WALF,EAMEC,sBANF,EAOEC,wBAPF,EAQEC,mBARF,EASEC,iBATF,EAUEC,UAVF;;IAYMC,c,GACJ,wBAAYC,IAAZ,EAAkBC,OAAlB,EAA2BC,KAA3B,EAAkCC,QAAlC,EAA4C;AAAA;;AAC1C,MAAMC,cAAc,GAAG,IAAIjB,mBAAJ,CAAwBa,IAAxB,CAAvB;AACA,OAAKD,cAAL,GAAsB;AACpBM,IAAAA,IAAI,EAAE,cAACC,OAAD,EAAUC,QAAV,EAAuB;AAC3B,UAAMC,GAAG,GAAG;AACVF,QAAAA,OAAO,EAAPA,OADU;AAEVJ,QAAAA,KAAK,EAALA,KAFU;AAGVE,QAAAA,cAAc,EAAdA,cAHU;AAIVD,QAAAA,QAAQ,EAARA;AAJU,OAAZ;AAMA,UAAMM,UAAU,GAAG,IAAIrB,UAAJ,EAAnB;AACAqB,MAAAA,UAAU,CAACC,GAAX,CAAerB,kBAAf;AACAoB,MAAAA,UAAU,CAACC,GAAX,CAAepB,kBAAf;AACAmB,MAAAA,UAAU,CAACC,GAAX,CAAehB,sBAAf;AACAe,MAAAA,UAAU,CAACC,GAAX,CAAef,wBAAf;AACAc,MAAAA,UAAU,CAACC,GAAX,CAAenB,OAAf;AACAkB,MAAAA,UAAU,CAACC,GAAX,CAAelB,WAAf;AACAiB,MAAAA,UAAU,CAACC,GAAX,CAAejB,WAAf;AACAgB,MAAAA,UAAU,CAACC,GAAX,CAAed,mBAAf;AACAa,MAAAA,UAAU,CAACC,GAAX,CAAeb,iBAAf;AACAY,MAAAA,UAAU,CAACC,GAAX,CAAeZ,UAAf;AACAW,MAAAA,UAAU,CAACE,GAAX,CAAeH,GAAf,EAAoBD,QAApB,EAA8BK,IAA9B,CAAmC,YAAM;AACvCR,QAAAA,cAAc,CAACS,QAAf,CAAwBR,IAAxB,CAA6BC,OAA7B,EAAsCC,QAAtC;AACD,OAFD;AAGD;AAtBmB,GAAtB;AAwBA,SAAO,KAAKR,cAAZ;AACD,C;;AAEH,eAAeA,cAAf","sourcesContent":["import PocketRequestManger from './pocket-request-manager';\nimport MiddleWare from '../middleware';\nimport {\n  ethSendTransaction,\n  ethSignTransaction,\n  ethSign,\n  ethAccounts,\n  ethCoinbase,\n  ethGetTransactionCount,\n  ethGetTransactionReceipt,\n  ethGetBlockByNumber,\n  ethGetBlockNumber,\n  netVersion\n} from '../methods';\nclass PocketProvider {\n  constructor(host, options, store, eventHub) {\n    const requestManager = new PocketRequestManger(host);\n    this.PocketProvider = {\n      send: (payload, callback) => {\n        const req = {\n          payload,\n          store,\n          requestManager,\n          eventHub\n        };\n        const middleware = new MiddleWare();\n        middleware.use(ethSendTransaction);\n        middleware.use(ethSignTransaction);\n        middleware.use(ethGetTransactionCount);\n        middleware.use(ethGetTransactionReceipt);\n        middleware.use(ethSign);\n        middleware.use(ethAccounts);\n        middleware.use(ethCoinbase);\n        middleware.use(ethGetBlockByNumber);\n        middleware.use(ethGetBlockNumber);\n        middleware.use(netVersion);\n        middleware.run(req, callback).then(() => {\n          requestManager.provider.send(payload, callback);\n        });\n      }\n    };\n    return this.PocketProvider;\n  }\n}\nexport default PocketProvider;\n"]}]}