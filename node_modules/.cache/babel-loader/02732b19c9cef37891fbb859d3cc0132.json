{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/eslint-loader/index.js??ref--13-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/helpers/addressUtils.js","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/helpers/addressUtils.js","mtime":1574664278286},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/thread-loader/dist/cjs.js","mtime":1574664277654},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js","mtime":1574664275010},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/eslint-loader/index.js","mtime":1574664275986}],"contextDependencies":[],"result":["import store from '@/store';\nimport { isValidChecksumAddress as isValidRSKChecksumAddress, toChecksumAddress as toRSKChecksumAddress } from 'rskjs-util';\nimport { RSK, RSKTEST } from '@/networks/types';\nimport web3 from 'web3';\n\nvar isAddress = function isAddress(address) {\n  if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n    return false;\n  } else if (/^(0x|0X)?[0-9a-f]{40}$/.test(address) || /^(0x|0X)?[0-9A-F]{40}$/.test(address)) {\n    return true;\n  }\n\n  var chainID = store.state.network ? store.state.network.type.chainID : 1;\n  if (chainID === RSK.chainID || chainID === RSKTEST.chainID) return isValidRSKChecksumAddress(address, chainID);\n  return web3.utils.checkAddressChecksum(address);\n};\n\nvar toChecksumAddress = function toChecksumAddress(address) {\n  var chainID = store.state.network ? store.state.network.type.chainID : 1;\n  if (chainID === RSK.chainID || chainID === RSKTEST.chainID) return toRSKChecksumAddress(address, chainID);\n  return web3.utils.toChecksumAddress(address);\n};\n\nexport { isAddress, toChecksumAddress };",{"version":3,"sources":["/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/helpers/addressUtils.js"],"names":["store","isValidChecksumAddress","isValidRSKChecksumAddress","toChecksumAddress","toRSKChecksumAddress","RSK","RSKTEST","web3","isAddress","address","test","chainID","state","network","type","utils","checkAddressChecksum"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;AAEA,SACEC,sBAAsB,IAAIC,yBAD5B,EAEEC,iBAAiB,IAAIC,oBAFvB,QAGO,YAHP;AAIA,SAASC,GAAT,EAAcC,OAAd,QAA6B,kBAA7B;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,OAAO,EAAI;AAC3B,MAAI,CAAC,uBAAuBC,IAAvB,CAA4BD,OAA5B,CAAL,EAA2C;AACzC,WAAO,KAAP;AACD,GAFD,MAEO,IACL,yBAAyBC,IAAzB,CAA8BD,OAA9B,KACA,yBAAyBC,IAAzB,CAA8BD,OAA9B,CAFK,EAGL;AACA,WAAO,IAAP;AACD;;AACD,MAAME,OAAO,GAAGX,KAAK,CAACY,KAAN,CAAYC,OAAZ,GAAsBb,KAAK,CAACY,KAAN,CAAYC,OAAZ,CAAoBC,IAApB,CAAyBH,OAA/C,GAAyD,CAAzE;AACA,MAAIA,OAAO,KAAKN,GAAG,CAACM,OAAhB,IAA2BA,OAAO,KAAKL,OAAO,CAACK,OAAnD,EACE,OAAOT,yBAAyB,CAACO,OAAD,EAAUE,OAAV,CAAhC;AACF,SAAOJ,IAAI,CAACQ,KAAL,CAAWC,oBAAX,CAAgCP,OAAhC,CAAP;AACD,CAbD;;AAcA,IAAMN,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAM,OAAO,EAAI;AACnC,MAAME,OAAO,GAAGX,KAAK,CAACY,KAAN,CAAYC,OAAZ,GAAsBb,KAAK,CAACY,KAAN,CAAYC,OAAZ,CAAoBC,IAApB,CAAyBH,OAA/C,GAAyD,CAAzE;AACA,MAAIA,OAAO,KAAKN,GAAG,CAACM,OAAhB,IAA2BA,OAAO,KAAKL,OAAO,CAACK,OAAnD,EACE,OAAOP,oBAAoB,CAACK,OAAD,EAAUE,OAAV,CAA3B;AACF,SAAOJ,IAAI,CAACQ,KAAL,CAAWZ,iBAAX,CAA6BM,OAA7B,CAAP;AACD,CALD;;AAMA,SAASD,SAAT,EAAoBL,iBAApB","sourcesContent":["import store from '@/store';\n\nimport {\n  isValidChecksumAddress as isValidRSKChecksumAddress,\n  toChecksumAddress as toRSKChecksumAddress\n} from 'rskjs-util';\nimport { RSK, RSKTEST } from '@/networks/types';\nimport web3 from 'web3';\n\nconst isAddress = address => {\n  if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n    return false;\n  } else if (\n    /^(0x|0X)?[0-9a-f]{40}$/.test(address) ||\n    /^(0x|0X)?[0-9A-F]{40}$/.test(address)\n  ) {\n    return true;\n  }\n  const chainID = store.state.network ? store.state.network.type.chainID : 1;\n  if (chainID === RSK.chainID || chainID === RSKTEST.chainID)\n    return isValidRSKChecksumAddress(address, chainID);\n  return web3.utils.checkAddressChecksum(address);\n};\nconst toChecksumAddress = address => {\n  const chainID = store.state.network ? store.state.network.type.chainID : 1;\n  if (chainID === RSK.chainID || chainID === RSKTEST.chainID)\n    return toRSKChecksumAddress(address, chainID);\n  return web3.utils.toChecksumAddress(address);\n};\nexport { isAddress, toChecksumAddress };\n"]}]}