{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/dapps/Ambrpay/containers/SubscriptionForm/SubscriptionForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/dapps/Ambrpay/containers/SubscriptionForm/SubscriptionForm.vue","mtime":1573477611644},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.string.starts-with\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Blockie from '@/components/Blockie';\nimport { mapState } from 'vuex';\nimport { Toast } from '@/helpers';\nimport BigNumber from 'bignumber.js';\nexport default {\n  components: {\n    blockie: Blockie\n  },\n  data: function data() {\n    return {\n      address: '',\n      isValidAddress: false,\n      hexAddress: '',\n      intervalDays: '',\n      sendAmount: '',\n      amountErrMsg: '',\n      intervalErrMsg: ''\n    };\n  },\n  computed: _objectSpread({}, mapState(['web3', 'network', 'account']), {\n    isValidInput: function isValidInput() {\n      return this.isValidAddress && !this.amountErrMsg && this.sendAmount && this.address && !this.intervalErrMsg;\n    }\n  }),\n  watch: {\n    sendAmount: function sendAmount(newVal) {\n      var value = new BigNumber(newVal);\n      var accountBalance = this.web3.utils.fromWei(new BigNumber(this.account.balance).toFixed(), 'ether');\n      var automationFee = new BigNumber(value.times(0.1));\n      var totalVal = value.plus(automationFee);\n\n      if (!newVal) {\n        return this.amountErrMsg = '';\n      }\n\n      if (value.lt(0.01)) {\n        this.amountErrMsg = 'The minimum amount is 0.01 or greater';\n      } else if (totalVal.gt(accountBalance)) {\n        this.amountErrMsg = 'Amount higher than balance (including 1% automation fee)';\n      } else {\n        this.amountErrMsg = '';\n      }\n    },\n    intervalDays: function intervalDays(newVal) {\n      if (newVal.startsWith('0') && newVal.length > 1) {\n        this.intervalErrMsg = 'Please enter a correct number';\n      } else if (newVal > 365) {\n        this.intervalErrMsg = 'Number cannot exceed 365 days';\n      } else {\n        this.intervalErrMsg = '';\n      }\n    }\n  },\n  methods: {\n    copyToClipboard: function copyToClipboard() {\n      this.$refs.address.select();\n      document.execCommand('copy');\n      Toast.responseHandler('Copied', Toast.INFO);\n    },\n    sendEntireBalance: function sendEntireBalance() {\n      if (this.account) {\n        this.sendAmount = this.web3.utils.fromWei(new BigNumber(this.account.balance).toFixed(), 'ether');\n      }\n    },\n    startSubscription: function startSubscription() {\n      var _this = this;\n\n      var data = {\n        subscriptionPlan: 'sp_f06PoxHvvutJZd',\n        amount: new BigNumber(this.sendAmount).toNumber(),\n        receiverWallet: this.address,\n        interval: new BigNumber(this.intervalDays).toNumber(),\n        transferOut: true,\n        network: 'auto'\n      };\n      this.$emit('startSubscription', data);\n      this.$nextTick(function () {\n        _this.sendAmount = '';\n        _this.address = '';\n        _this.intervalDays = '';\n      });\n    }\n  }\n};",{"version":3,"sources":["SubscriptionForm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"subscription-container\">\n    <div class=\"subscription-content\">\n      <div class=\"subscription-form-container\">\n        <b-container>\n          <b-row>\n            <span class=\"label-text\">{{ $t('dappsAmbrpay.to-address') }}</span>\n            <p\n              class=\"action-text prevent-user-select copy-text\"\n              @click=\"copyToClipboard\"\n            >\n              {{ $t('common.copy') }}\n            </p>\n          </b-row>\n          <b-row class=\"address-block\">\n            <span class=\"row-style\">\n              <blockie\n                v-show=\"isValidAddress\"\n                :address=\"hexAddress\"\n                :size=\"6\"\n                :scale=\"16\"\n                width=\"32px\"\n                height=\"32px\"\n                class=\"blockie-image\"\n              />\n              <input\n                v-ens-resolver=\"'address'\"\n                ref=\"address\"\n                v-model=\"address\"\n                :class=\"isValidAddress ? 'input-address' : ''\"\n                name=\"name\"\n                autocomplete=\"off\"\n                type=\"text\"\n              />\n              <i\n                :class=\"[\n                  isValidAddress && hexAddress.length !== 0 ? '' : 'not-good',\n                  'fa fa-check-circle good-button'\n                ]\"\n                aria-hidden=\"true\"\n              />\n            </span>\n          </b-row>\n          <b-row>\n            <b-col class=\"mt-3\" cols=\"12\" md=\"5\">\n              <span class=\"label-text\">{{ $t('dappsAmbrpay.type') }}</span>\n              <div class=\"fake-input\">\n                <p>\n                  <img\n                    class=\"currency-icon\"\n                    src=\"@/assets/images/currency/eth.svg\"\n                  />\n                  <span class=\"token-txt\">{{ $t('dappsAmbrpay.eth') }}</span\n                  >-{{ $t('dappsAmbrpay.ethereum') }}\n                </p>\n              </div>\n            </b-col>\n            <b-col class=\"amount-container mt-3\" cols=\"12\" md=\"7\">\n              <div class=\"amount-text\">\n                <span class=\"label-text\">{{ $t('dappsAmbrpay.amount') }}</span>\n                <span\n                  class=\"action-text entire-balance\"\n                  @click=\"sendEntireBalance\"\n                  >{{ $t('dappsAmbrpay.entire-balance') }}</span\n                >\n              </div>\n              <input\n                v-model=\"sendAmount\"\n                type=\"number\"\n                placeholder=\"0.01\"\n                min=\"0.01\"\n              />\n              <p class=\"sub-text\">{{ $t('dappsAmbrpay.automation-fee') }}</p>\n              <p v-show=\"amountErrMsg\" class=\"sub-text err-msg\">\n                {{ amountErrMsg }}\n              </p>\n            </b-col>\n          </b-row>\n          <b-row class=\"row-style mt-1 interval-container\">\n            <span class=\"label-text\">{{\n              $t('dappsAmbrpay.interval-in-every')\n            }}</span>\n            <span v-show=\"intervalDays\" class=\"days-text\">{{\n              $t('dappsAmbrpay.days')\n            }}</span>\n            <input\n              v-model=\"intervalDays\"\n              :placeholder=\"$t('dappsAmbrpay.enter-days')\"\n              type=\"number\"\n              min=\"1\"\n              max=\"365\"\n            />\n            <p v-show=\"intervalErrMsg\" class=\"sub-text err-msg\">\n              {{ intervalErrMsg }}\n            </p>\n          </b-row>\n          <b-row class=\"mt-4\">\n            <b-button\n              :class=\"[isValidInput ? '' : 'disabled', 'mx-auto mew-btn']\"\n              @click=\"startSubscription\"\n              >{{ $t('dappsAmbrpay.start-recurring') }}</b-button\n            >\n          </b-row>\n        </b-container>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Blockie from '@/components/Blockie';\nimport { mapState } from 'vuex';\nimport { Toast } from '@/helpers';\nimport BigNumber from 'bignumber.js';\n\nexport default {\n  components: {\n    blockie: Blockie\n  },\n  data() {\n    return {\n      address: '',\n      isValidAddress: false,\n      hexAddress: '',\n      intervalDays: '',\n      sendAmount: '',\n      amountErrMsg: '',\n      intervalErrMsg: ''\n    };\n  },\n  computed: {\n    ...mapState(['web3', 'network', 'account']),\n    isValidInput() {\n      return (\n        this.isValidAddress &&\n        !this.amountErrMsg &&\n        this.sendAmount &&\n        this.address &&\n        !this.intervalErrMsg\n      );\n    }\n  },\n  watch: {\n    sendAmount(newVal) {\n      const value = new BigNumber(newVal);\n      const accountBalance = this.web3.utils.fromWei(\n        new BigNumber(this.account.balance).toFixed(),\n        'ether'\n      );\n      const automationFee = new BigNumber(value.times(0.1));\n      const totalVal = value.plus(automationFee);\n\n      if (!newVal) {\n        return (this.amountErrMsg = '');\n      }\n\n      if (value.lt(0.01)) {\n        this.amountErrMsg = 'The minimum amount is 0.01 or greater';\n      } else if (totalVal.gt(accountBalance)) {\n        this.amountErrMsg =\n          'Amount higher than balance (including 1% automation fee)';\n      } else {\n        this.amountErrMsg = '';\n      }\n    },\n    intervalDays(newVal) {\n      if (newVal.startsWith('0') && newVal.length > 1) {\n        this.intervalErrMsg = 'Please enter a correct number';\n      } else if (newVal > 365) {\n        this.intervalErrMsg = 'Number cannot exceed 365 days';\n      } else {\n        this.intervalErrMsg = '';\n      }\n    }\n  },\n  methods: {\n    copyToClipboard() {\n      this.$refs.address.select();\n      document.execCommand('copy');\n      Toast.responseHandler('Copied', Toast.INFO);\n    },\n    sendEntireBalance() {\n      if (this.account) {\n        this.sendAmount = this.web3.utils.fromWei(\n          new BigNumber(this.account.balance).toFixed(),\n          'ether'\n        );\n      }\n    },\n    startSubscription() {\n      const data = {\n        subscriptionPlan: 'sp_f06PoxHvvutJZd',\n        amount: new BigNumber(this.sendAmount).toNumber(),\n        receiverWallet: this.address,\n        interval: new BigNumber(this.intervalDays).toNumber(),\n        transferOut: true,\n        network: 'auto'\n      };\n\n      this.$emit('startSubscription', data);\n\n      this.$nextTick(() => {\n        this.sendAmount = '';\n        this.address = '';\n        this.intervalDays = '';\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import '../../AmbrpayGlobal.scss';\n@import 'SubscriptionForm.scss';\n</style>\n"],"sourceRoot":"src/dapps/Ambrpay/containers/SubscriptionForm"}]}