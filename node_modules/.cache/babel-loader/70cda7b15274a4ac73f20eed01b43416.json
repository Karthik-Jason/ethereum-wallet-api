{"remainingRequest":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/layouts/ViewWalletInfoLayout/ViewWalletInfoLayout.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/layouts/ViewWalletInfoLayout/ViewWalletInfoLayout.vue","mtime":1573477612088},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport { Toast, Misc } from '@/helpers';\nimport store from 'store';\nimport TokenBalance from '@myetherwallet/eth-token-balance';\nimport PrintModal from '@/layouts/InterfaceLayout/components/PrintModal';\nimport InterfaceBalanceModal from '@/layouts/InterfaceLayout/components/InterfaceBalanceModal';\nimport InterfaceTokens from '@/layouts/InterfaceLayout/components/InterfaceTokens';\nimport ViewPrivateKey from \"./components/ViewPrivateKey\";\nimport { BigNumber } from 'bignumber.js';\nimport sortByBalance from '@/helpers/sortByBalance.js';\nimport Blockie from '@/components/Blockie';\nimport printer from '@/assets/images/icons/printer.svg';\nimport txnHistory from '@/assets/images/icons/tx-history-spinner.svg';\nimport privateKeyGrey from '@/assets/images/icons/private-key-grey.svg';\nimport privateKey from '@/assets/images/icons/private-key.svg';\nimport keystore from '@/assets/images/icons/download-keystore.svg';\nimport keystoreGrey from '@/assets/images/icons/download-keystore-grey.svg';\nimport createBlob from '@/helpers/createBlob.js';\nimport utils from 'web3-utils';\nexport default {\n  components: {\n    'interface-tokens': InterfaceTokens,\n    blockie: Blockie,\n    'print-modal': PrintModal,\n    'view-private-key-modal': ViewPrivateKey,\n    'interface-balance-modal': InterfaceBalanceModal\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      tokens: [],\n      loading: false,\n      fetchingBalance: false,\n      balance: '0',\n      otherOptions: [{\n        name: 'Private Key',\n        key: 'privKey',\n        icon: privateKey,\n        iconDisabled: privateKeyGrey,\n        func: function func() {\n          _this.openViewPriv();\n        }\n      }, {\n        name: 'Txn History',\n        key: 'txnHis',\n        icon: txnHistory,\n        iconDisabled: txnHistory,\n        func: function func() {\n          _this.openTxHistory();\n        }\n      }, {\n        name: 'Keystore File',\n        key: 'keyStor',\n        icon: keystore,\n        iconDisabled: keystoreGrey,\n        func: function func() {\n          _this.downloadKeystore();\n        }\n      }, {\n        name: 'Print Wallet',\n        key: 'printWal',\n        icon: printer,\n        iconDisabled: printer,\n        func: function func() {\n          _this.printWallet();\n        }\n      }],\n      walletJson: '',\n      filename: '',\n      build: BUILD_TYPE\n    };\n  },\n  computed: _objectSpread({}, mapState(['account', 'network', 'web3']), {\n    hasNickname: function hasNickname() {\n      return this.account.nickname !== '';\n    }\n  }),\n  mounted: function mounted() {\n    this.fetchTokens();\n    this.fetchBalance();\n\n    if (!this.account.isHardware && typeof this.account.keystore !== 'undefined') {\n      this.walletJson = createBlob(JSON.parse(this.account.keystore).file, 'mime');\n      this.filename = JSON.parse(this.account.keystore).name;\n    }\n  },\n  destroyed: function destroyed() {\n    this.tokens = [];\n    this.loading = false;\n    this.balance = '0';\n    this.walletJson = '';\n    this.filename = '';\n    this.build = BUILD_TYPE;\n  },\n  methods: {\n    disableItem: function disableItem(itemKey) {\n      if (itemKey === 'privKey') {\n        return !!this.account.isHardware;\n      } else if (itemKey === 'keyStor') {\n        if (Misc.isMewCx()) {\n          return false;\n        }\n\n        return true;\n      }\n\n      return false;\n    },\n    printWallet: function printWallet() {\n      this.$refs.printModal.$refs.print.show();\n    },\n    openBalance: function openBalance() {\n      this.$refs.balance.$refs.balance.show();\n    },\n    downloadKeystore: function downloadKeystore() {\n      if (Misc.isMewCx()) {\n        window.chrome.downloads.download({\n          filename: this.filename,\n          url: this.walletJson\n        });\n      } else {\n        this.$refs.downloadFile.click();\n      }\n    },\n    openViewPriv: function openViewPriv() {\n      this.$refs.viewPriv.$refs.viewPriv.show();\n    },\n    openTxHistory: function openTxHistory() {\n      // eslint-disable-next-line\n      window.open(\"\".concat(this.network.type.blockExplorerAddr.replace('[[address]]', '') + this.account.address), '_blank');\n    },\n    fetchBalance: function () {\n      var _fetchBalance = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var balance;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.fetchingBalance = true;\n                _context.next = 3;\n                return this.web3.eth.getBalance(this.account.address);\n\n              case 3:\n                balance = _context.sent;\n                this.balance = utils.fromWei(balance, 'ether');\n                this.fetchingBalance = false;\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function fetchBalance() {\n        return _fetchBalance.apply(this, arguments);\n      }\n\n      return fetchBalance;\n    }(),\n    copy: function copy() {\n      this.$refs.copyAddress.select();\n      document.execCommand('copy');\n      Toast.responseHandler('Copied!', Toast.INFO);\n    },\n    getTokenBalance: function () {\n      var _getTokenBalance = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(token) {\n        var contractAbi, contract, data, balance;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                contractAbi = [{\n                  name: 'balanceOf',\n                  type: 'function',\n                  constant: true,\n                  inputs: [{\n                    name: 'address',\n                    type: 'address'\n                  }],\n                  outputs: [{\n                    name: 'out',\n                    type: 'uint256'\n                  }]\n                }];\n                contract = new this.web3.eth.Contract(contractAbi);\n                data = contract.methods.balanceOf(this.account.address).encodeABI();\n                _context2.next = 6;\n                return this.web3.eth.call({\n                  to: token.address,\n                  data: data\n                }).then(function (res) {\n                  var tokenBalance;\n\n                  if (Number(res) === 0 || res === '0x') {\n                    tokenBalance = 0;\n                  } else {\n                    var denominator = new BigNumber(10).pow(token.decimals);\n                    tokenBalance = new BigNumber(res).div(denominator).toString();\n                  }\n\n                  return tokenBalance;\n                }).catch(function (e) {\n                  Toast.responseHandler(e, false);\n                });\n\n              case 6:\n                balance = _context2.sent;\n                return _context2.abrupt(\"return\", balance);\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](0);\n                Toast.responseHandler(_context2.t0, Toast.ERROR);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 10]]);\n      }));\n\n      function getTokenBalance(_x) {\n        return _getTokenBalance.apply(this, arguments);\n      }\n\n      return getTokenBalance;\n    }(),\n    fetchTokens: function () {\n      var _fetchTokens = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var tb;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.loading = true;\n                tb = new TokenBalance(this.web3.currentProvider);\n                _context3.prev = 2;\n                _context3.next = 5;\n                return tb.getBalance(this.account.address);\n\n              case 5:\n                this.tokens = _context3.sent;\n                this.tokens = this.tokens.map(function (token) {\n                  var denominator = new BigNumber(10).pow(token.decimals);\n                  var balance = new BigNumber(token.balance).div(denominator).toString();\n                  token.address = token.addr;\n                  token.balance = balance;\n                  delete token.addr;\n                  return token;\n                });\n                this.tokens = this.tokens.sort(sortByBalance);\n                this.loading = false;\n                _context3.next = 16;\n                break;\n\n              case 11:\n                _context3.prev = 11;\n                _context3.t0 = _context3[\"catch\"](2);\n                this.tokens = this.network.type.tokens.map(function (token) {\n                  token.balance = 'Load';\n                  return token;\n                });\n                this.tokens = this.tokens.sort(sortByBalance);\n                this.loading = false;\n\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[2, 11]]);\n      }));\n\n      function fetchTokens() {\n        return _fetchTokens.apply(this, arguments);\n      }\n\n      return fetchTokens;\n    }(),\n    setTokensWithBalance: function setTokensWithBalance() {\n      var _this2 = this;\n\n      var customStore = store.get('customTokens');\n\n      if (customStore !== undefined && customStore[this.network.type.name] !== undefined && customStore[this.network.type.name].length > 0) {\n        new Promise(function (resolve) {\n          var newArr = customStore[_this2.network.type.name].map(\n          /*#__PURE__*/\n          function () {\n            var _ref = _asyncToGenerator(\n            /*#__PURE__*/\n            regeneratorRuntime.mark(function _callee4(token) {\n              return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      _context4.next = 2;\n                      return _this2.getTokenBalance(token);\n\n                    case 2:\n                      token.balance = _context4.sent;\n                      return _context4.abrupt(\"return\", token);\n\n                    case 4:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              }, _callee4);\n            }));\n\n            return function (_x2) {\n              return _ref.apply(this, arguments);\n            };\n          }());\n\n          Promise.all(newArr).then(function (res) {\n            customStore[_this2.network.type.name] = res;\n            store.set('customTokens', customStore);\n            resolve(res);\n          });\n        }).then(function (res) {\n          var allTokens = _this2.tokens.filter(function (token) {\n            return token.balance > 0;\n          }).concat(res.filter(function (token) {\n            return token.balance > 0;\n          }));\n\n          _this2.tokensWithBalance = allTokens;\n          _this2.loading = true;\n        }).catch(function (e) {\n          Toast.responseHandler(e, Toast.ERROR);\n        });\n      } else {\n        this.loading = true;\n        this.tokensWithBalance = this.tokens.filter(function (token) {\n          return token.balance > 0;\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["ViewWalletInfoLayout.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"view-wallet-info-layout\">\n    <interface-balance-modal ref=\"balance\" :balance=\"balance\" />\n    <view-private-key-modal ref=\"viewPriv\" />\n    <print-modal ref=\"printModal\" :address=\"account.address\" />\n    <div class=\"title\">\n      <h2>View Wallet Info</h2>\n      <p>\n        Check your transaction history, download a new keystore file, print a\n        paper wallet, and more!\n      </p>\n    </div>\n    <div class=\"wallet-info-container\">\n      <div class=\"wallet-info\">\n        <div class=\"wallet-info-header\">\n          <h3>Wallet Information</h3>\n          <router-link to=\"/interface\">Access Wallet</router-link>\n        </div>\n        <div class=\"balance-container\">\n          <div class=\"balance-main-container\">\n            <h4>Balance</h4>\n            <div class=\"balance-and-buttons\">\n              <p>\n                <b v-show=\"!fetchingBalance\">{{ balance }}</b>\n                <i\n                  v-show=\"fetchingBalance\"\n                  class=\"fa fa-spinner fa-lg fa-spin\"\n                />\n                ETH\n              </p>\n              <div class=\"balance-button-container\">\n                <i class=\"fa fa-refresh fa-lg\" @click=\"fetchBalance\" />\n                <img\n                  src=\"~@/assets/images/icons/more-black.svg\"\n                  @click=\"openBalance\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"account-details\">\n          <div class=\"blockie-container\">\n            <blockie :address=\"account.address\" width=\"80px\" height=\"80px\" />\n            <h3 v-show=\"hasNickname\">{{ account.nickname }}'s wallet</h3>\n            <div class=\"address-copy-container\">\n              <input ref=\"copyAddress\" :value=\"account.address\" />\n              <p>{{ account.address | concatAddr }}</p>\n              <img src=\"@/assets/images/icons/copy-colored.svg\" @click=\"copy\" />\n            </div>\n          </div>\n          <div class=\"other-options\">\n            <div\n              v-for=\"option in otherOptions\"\n              :key=\"option.key\"\n              :class=\"[\n                disableItem(option.key) ? 'item-disabled' : '',\n                'option-item'\n              ]\"\n              @click=\"option.func\"\n            >\n              <img\n                :src=\"\n                  disableItem(option.key) ? option.iconDisabled : option.icon\n                \"\n              />\n              <p>{{ option.name }}</p>\n            </div>\n            <a\n              ref=\"downloadFile\"\n              :href=\"walletJson\"\n              :download=\"filename\"\n              target=\"_blank\"\n            />\n          </div>\n        </div>\n      </div>\n      <div class=\"wallet-tokens\">\n        <interface-tokens\n          :tokens=\"tokens\"\n          :get-token-balance=\"getTokenBalance\"\n          :received-tokens=\"!loading\"\n          :reset-token-selection=\"setTokensWithBalance\"\n          :fetch-tokens=\"fetchTokens\"\n          :ads=\"false\"\n          :address=\"account.address\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport { Toast, Misc } from '@/helpers';\nimport store from 'store';\nimport TokenBalance from '@myetherwallet/eth-token-balance';\nimport PrintModal from '@/layouts/InterfaceLayout/components/PrintModal';\nimport InterfaceBalanceModal from '@/layouts/InterfaceLayout/components/InterfaceBalanceModal';\nimport InterfaceTokens from '@/layouts/InterfaceLayout/components/InterfaceTokens';\nimport ViewPrivateKey from './components/ViewPrivateKey';\nimport { BigNumber } from 'bignumber.js';\nimport sortByBalance from '@/helpers/sortByBalance.js';\nimport Blockie from '@/components/Blockie';\nimport printer from '@/assets/images/icons/printer.svg';\nimport txnHistory from '@/assets/images/icons/tx-history-spinner.svg';\nimport privateKeyGrey from '@/assets/images/icons/private-key-grey.svg';\nimport privateKey from '@/assets/images/icons/private-key.svg';\nimport keystore from '@/assets/images/icons/download-keystore.svg';\nimport keystoreGrey from '@/assets/images/icons/download-keystore-grey.svg';\nimport createBlob from '@/helpers/createBlob.js';\nimport utils from 'web3-utils';\n\nexport default {\n  components: {\n    'interface-tokens': InterfaceTokens,\n    blockie: Blockie,\n    'print-modal': PrintModal,\n    'view-private-key-modal': ViewPrivateKey,\n    'interface-balance-modal': InterfaceBalanceModal\n  },\n  data() {\n    return {\n      tokens: [],\n      loading: false,\n      fetchingBalance: false,\n      balance: '0',\n      otherOptions: [\n        {\n          name: 'Private Key',\n          key: 'privKey',\n          icon: privateKey,\n          iconDisabled: privateKeyGrey,\n          func: () => {\n            this.openViewPriv();\n          }\n        },\n        {\n          name: 'Txn History',\n          key: 'txnHis',\n          icon: txnHistory,\n          iconDisabled: txnHistory,\n          func: () => {\n            this.openTxHistory();\n          }\n        },\n        {\n          name: 'Keystore File',\n          key: 'keyStor',\n          icon: keystore,\n          iconDisabled: keystoreGrey,\n          func: () => {\n            this.downloadKeystore();\n          }\n        },\n        {\n          name: 'Print Wallet',\n          key: 'printWal',\n          icon: printer,\n          iconDisabled: printer,\n          func: () => {\n            this.printWallet();\n          }\n        }\n      ],\n      walletJson: '',\n      filename: '',\n      build: BUILD_TYPE\n    };\n  },\n  computed: {\n    ...mapState(['account', 'network', 'web3']),\n    hasNickname() {\n      return this.account.nickname !== '';\n    }\n  },\n  mounted() {\n    this.fetchTokens();\n    this.fetchBalance();\n    if (\n      !this.account.isHardware &&\n      typeof this.account.keystore !== 'undefined'\n    ) {\n      this.walletJson = createBlob(\n        JSON.parse(this.account.keystore).file,\n        'mime'\n      );\n      this.filename = JSON.parse(this.account.keystore).name;\n    }\n  },\n  destroyed() {\n    this.tokens = [];\n    this.loading = false;\n    this.balance = '0';\n    this.walletJson = '';\n    this.filename = '';\n    this.build = BUILD_TYPE;\n  },\n  methods: {\n    disableItem(itemKey) {\n      if (itemKey === 'privKey') {\n        return !!this.account.isHardware;\n      } else if (itemKey === 'keyStor') {\n        if (Misc.isMewCx()) {\n          return false;\n        }\n        return true;\n      }\n      return false;\n    },\n    printWallet() {\n      this.$refs.printModal.$refs.print.show();\n    },\n    openBalance() {\n      this.$refs.balance.$refs.balance.show();\n    },\n    downloadKeystore() {\n      if (Misc.isMewCx()) {\n        window.chrome.downloads.download({\n          filename: this.filename,\n          url: this.walletJson\n        });\n      } else {\n        this.$refs.downloadFile.click();\n      }\n    },\n    openViewPriv() {\n      this.$refs.viewPriv.$refs.viewPriv.show();\n    },\n    openTxHistory() {\n      // eslint-disable-next-line\n      window.open(\n        `${this.network.type.blockExplorerAddr.replace('[[address]]', '') +\n          this.account.address}`,\n        '_blank'\n      );\n    },\n    async fetchBalance() {\n      this.fetchingBalance = true;\n      const balance = await this.web3.eth.getBalance(this.account.address);\n      this.balance = utils.fromWei(balance, 'ether');\n      this.fetchingBalance = false;\n    },\n    copy() {\n      this.$refs.copyAddress.select();\n      document.execCommand('copy');\n      Toast.responseHandler('Copied!', Toast.INFO);\n    },\n    async getTokenBalance(token) {\n      try {\n        const contractAbi = [\n          {\n            name: 'balanceOf',\n            type: 'function',\n            constant: true,\n            inputs: [{ name: 'address', type: 'address' }],\n            outputs: [{ name: 'out', type: 'uint256' }]\n          }\n        ];\n\n        const contract = new this.web3.eth.Contract(contractAbi);\n        const data = contract.methods\n          .balanceOf(this.account.address)\n          .encodeABI();\n        const balance = await this.web3.eth\n          .call({\n            to: token.address,\n            data: data\n          })\n          .then(res => {\n            let tokenBalance;\n            if (Number(res) === 0 || res === '0x') {\n              tokenBalance = 0;\n            } else {\n              const denominator = new BigNumber(10).pow(token.decimals);\n              tokenBalance = new BigNumber(res).div(denominator).toString();\n            }\n            return tokenBalance;\n          })\n          .catch(e => {\n            Toast.responseHandler(e, false);\n          });\n        return balance;\n      } catch (e) {\n        Toast.responseHandler(e, Toast.ERROR);\n      }\n    },\n    async fetchTokens() {\n      this.loading = true;\n      const tb = new TokenBalance(this.web3.currentProvider);\n      try {\n        this.tokens = await tb.getBalance(this.account.address);\n        this.tokens = this.tokens.map(token => {\n          const denominator = new BigNumber(10).pow(token.decimals);\n          const balance = new BigNumber(token.balance)\n            .div(denominator)\n            .toString();\n          token.address = token.addr;\n          token.balance = balance;\n          delete token.addr;\n          return token;\n        });\n        this.tokens = this.tokens.sort(sortByBalance);\n        this.loading = false;\n      } catch (e) {\n        this.tokens = this.network.type.tokens.map(token => {\n          token.balance = 'Load';\n          return token;\n        });\n        this.tokens = this.tokens.sort(sortByBalance);\n        this.loading = false;\n      }\n    },\n    setTokensWithBalance() {\n      const customStore = store.get('customTokens');\n      if (\n        customStore !== undefined &&\n        customStore[this.network.type.name] !== undefined &&\n        customStore[this.network.type.name].length > 0\n      ) {\n        new Promise(resolve => {\n          const newArr = customStore[this.network.type.name].map(\n            async token => {\n              token.balance = await this.getTokenBalance(token);\n              return token;\n            }\n          );\n          Promise.all(newArr).then(res => {\n            customStore[this.network.type.name] = res;\n            store.set('customTokens', customStore);\n            resolve(res);\n          });\n        })\n          .then(res => {\n            const allTokens = this.tokens\n              .filter(token => token.balance > 0)\n              .concat(res.filter(token => token.balance > 0));\n            this.tokensWithBalance = allTokens;\n            this.loading = true;\n          })\n          .catch(e => {\n            Toast.responseHandler(e, Toast.ERROR);\n          });\n      } else {\n        this.loading = true;\n        this.tokensWithBalance = this.tokens.filter(token => token.balance > 0);\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'ViewWalletInfoLayout.scss';\n</style>\n"],"sourceRoot":"src/layouts/ViewWalletInfoLayout"}]}