{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/dapps/MakerDai/components/MoveCdpModal/MoveCdp.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/dapps/MakerDai/components/MoveCdpModal/MoveCdp.vue","mtime":1574664278278},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/thread-loader/dist/cjs.js","mtime":1574664277654},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js","mtime":1574664275010},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js","mtime":1574664277774}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport StandardButton from '@/components/Buttons/StandardButton';\nimport HelpCenterButton from '@/components/Buttons/HelpCenterButton';\nimport CheckBox from \"../CheckBox\";\nimport BigNumber from 'bignumber.js/bignumber.js';\nimport { Misc } from '@/helpers';\nexport default {\n  components: {\n    'check-box': CheckBox,\n    'help-center-button': HelpCenterButton,\n    'standard-button': StandardButton\n  },\n  props: {\n    tokensWithBalance: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    action: {\n      type: String,\n      default: ''\n    },\n    values: {\n      type: Object,\n      default: function _default() {\n        return {\n          maxPethDraw: '',\n          maxEthDraw: '',\n          maxUsdDraw: '',\n          ethCollateral: '',\n          pethCollateral: '',\n          usdCollateral: '',\n          debtValue: '',\n          maxDai: '',\n          collateralRatio: '',\n          cdpId: ''\n        };\n      }\n    },\n    destAddressHasProxy: {\n      type: Boolean,\n      default: false\n    },\n    destAddressProxy: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      address: '',\n      amountEth: 0,\n      amountDai: 0,\n      govFee: 0,\n      modalDetailInformation: false,\n      checkBoxChecked: false,\n      textValues: {},\n      mkrToken: {},\n      cancelButton: {\n        title: 'Cancel',\n        buttonStyle: 'green-border',\n        noMinWidth: true\n      },\n      submitButton: {\n        title: 'Submit',\n        buttonStyle: 'green',\n        noMinWidth: true,\n        fullWidth: true\n      }\n    };\n  },\n  computed: _objectSpread({}, mapState(['account', 'gasPrice', 'web3', 'network', 'ens']), {\n    btnActive: function btnActive() {\n      return Misc.isValidETHAddress(this.address) && this.checkBoxChecked;\n    }\n  }),\n  watch: {\n    address: function address(newVal) {\n      if (Misc.isValidETHAddress(newVal)) {\n        this.$emit('checkForProxy', newVal);\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$refs.modal.$on('shown', function () {\n      _this.address = '';\n    });\n  },\n  methods: {\n    closeCdp: function closeCdp() {\n      this.activeCdp.closeCdp();\n    },\n    checkBoxClicked: function checkBoxClicked() {\n      this.checkBoxChecked = !this.checkBoxChecked;\n    },\n    displayPercentValue: function displayPercentValue(raw) {\n      if (!BigNumber.isBigNumber(raw)) raw = new BigNumber(raw);\n      return raw.times(100).toString();\n    },\n    displayFixedValue: function displayFixedValue(raw) {\n      var decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n      if (!BigNumber.isBigNumber(raw)) raw = new BigNumber(raw);\n      return raw.toFixed(decimals, BigNumber.ROUND_DOWN).toString();\n    },\n    moveCdp: function () {\n      var _moveCdp = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (Misc.isValidETHAddress(this.address)) {\n                  this.$emit('moveCdp', this.address);\n                  this.closeModal();\n                }\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function moveCdp() {\n        return _moveCdp.apply(this, arguments);\n      }\n\n      return moveCdp;\n    }(),\n    closeModal: function closeModal() {\n      this.$refs.modal.hide();\n    }\n  }\n};",{"version":3,"sources":["MoveCdp.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"modal-container\">\n    <b-modal\n      ref=\"modal\"\n      :title=\"$t('dappsMaker.moveTitle')\"\n      hide-footer\n      centered\n      class=\"bootstrap-modal nopadding\"\n      static\n      lazy\n    >\n      <div class=\"modal-content\">\n        <p class=\"top-text\">\n          {{ $t('dappsMaker.moveNotice') }}\n        </p>\n        <check-box @changeStatus=\"checkBoxClicked\">\n          <template v-slot:terms\n            ><p class=\"checkbox-label\">\n              {{ $t('dappsMaker.understandAndAgree') }}\n            </p></template\n          >\n        </check-box>\n\n        <div class=\"input-container\">\n          <label>{{ $t('dappsMaker.moveQuestion') }}</label>\n          <div class=\"input-box\">\n            <input v-model=\"address\" />\n          </div>\n        </div>\n        <div>\n          <div v-if=\"destAddressHasProxy\">\n            <p>\n              {{ $t('dappsMaker.proxyAddress', { value: destAddressProxy }) }}\n            </p>\n            {{ $t('dappsMaker.moveWithProxy') }}\n          </div>\n          <div v-if=\"!destAddressHasProxy\">\n            {{ $t('dappsMaker.moveWithoutProxy') }}\n          </div>\n        </div>\n        <div class=\"buttons\">\n          <standard-button :options=\"cancelButton\" @click.native=\"closeModal\" />\n          <standard-button\n            :options=\"submitButton\"\n            :button-disabled=\"btnActive ? false : true\"\n            :click-function=\"moveCdp\"\n          />\n        </div>\n        <help-center-button />\n      </div>\n    </b-modal>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport StandardButton from '@/components/Buttons/StandardButton';\nimport HelpCenterButton from '@/components/Buttons/HelpCenterButton';\nimport CheckBox from '../CheckBox';\n\nimport BigNumber from 'bignumber.js/bignumber.js';\n\nimport { Misc } from '@/helpers';\nexport default {\n  components: {\n    'check-box': CheckBox,\n    'help-center-button': HelpCenterButton,\n    'standard-button': StandardButton\n  },\n  props: {\n    tokensWithBalance: {\n      type: Array,\n      default: function() {\n        return [];\n      }\n    },\n    action: {\n      type: String,\n      default: ''\n    },\n    values: {\n      type: Object,\n      default: function() {\n        return {\n          maxPethDraw: '',\n          maxEthDraw: '',\n          maxUsdDraw: '',\n          ethCollateral: '',\n          pethCollateral: '',\n          usdCollateral: '',\n          debtValue: '',\n          maxDai: '',\n          collateralRatio: '',\n          cdpId: ''\n        };\n      }\n    },\n    destAddressHasProxy: {\n      type: Boolean,\n      default: false\n    },\n    destAddressProxy: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      address: '',\n      amountEth: 0,\n      amountDai: 0,\n      govFee: 0,\n      modalDetailInformation: false,\n      checkBoxChecked: false,\n      textValues: {},\n      mkrToken: {},\n      cancelButton: {\n        title: 'Cancel',\n        buttonStyle: 'green-border',\n        noMinWidth: true\n      },\n      submitButton: {\n        title: 'Submit',\n        buttonStyle: 'green',\n        noMinWidth: true,\n        fullWidth: true\n      }\n    };\n  },\n  computed: {\n    ...mapState(['account', 'gasPrice', 'web3', 'network', 'ens']),\n    btnActive() {\n      return Misc.isValidETHAddress(this.address) && this.checkBoxChecked;\n    }\n  },\n  watch: {\n    address(newVal) {\n      if (Misc.isValidETHAddress(newVal)) {\n        this.$emit('checkForProxy', newVal);\n      }\n    }\n  },\n  mounted() {\n    this.$refs.modal.$on('shown', () => {\n      this.address = '';\n    });\n  },\n  methods: {\n    closeCdp() {\n      this.activeCdp.closeCdp();\n    },\n    checkBoxClicked() {\n      this.checkBoxChecked = !this.checkBoxChecked;\n    },\n    displayPercentValue(raw) {\n      if (!BigNumber.isBigNumber(raw)) raw = new BigNumber(raw);\n      return raw.times(100).toString();\n    },\n    displayFixedValue(raw, decimals = 3) {\n      if (!BigNumber.isBigNumber(raw)) raw = new BigNumber(raw);\n      return raw.toFixed(decimals, BigNumber.ROUND_DOWN).toString();\n    },\n    async moveCdp() {\n      if (Misc.isValidETHAddress(this.address)) {\n        this.$emit('moveCdp', this.address);\n        this.closeModal();\n      }\n    },\n    closeModal() {\n      this.$refs.modal.hide();\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'MoveCdp';\n</style>\n"],"sourceRoot":"src/dapps/MakerDai/components/MoveCdpModal"}]}