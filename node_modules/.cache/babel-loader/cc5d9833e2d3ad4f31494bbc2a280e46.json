{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/containers/ConfirmationContainer/components/ConfirmSignModal/ConfirmSignModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/containers/ConfirmationContainer/components/ConfirmSignModal/ConfirmSignModal.vue","mtime":1574677124293},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js","mtime":1574664275010},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js","mtime":1574664277774},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js","mtime":1574664275010},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js","mtime":1574664277774}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Blockie from '@/components/Blockie';\nimport utils from 'web3-utils';\nimport { mapState } from 'vuex';\nexport default {\n  components: {\n    blockie: Blockie\n  },\n  props: {\n    confirmSignMessage: {\n      type: Function,\n      default: function _default() {}\n    },\n    signedMessage: {\n      type: String,\n      default: ''\n    },\n    messageToSign: {\n      type: String,\n      default: ''\n    },\n    from: {\n      type: String,\n      default: ''\n    },\n    isHardwareWallet: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      modalDetailInformation: false,\n      transactionSigned: false\n    };\n  },\n  computed: _objectSpread({}, mapState(['account']), {\n    signedMessageSignature: function signedMessageSignature() {\n      if (this.signedMessage) {\n        return this.signedMessage;\n      } else if (this.isHardwareWallet) {\n        return 'Please Approve on Hardware Wallet';\n      }\n\n      return '';\n    }\n  }),\n  methods: {\n    signMessage: function signMessage() {\n      if (this.signedMessage !== '') {\n        this.confirmSignMessage();\n      }\n    },\n    hexToUtf8: function hexToUtf8(hex) {\n      try {\n        return utils.hexToUtf8(hex);\n      } catch (e) {\n        return false;\n      }\n    }\n  }\n};",{"version":3,"sources":["ConfirmSignModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA,OAAA,OAAA,MAAA,sBAAA;AACA,OAAA,KAAA,MAAA,YAAA;AACA,SAAA,QAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,OAAA,EAAA;AADA,GADA;AAIA,EAAA,KAAA,EAAA;AACA,IAAA,kBAAA,EAAA;AACA,MAAA,IAAA,EAAA,QADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA,KADA;AAKA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KATA;AAaA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAbA;AAiBA,IAAA,gBAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAjBA,GAJA;AA0BA,EAAA,IA1BA,kBA0BA;AACA,WAAA;AACA,MAAA,sBAAA,EAAA,KADA;AAEA,MAAA,iBAAA,EAAA;AAFA,KAAA;AAIA,GA/BA;AAgCA,EAAA,QAAA,oBACA,QAAA,CAAA,CAAA,SAAA,CAAA,CADA;AAEA,IAAA,sBAFA,oCAEA;AACA,UAAA,KAAA,aAAA,EAAA;AACA,eAAA,KAAA,aAAA;AACA,OAFA,MAEA,IAAA,KAAA,gBAAA,EAAA;AACA,eAAA,mCAAA;AACA;;AACA,aAAA,EAAA;AACA;AATA,IAhCA;AA2CA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,UAAA,KAAA,aAAA,KAAA,EAAA,EAAA;AACA,aAAA,kBAAA;AACA;AACA,KALA;AAMA,IAAA,SANA,qBAMA,GANA,EAMA;AACA,UAAA;AACA,eAAA,KAAA,CAAA,SAAA,CAAA,GAAA,CAAA;AACA,OAFA,CAEA,OAAA,CAAA,EAAA;AACA,eAAA,KAAA;AACA;AACA;AAZA;AA3CA,CAAA","sourcesContent":["<template>\n  <div class=\"modal-container\">\n    <b-modal\n      ref=\"signConfirmation\"\n      hide-footer\n      centered\n      class=\"bootstrap-modal-wide confirmation-modal nopadding\"\n      title=\"Confirmation\"\n      static\n      lazy\n    >\n      <div class=\"modal-content qrcode-modal\">\n        <div class=\"tx-info\">\n          <div class=\"tx-data tx-from\">\n            <div class=\"address-info\">\n              <p class=\"title address-title\">\n                {{ $t('confirmation.signingAddr') }}\n              </p>\n              <div class=\"from-address\">\n                <blockie\n                  :address=\"account.address\"\n                  width=\"30px\"\n                  height=\"30px\"\n                />\n                <span>{{ from }}</span>\n              </div>\n            </div>\n          </div>\n          <div v-if=\"hexToUtf8(messageToSign)\" class=\"tx-data tx-to\">\n            <div class=\"address-info\">\n              <p class=\"title address-title\">\n                {{ $t('interface.txSideMenuMessage') }}\n              </p>\n              <p class=\"message-to-sign\">{{ hexToUtf8(messageToSign) }}</p>\n            </div>\n          </div>\n          <div class=\"tx-data tx-to\">\n            <div class=\"address-info\">\n              <p class=\"title address-title\">\n                {{ $t('confirmation.messageInHex') }}\n              </p>\n              <p class=\"message-to-sign\">{{ messageToSign }}</p>\n            </div>\n          </div>\n        </div>\n        <div class=\"submit-button-container\">\n          <div class=\"flex-center-align\">\n            <div class=\"button-with-helper\">\n              <div\n                ref=\"ConfirmAndSendButton\"\n                :class=\"[\n                  signedMessage !== '' ? '' : 'disabled',\n                  'submit-button large-round-button-green-filled clickable'\n                ]\"\n                @click=\"signMessage\"\n              >\n                {{ $t('confirmation.confirmSigning') }}\n              </div>\n            </div>\n          </div>\n          <!-- <p class=\"learn-more\">\n            Have any issues?\n            <a\n              href=\"https:/kb.myetherwallet.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              >Learn more</a\n            >\n          </p> -->\n        </div>\n      </div>\n    </b-modal>\n  </div>\n</template>\n\n<script>\nimport Blockie from '@/components/Blockie';\nimport utils from 'web3-utils';\nimport { mapState } from 'vuex';\n\nexport default {\n  components: {\n    blockie: Blockie\n  },\n  props: {\n    confirmSignMessage: {\n      type: Function,\n      default: function() {}\n    },\n    signedMessage: {\n      type: String,\n      default: ''\n    },\n    messageToSign: {\n      type: String,\n      default: ''\n    },\n    from: {\n      type: String,\n      default: ''\n    },\n    isHardwareWallet: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      modalDetailInformation: false,\n      transactionSigned: false\n    };\n  },\n  computed: {\n    ...mapState(['account']),\n    signedMessageSignature() {\n      if (this.signedMessage) {\n        return this.signedMessage;\n      } else if (this.isHardwareWallet) {\n        return 'Please Approve on Hardware Wallet';\n      }\n      return '';\n    }\n  },\n  methods: {\n    signMessage() {\n      if (this.signedMessage !== '') {\n        this.confirmSignMessage();\n      }\n    },\n    hexToUtf8(hex) {\n      try {\n        return utils.hexToUtf8(hex);\n      } catch (e) {\n        return false;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'ConfirmModal';\n</style>\n"],"sourceRoot":"src/containers/ConfirmationContainer/components/ConfirmSignModal"}]}