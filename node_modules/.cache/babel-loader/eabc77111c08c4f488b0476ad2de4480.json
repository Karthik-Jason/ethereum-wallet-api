{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/layouts/AccessWalletLayout/components/SoftwareModal/SoftwareModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/layouts/AccessWalletLayout/components/SoftwareModal/SoftwareModal.vue","mtime":1574664278286},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js","mtime":1574664275010},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js","mtime":1574664277774}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CustomerSupport from '@/components/CustomerSupport';\nimport WarningMessage from '@/components/WarningMessage';\nimport byJsonImgHov from '@/assets/images/icons/button-json-hover.svg';\nimport byMnemImgHov from '@/assets/images/icons/button-mnemonic-hover.svg';\nimport privKeyImgHov from '@/assets/images/icons/button-key-hover.svg';\nimport WalletOption from \"../WalletOption\";\nimport StandardButton from '@/components/Buttons/StandardButton';\nimport { Toast } from '@/helpers';\nexport default {\n  components: {\n    'customer-support': CustomerSupport,\n    'wallet-option': WalletOption,\n    'warning-message': WarningMessage,\n    'standard-button': StandardButton\n  },\n  props: {\n    value: {\n      type: String,\n      default: ''\n    },\n    openPassword: {\n      type: Function,\n      default: function _default() {}\n    },\n    openMnemonicPhraseInput: {\n      type: Function,\n      default: function _default() {}\n    },\n    openPrivateKeyInput: {\n      type: Function,\n      default: function _default() {}\n    }\n  },\n  data: function data() {\n    return {\n      continueButtonOptions: {\n        title: this.$t('common.continue'),\n        buttonStyle: 'green',\n        noMinWidth: true,\n        fullWidth: true\n      },\n      file: '',\n      selected: '',\n      items: [{\n        name: 'byJson',\n        imgHoverPath: byJsonImgHov,\n        text: this.$t('common.jsonF')\n      }, {\n        name: 'byMnem',\n        imgHoverPath: byMnemImgHov,\n        text: this.$t('common.mnemonicP')\n      }, {\n        name: 'byPriv',\n        imgHoverPath: privKeyImgHov,\n        text: this.$t('common.privKey')\n      }]\n    };\n  },\n  methods: {\n    uploadClick: function uploadClick() {\n      var jsonInput = this.$refs.jsonInput;\n      jsonInput.value = '';\n      jsonInput.click();\n    },\n    continueAccess: function continueAccess() {\n      if (this.selected === 'byJson') {\n        this.uploadClick();\n      } else if (this.selected === 'byPriv') {\n        this.openPrivateKeyInput();\n      } else if (this.selected === 'byMnem') {\n        this.openMnemonicPhraseInput();\n      }\n    },\n    updateSelected: function updateSelected(ref) {\n      if (this.selected !== ref) {\n        this.selected = ref;\n      } else {\n        this.selected = '';\n      }\n    },\n    select: function select(ref) {\n      if (this.selected !== ref) {\n        this.selected = ref;\n      } else {\n        this.selected = '';\n      }\n    },\n    uploadFile: function uploadFile(e) {\n      var self = this;\n      var reader = new FileReader();\n\n      reader.onloadend = function (evt) {\n        try {\n          self.$emit('file', JSON.parse(evt.target.result));\n          self.file = JSON.parse(evt.target.result);\n        } catch (e) {\n          Toast.responseHandler(e, Toast.ERROR);\n        }\n      };\n\n      reader.readAsBinaryString(e.target.files[0]);\n    }\n  }\n};",{"version":3,"sources":["SoftwareModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA,OAAA,eAAA,MAAA,8BAAA;AACA,OAAA,cAAA,MAAA,6BAAA;AACA,OAAA,YAAA,MAAA,6CAAA;AACA,OAAA,YAAA,MAAA,iDAAA;AACA,OAAA,aAAA,MAAA,4CAAA;AACA,OAAA,YAAA;AACA,OAAA,cAAA,MAAA,qCAAA;AACA,SAAA,KAAA,QAAA,WAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,wBAAA,eADA;AAEA,qBAAA,YAFA;AAGA,uBAAA,cAHA;AAIA,uBAAA;AAJA,GADA;AAOA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,QADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA,KALA;AASA,IAAA,uBAAA,EAAA;AACA,MAAA,IAAA,EAAA,QADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA,KATA;AAaA,IAAA,mBAAA,EAAA;AACA,MAAA,IAAA,EAAA,QADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA;AAbA,GAPA;AAyBA,EAAA,IAzBA,kBAyBA;AACA,WAAA;AACA,MAAA,qBAAA,EAAA;AACA,QAAA,KAAA,EAAA,KAAA,EAAA,CAAA,iBAAA,CADA;AAEA,QAAA,WAAA,EAAA,OAFA;AAGA,QAAA,UAAA,EAAA,IAHA;AAIA,QAAA,SAAA,EAAA;AAJA,OADA;AAOA,MAAA,IAAA,EAAA,EAPA;AAQA,MAAA,QAAA,EAAA,EARA;AASA,MAAA,KAAA,EAAA,CACA;AACA,QAAA,IAAA,EAAA,QADA;AAEA,QAAA,YAAA,EAAA,YAFA;AAGA,QAAA,IAAA,EAAA,KAAA,EAAA,CAAA,cAAA;AAHA,OADA,EAMA;AACA,QAAA,IAAA,EAAA,QADA;AAEA,QAAA,YAAA,EAAA,YAFA;AAGA,QAAA,IAAA,EAAA,KAAA,EAAA,CAAA,kBAAA;AAHA,OANA,EAWA;AACA,QAAA,IAAA,EAAA,QADA;AAEA,QAAA,YAAA,EAAA,aAFA;AAGA,QAAA,IAAA,EAAA,KAAA,EAAA,CAAA,gBAAA;AAHA,OAXA;AATA,KAAA;AA2BA,GArDA;AAsDA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,UAAA,SAAA,GAAA,KAAA,KAAA,CAAA,SAAA;AACA,MAAA,SAAA,CAAA,KAAA,GAAA,EAAA;AACA,MAAA,SAAA,CAAA,KAAA;AACA,KALA;AAMA,IAAA,cANA,4BAMA;AACA,UAAA,KAAA,QAAA,KAAA,QAAA,EAAA;AACA,aAAA,WAAA;AACA,OAFA,MAEA,IAAA,KAAA,QAAA,KAAA,QAAA,EAAA;AACA,aAAA,mBAAA;AACA,OAFA,MAEA,IAAA,KAAA,QAAA,KAAA,QAAA,EAAA;AACA,aAAA,uBAAA;AACA;AACA,KAdA;AAeA,IAAA,cAfA,0BAeA,GAfA,EAeA;AACA,UAAA,KAAA,QAAA,KAAA,GAAA,EAAA;AACA,aAAA,QAAA,GAAA,GAAA;AACA,OAFA,MAEA;AACA,aAAA,QAAA,GAAA,EAAA;AACA;AACA,KArBA;AAsBA,IAAA,MAtBA,kBAsBA,GAtBA,EAsBA;AACA,UAAA,KAAA,QAAA,KAAA,GAAA,EAAA;AACA,aAAA,QAAA,GAAA,GAAA;AACA,OAFA,MAEA;AACA,aAAA,QAAA,GAAA,EAAA;AACA;AACA,KA5BA;AA6BA,IAAA,UA7BA,sBA6BA,CA7BA,EA6BA;AACA,UAAA,IAAA,GAAA,IAAA;AACA,UAAA,MAAA,GAAA,IAAA,UAAA,EAAA;;AACA,MAAA,MAAA,CAAA,SAAA,GAAA,UAAA,GAAA,EAAA;AACA,YAAA;AACA,UAAA,IAAA,CAAA,KAAA,CAAA,MAAA,EAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA,MAAA,CAAA,MAAA,CAAA;AACA,UAAA,IAAA,CAAA,IAAA,GAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA,MAAA,CAAA,MAAA,CAAA;AACA,SAHA,CAGA,OAAA,CAAA,EAAA;AACA,UAAA,KAAA,CAAA,eAAA,CAAA,CAAA,EAAA,KAAA,CAAA,KAAA;AACA;AACA,OAPA;;AAQA,MAAA,MAAA,CAAA,kBAAA,CAAA,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA;AAzCA;AAtDA,CAAA","sourcesContent":["<template>\n  <b-modal\n    ref=\"software\"\n    :title=\"$t('accessWallet.accessBySoftware')\"\n    hide-footer\n    class=\"bootstrap-modal nopadding modal-software\"\n    centered\n    static\n    lazy\n  >\n    <div class=\"warning\">\n      <warning-message />\n    </div>\n    <div class=\"content-block\">\n      <div class=\"d-block content-container text-center\">\n        <div class=\"button-options\">\n          <wallet-option\n            v-for=\"(item, idx) in items\"\n            :key=\"item.name + idx\"\n            :selected=\"selected === item.name\"\n            :hover-icon=\"item.imgHoverPath\"\n            :text=\"item.text\"\n            :name=\"item.name\"\n            @updateSelected=\"updateSelected\"\n          />\n        </div>\n        <div class=\"hardware-link\">\n          <p>\n            {{ $t('accessWallet.buyHardwareWallet') }}\n          </p>\n          <router-link to=\"/hardware-wallet-affiliates\">{{\n            $t('accessWallet.buyHardwareWalletLink')\n          }}</router-link>\n        </div>\n        <input\n          ref=\"jsonInput\"\n          type=\"file\"\n          name=\"file\"\n          style=\"display: none\"\n          @change=\"uploadFile\"\n        />\n      </div>\n      <div class=\"button-container-block\">\n        <standard-button\n          :button-disabled=\"selected !== '' ? false : true\"\n          :options=\"continueButtonOptions\"\n          @click.native=\"continueAccess\"\n        />\n      </div>\n      <customer-support />\n    </div>\n  </b-modal>\n</template>\n\n<script>\nimport CustomerSupport from '@/components/CustomerSupport';\nimport WarningMessage from '@/components/WarningMessage';\nimport byJsonImgHov from '@/assets/images/icons/button-json-hover.svg';\nimport byMnemImgHov from '@/assets/images/icons/button-mnemonic-hover.svg';\nimport privKeyImgHov from '@/assets/images/icons/button-key-hover.svg';\nimport WalletOption from '../WalletOption';\nimport StandardButton from '@/components/Buttons/StandardButton';\nimport { Toast } from '@/helpers';\n\nexport default {\n  components: {\n    'customer-support': CustomerSupport,\n    'wallet-option': WalletOption,\n    'warning-message': WarningMessage,\n    'standard-button': StandardButton\n  },\n  props: {\n    value: {\n      type: String,\n      default: ''\n    },\n    openPassword: {\n      type: Function,\n      default: function() {}\n    },\n    openMnemonicPhraseInput: {\n      type: Function,\n      default: function() {}\n    },\n    openPrivateKeyInput: {\n      type: Function,\n      default: function() {}\n    }\n  },\n  data() {\n    return {\n      continueButtonOptions: {\n        title: this.$t('common.continue'),\n        buttonStyle: 'green',\n        noMinWidth: true,\n        fullWidth: true\n      },\n      file: '',\n      selected: '',\n      items: [\n        {\n          name: 'byJson',\n          imgHoverPath: byJsonImgHov,\n          text: this.$t('common.jsonF')\n        },\n        {\n          name: 'byMnem',\n          imgHoverPath: byMnemImgHov,\n          text: this.$t('common.mnemonicP')\n        },\n        {\n          name: 'byPriv',\n          imgHoverPath: privKeyImgHov,\n          text: this.$t('common.privKey')\n        }\n      ]\n    };\n  },\n  methods: {\n    uploadClick() {\n      const jsonInput = this.$refs.jsonInput;\n      jsonInput.value = '';\n      jsonInput.click();\n    },\n    continueAccess() {\n      if (this.selected === 'byJson') {\n        this.uploadClick();\n      } else if (this.selected === 'byPriv') {\n        this.openPrivateKeyInput();\n      } else if (this.selected === 'byMnem') {\n        this.openMnemonicPhraseInput();\n      }\n    },\n    updateSelected(ref) {\n      if (this.selected !== ref) {\n        this.selected = ref;\n      } else {\n        this.selected = '';\n      }\n    },\n    select(ref) {\n      if (this.selected !== ref) {\n        this.selected = ref;\n      } else {\n        this.selected = '';\n      }\n    },\n    uploadFile(e) {\n      const self = this;\n      const reader = new FileReader();\n      reader.onloadend = function(evt) {\n        try {\n          self.$emit('file', JSON.parse(evt.target.result));\n          self.file = JSON.parse(evt.target.result);\n        } catch (e) {\n          Toast.responseHandler(e, Toast.ERROR);\n        }\n      };\n      reader.readAsBinaryString(e.target.files[0]);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'SoftwareModal-desktop.scss';\n@import 'SoftwareModal-tablet.scss';\n@import 'SoftwareModal-mobile.scss';\n</style>\n"],"sourceRoot":"src/layouts/AccessWalletLayout/components/SoftwareModal"}]}