{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/layouts/InterfaceLayout/containers/DashboardContainer/DashboardContainer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/layouts/InterfaceLayout/containers/DashboardContainer/DashboardContainer.vue","mtime":1573477612008},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.function.name\";\n\nvar _watch;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport InterfaceContainerTitle from \"../../components/InterfaceContainerTitle\";\nimport CurrencyPicker from \"../../components/CurrencyPicker\";\nimport InterfaceBottomText from '@/components/InterfaceBottomText';\nimport Blockie from '@/components/Blockie';\nimport tabsConfig from \"../../components/InterfaceSideMenu/InterfaceSideMenu.config\";\nimport DappButtons from \"../../components/DappButtons\";\nimport dapps from '@/dapps';\nimport SwapWidget from '@/components/SwapWidget';\nimport ButtonNftManager from \"./components/ButtonNftManager\";\nimport ButtonSendTx from \"./components/ButtonSendTx\";\nimport { SwapProviders, providers } from '@/partners';\nimport BigNumber from 'bignumber.js';\n\nvar toBigNumber = function toBigNumber(num) {\n  return new BigNumber(num);\n};\n\nexport default {\n  components: {\n    'interface-container-title': InterfaceContainerTitle,\n    'interface-bottom-text': InterfaceBottomText,\n    blockie: Blockie,\n    'currency-picker': CurrencyPicker,\n    'dapp-buttons': DappButtons,\n    'swap-widget': SwapWidget,\n    'button-nft-manager': ButtonNftManager,\n    'button-send-tx': ButtonSendTx\n  },\n  props: {\n    tokensWithBalance: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    getBalance: {\n      type: Function,\n      default: function _default() {}\n    },\n    highestGas: {\n      type: String,\n      default: '0'\n    }\n  },\n  data: function data() {\n    return {\n      showSwapValues: true,\n      dappsToShow: ['maker', 'manageEns', 'scheduleTransaction'],\n      tabData: tabsConfig.tabs,\n      advancedExpand: false,\n      isValidAddress: false,\n      hexAddress: '',\n      address: '',\n      value: '0',\n      gasLimit: '21000',\n      data: '',\n      selectedCurrency: '',\n      ethPrice: 0,\n      swapPairs: [{\n        from: 'ETH',\n        to: 'BTC',\n        amt: 1,\n        rate: 0\n      }, {\n        from: 'ETH',\n        to: 'EUR',\n        amt: 1,\n        rate: 0\n      }, {\n        from: 'ETH',\n        to: 'KNC',\n        amt: 1,\n        rate: 0\n      }, {\n        from: 'BAT',\n        to: 'ETH',\n        amt: 1,\n        rate: 0\n      }, {\n        from: 'ETH',\n        to: 'DAI',\n        amt: 1,\n        rate: 0\n      }],\n      swap: new SwapProviders(providers, {\n        network: this.$store.state.network.type.name,\n        web3: this.$store.state.web3,\n        getRateForUnit: false\n      }, {\n        tokensWithBalance: this.tokensWithBalance,\n        online: this.$store.state.online\n      }),\n      updatingRates: false,\n      suppliedFrom: {\n        symbol: 'ETH',\n        name: 'Ethereum'\n      },\n      suppliedTo: {\n        symbol: 'BTC',\n        name: 'Bitcoin'\n      },\n      suppliedFromAmount: 0\n    };\n  },\n  computed: _objectSpread({}, mapState(['account', 'web3', 'network', 'online']), {\n    sortedObject: function sortedObject() {\n      var _this = this;\n\n      var arrayedDapp = [];\n      Object.keys(dapps).forEach(function (dapp) {\n        if (_this.dappsToShow.includes(dapp)) {\n          arrayedDapp.push(dapps[dapp]);\n        }\n      });\n      return arrayedDapp.sort(function (a, b) {\n        if (a.supportedNetworks.includes(_this.network.type.name) || b.supportedNetworks.includes(_this.network.type.name)) return 1;\n        return 0;\n      });\n    },\n    isOnlineAndEth: function isOnlineAndEth() {\n      return this.online && this.network.type.name === 'ETH';\n    }\n  }),\n  watch: (_watch = {}, _defineProperty(_watch, 'swap.haveProviderRates', function swapHaveProviderRates() {\n    if (this.isOnlineAndEth) {\n      this.haveProviderRates = this.swap.haveProviderRates;\n      this.setupSwap();\n    }\n  }), _defineProperty(_watch, \"network\", function network() {\n    var _this2 = this;\n\n    setTimeout(function () {\n      _this2.swap = new SwapProviders(providers, {\n        network: _this2.network.type.name,\n        web3: _this2.web3,\n        getRateForUnit: false\n      }, {\n        tokensWithBalance: _this2.tokensWithBalance,\n        online: _this2.$store.state.online\n      });\n    }, 500);\n  }), _watch),\n  mounted: function mounted() {\n    if (this.online && this.network.type.name === 'ETH') {\n      this.showSwapValues = true;\n    } else {\n      this.showSwapValues = false;\n    }\n  },\n  methods: {\n    goTo: function goTo(page, disabled) {\n      if (disabled) return;\n      var childIndex = -1;\n      var pageInfo = this.tabData.find(function (entry) {\n        if (entry.name === page) {\n          return true;\n        } else if (entry.children.length > 0) {\n          var found = entry.children.findIndex(function (child) {\n            return child.name === page;\n          });\n\n          if (found >= 0) {\n            childIndex = found;\n            return true;\n          }\n        }\n\n        return false;\n      });\n\n      if (childIndex >= 0) {\n        if (this.online || !pageInfo.children[childIndex].onlineOnly) {\n          this.$router.push({\n            path: pageInfo.children[childIndex].routes[0]\n          });\n        }\n      } else {\n        if (this.online || !pageInfo.onlineOnly) {\n          this.$router.push({\n            path: pageInfo.routes[0]\n          });\n        }\n      }\n    },\n    setupSwap: function () {\n      var _setupSwap = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var i, swappers;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.isOnlineAndEth) {\n                  _context.next = 10;\n                  break;\n                }\n\n                i = 0;\n\n              case 2:\n                if (!(i < this.swapPairs.length)) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _context.next = 5;\n                return this.swap.standAloneRateEstimate(this.swapPairs[i].from, this.swapPairs[i].to, this.swapPairs[i].amt);\n\n              case 5:\n                swappers = _context.sent;\n\n                if (this.isOnlineAndEth) {\n                  if (swappers) {\n                    this.$set(this.swapPairs[i], 'rate', toBigNumber(swappers[0].rate).toFixed(4));\n                  }\n                }\n\n              case 7:\n                i++;\n                _context.next = 2;\n                break;\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function setupSwap() {\n        return _setupSwap.apply(this, arguments);\n      }\n\n      return setupSwap;\n    }(),\n    showSwapWidget: function showSwapWidget(vals) {\n      if (this.isOnlineAndEth) {\n        this.$eventHub.$emit('showSwapWidget', this.account.address, vals.from, vals.to, vals.amt);\n      }\n    }\n  }\n};",{"version":3,"sources":["DashboardContainer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFA,SAAA,QAAA,QAAA,MAAA;AACA,OAAA,uBAAA;AACA,OAAA,cAAA;AACA,OAAA,mBAAA,MAAA,kCAAA;AACA,OAAA,OAAA,MAAA,sBAAA;AACA,OAAA,UAAA;AACA,OAAA,WAAA;AACA,OAAA,KAAA,MAAA,SAAA;AACA,OAAA,UAAA,MAAA,yBAAA;AACA,OAAA,gBAAA;AACA,OAAA,YAAA;AAEA,SAAA,aAAA,EAAA,SAAA,QAAA,YAAA;AACA,OAAA,SAAA,MAAA,cAAA;;AAEA,IAAA,WAAA,GAAA,SAAA,WAAA,CAAA,GAAA,EAAA;AACA,SAAA,IAAA,SAAA,CAAA,GAAA,CAAA;AACA,CAFA;;AAIA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,iCAAA,uBADA;AAEA,6BAAA,mBAFA;AAGA,IAAA,OAAA,EAAA,OAHA;AAIA,uBAAA,cAJA;AAKA,oBAAA,WALA;AAMA,mBAAA,UANA;AAOA,0BAAA,gBAPA;AAQA,sBAAA;AARA,GADA;AAWA,EAAA,KAAA,EAAA;AACA,IAAA,iBAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA,oBAAA;AACA,eAAA,EAAA;AACA;AAJA,KADA;AAOA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,QADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA,KAPA;AAWA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAXA,GAXA;AA2BA,EAAA,IA3BA,kBA2BA;AACA,WAAA;AACA,MAAA,cAAA,EAAA,IADA;AAEA,MAAA,WAAA,EAAA,CAAA,OAAA,EAAA,WAAA,EAAA,qBAAA,CAFA;AAGA,MAAA,OAAA,EAAA,UAAA,CAAA,IAHA;AAIA,MAAA,cAAA,EAAA,KAJA;AAKA,MAAA,cAAA,EAAA,KALA;AAMA,MAAA,UAAA,EAAA,EANA;AAOA,MAAA,OAAA,EAAA,EAPA;AAQA,MAAA,KAAA,EAAA,GARA;AASA,MAAA,QAAA,EAAA,OATA;AAUA,MAAA,IAAA,EAAA,EAVA;AAWA,MAAA,gBAAA,EAAA,EAXA;AAYA,MAAA,QAAA,EAAA,CAZA;AAaA,MAAA,SAAA,EAAA,CACA;AAAA,QAAA,IAAA,EAAA,KAAA;AAAA,QAAA,EAAA,EAAA,KAAA;AAAA,QAAA,GAAA,EAAA,CAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,IAAA,EAAA,KAAA;AAAA,QAAA,EAAA,EAAA,KAAA;AAAA,QAAA,GAAA,EAAA,CAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAFA,EAGA;AAAA,QAAA,IAAA,EAAA,KAAA;AAAA,QAAA,EAAA,EAAA,KAAA;AAAA,QAAA,GAAA,EAAA,CAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAHA,EAIA;AAAA,QAAA,IAAA,EAAA,KAAA;AAAA,QAAA,EAAA,EAAA,KAAA;AAAA,QAAA,GAAA,EAAA,CAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAJA,EAKA;AAAA,QAAA,IAAA,EAAA,KAAA;AAAA,QAAA,EAAA,EAAA,KAAA;AAAA,QAAA,GAAA,EAAA,CAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OALA,CAbA;AAoBA,MAAA,IAAA,EAAA,IAAA,aAAA,CACA,SADA,EAEA;AACA,QAAA,OAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,IADA;AAEA,QAAA,IAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAFA;AAGA,QAAA,cAAA,EAAA;AAHA,OAFA,EAOA;AACA,QAAA,iBAAA,EAAA,KAAA,iBADA;AAEA,QAAA,MAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA;AAFA,OAPA,CApBA;AAgCA,MAAA,aAAA,EAAA,KAhCA;AAiCA,MAAA,YAAA,EAAA;AACA,QAAA,MAAA,EAAA,KADA;AAEA,QAAA,IAAA,EAAA;AAFA,OAjCA;AAqCA,MAAA,UAAA,EAAA;AACA,QAAA,MAAA,EAAA,KADA;AAEA,QAAA,IAAA,EAAA;AAFA,OArCA;AAyCA,MAAA,kBAAA,EAAA;AAzCA,KAAA;AA2CA,GAvEA;AAyEA,EAAA,QAAA,oBACA,QAAA,CAAA,CAAA,SAAA,EAAA,MAAA,EAAA,SAAA,EAAA,QAAA,CAAA,CADA;AAEA,IAAA,YAFA,0BAEA;AAAA;;AACA,UAAA,WAAA,GAAA,EAAA;AACA,MAAA,MAAA,CAAA,IAAA,CAAA,KAAA,EAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,YAAA,KAAA,CAAA,WAAA,CAAA,QAAA,CAAA,IAAA,CAAA,EAAA;AACA,UAAA,WAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA;AACA;AACA,OAJA;AAMA,aAAA,WAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA,CAAA,EAAA;AACA,YACA,CAAA,CAAA,iBAAA,CAAA,QAAA,CAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,IAAA,KACA,CAAA,CAAA,iBAAA,CAAA,QAAA,CAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,IAAA,CAFA,EAIA,OAAA,CAAA;AACA,eAAA,CAAA;AACA,OAPA,CAAA;AAQA,KAlBA;AAmBA,IAAA,cAnBA,4BAmBA;AACA,aAAA,KAAA,MAAA,IAAA,KAAA,OAAA,CAAA,IAAA,CAAA,IAAA,KAAA,KAAA;AACA;AArBA,IAzEA;AAgGA,EAAA,KAAA,wCACA,wBADA,mCACA;AACA,QAAA,KAAA,cAAA,EAAA;AACA,WAAA,iBAAA,GAAA,KAAA,IAAA,CAAA,iBAAA;AACA,WAAA,SAAA;AACA;AACA,GANA,yDAOA;AAAA;;AACA,IAAA,UAAA,CAAA,YAAA;AACA,MAAA,MAAA,CAAA,IAAA,GAAA,IAAA,aAAA,CACA,SADA,EAEA;AACA,QAAA,OAAA,EAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA,IADA;AAEA,QAAA,IAAA,EAAA,MAAA,CAAA,IAFA;AAGA,QAAA,cAAA,EAAA;AAHA,OAFA,EAOA;AACA,QAAA,iBAAA,EAAA,MAAA,CAAA,iBADA;AAEA,QAAA,MAAA,EAAA,MAAA,CAAA,MAAA,CAAA,KAAA,CAAA;AAFA,OAPA,CAAA;AAYA,KAbA,EAaA,GAbA,CAAA;AAcA,GAtBA,UAhGA;AAwHA,EAAA,OAxHA,qBAwHA;AACA,QAAA,KAAA,MAAA,IAAA,KAAA,OAAA,CAAA,IAAA,CAAA,IAAA,KAAA,KAAA,EAAA;AACA,WAAA,cAAA,GAAA,IAAA;AACA,KAFA,MAEA;AACA,WAAA,cAAA,GAAA,KAAA;AACA;AACA,GA9HA;AA+HA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,gBACA,IADA,EACA,QADA,EACA;AACA,UAAA,QAAA,EAAA;AACA,UAAA,UAAA,GAAA,CAAA,CAAA;AACA,UAAA,QAAA,GAAA,KAAA,OAAA,CAAA,IAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,CAAA,IAAA,KAAA,IAAA,EAAA;AACA,iBAAA,IAAA;AACA,SAFA,MAEA,IAAA,KAAA,CAAA,QAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,cAAA,KAAA,GAAA,KAAA,CAAA,QAAA,CAAA,SAAA,CAAA,UAAA,KAAA;AAAA,mBAAA,KAAA,CAAA,IAAA,KAAA,IAAA;AAAA,WAAA,CAAA;;AACA,cAAA,KAAA,IAAA,CAAA,EAAA;AACA,YAAA,UAAA,GAAA,KAAA;AACA,mBAAA,IAAA;AACA;AACA;;AACA,eAAA,KAAA;AACA,OAXA,CAAA;;AAYA,UAAA,UAAA,IAAA,CAAA,EAAA;AACA,YAAA,KAAA,MAAA,IAAA,CAAA,QAAA,CAAA,QAAA,CAAA,UAAA,EAAA,UAAA,EAAA;AACA,eAAA,OAAA,CAAA,IAAA,CAAA;AAAA,YAAA,IAAA,EAAA,QAAA,CAAA,QAAA,CAAA,UAAA,EAAA,MAAA,CAAA,CAAA;AAAA,WAAA;AACA;AACA,OAJA,MAIA;AACA,YAAA,KAAA,MAAA,IAAA,CAAA,QAAA,CAAA,UAAA,EAAA;AACA,eAAA,OAAA,CAAA,IAAA,CAAA;AAAA,YAAA,IAAA,EAAA,QAAA,CAAA,MAAA,CAAA,CAAA;AAAA,WAAA;AACA;AACA;AACA,KAzBA;AA0BA,IAAA,SA1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBA2BA,KAAA,cA3BA;AAAA;AAAA;AAAA;;AA4BA,gBAAA,CA5BA,GA4BA,CA5BA;;AAAA;AAAA,sBA4BA,CAAA,GAAA,KAAA,SAAA,CAAA,MA5BA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBA6BA,KAAA,IAAA,CAAA,sBAAA,CACA,KAAA,SAAA,CAAA,CAAA,EAAA,IADA,EAEA,KAAA,SAAA,CAAA,CAAA,EAAA,EAFA,EAGA,KAAA,SAAA,CAAA,CAAA,EAAA,GAHA,CA7BA;;AAAA;AA6BA,gBAAA,QA7BA;;AAkCA,oBAAA,KAAA,cAAA,EAAA;AACA,sBAAA,QAAA,EAAA;AACA,yBAAA,IAAA,CACA,KAAA,SAAA,CAAA,CAAA,CADA,EAEA,MAFA,EAGA,WAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAHA;AAKA;AACA;;AA1CA;AA4BA,gBAAA,CAAA,EA5BA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA8CA,IAAA,cA9CA,0BA8CA,IA9CA,EA8CA;AACA,UAAA,KAAA,cAAA,EAAA;AACA,aAAA,SAAA,CAAA,KAAA,CACA,gBADA,EAEA,KAAA,OAAA,CAAA,OAFA,EAGA,IAAA,CAAA,IAHA,EAIA,IAAA,CAAA,EAJA,EAKA,IAAA,CAAA,GALA;AAOA;AACA;AAxDA;AA/HA,CAAA","sourcesContent":["<template>\n  <div class=\"dashboard-container\">\n    <div class=\"container--flex container--top\">\n      <div class=\"container--card block--actions\">\n        <div class=\"title\">\n          <h4>{{ $t('common.actions') }}</h4>\n        </div>\n        <div class=\"buttons\">\n          <button-send-tx :go-to=\"goTo\" class=\"clickable\" />\n          <button-nft-manager\n            :disabled=\"!isOnlineAndEth\"\n            :go-to=\"goTo\"\n            class=\"clickable\"\n          />\n        </div>\n      </div>\n\n      <div class=\"container--card block--swap\">\n        <div class=\"flex--row--align-center title\">\n          <h4>{{ $t('common.swap') }}</h4>\n          <button\n            class=\"title-button prevent-user-select\"\n            @click=\"goTo('swap')\"\n          >\n            {{ $t('common.more') }}\n          </button>\n        </div>\n        <p class=\"section-description\">\n          {{ $t('interface.dashboardSwap') }}\n        </p>\n        <div class=\"swap-info\">\n          <div v-for=\"pair in swapPairs\" :key=\"pair.from + pair.to\">\n            <div\n              :class=\"isOnlineAndEth ? 'swap-enabled' : 'swap-disabled'\"\n              class=\"swap-to clickable\"\n              @click.prevent=\"showSwapWidget(pair)\"\n            >\n              <p class=\"monospace\">\n                {{ pair.amt }} {{ pair.from }} / {{ pair.rate }} {{ pair.to }}\n              </p>\n              <div class=\"margin--left--auto flex--row--align-center\">\n                <span\n                  :class=\"['currency-symbol', 'cc', pair.from, 'cc-icon']\"\n                ></span>\n                <img src=\"@/assets/images/icons/swap-widget.svg\" alt />\n                <span\n                  :class=\"['currency-symbol', 'cc', pair.to, 'cc-icon']\"\n                ></span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"container--card bottom--buttons\">\n      <div class=\"block--dapps\">\n        <div class=\"flex--row--align-center title\">\n          <h4>{{ $t('common.dapps') }}</h4>\n          <button\n            class=\"title-button prevent-user-select\"\n            @click=\"goTo('dapps')\"\n          >\n            {{ $t('common.viewAll') }}\n          </button>\n        </div>\n        <div class=\"block--container\">\n          <dapp-buttons\n            v-for=\"dapp in sortedObject\"\n            :key=\"dapp.title\"\n            :title=\"$t(dapp.title)\"\n            :icon=\"dapp.icon\"\n            :icon-disabled=\"dapp.iconDisabled\"\n            :desc=\"$t(dapp.desc)\"\n            :param=\"dapp.route\"\n            :supported-networks=\"dapp.supportedNetworks\"\n            class=\"dapp\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport InterfaceContainerTitle from '../../components/InterfaceContainerTitle';\nimport CurrencyPicker from '../../components/CurrencyPicker';\nimport InterfaceBottomText from '@/components/InterfaceBottomText';\nimport Blockie from '@/components/Blockie';\nimport tabsConfig from '../../components/InterfaceSideMenu/InterfaceSideMenu.config';\nimport DappButtons from '../../components/DappButtons';\nimport dapps from '@/dapps';\nimport SwapWidget from '@/components/SwapWidget';\nimport ButtonNftManager from './components/ButtonNftManager';\nimport ButtonSendTx from './components/ButtonSendTx';\n\nimport { SwapProviders, providers } from '@/partners';\nimport BigNumber from 'bignumber.js';\n\nconst toBigNumber = num => {\n  return new BigNumber(num);\n};\n\nexport default {\n  components: {\n    'interface-container-title': InterfaceContainerTitle,\n    'interface-bottom-text': InterfaceBottomText,\n    blockie: Blockie,\n    'currency-picker': CurrencyPicker,\n    'dapp-buttons': DappButtons,\n    'swap-widget': SwapWidget,\n    'button-nft-manager': ButtonNftManager,\n    'button-send-tx': ButtonSendTx\n  },\n  props: {\n    tokensWithBalance: {\n      type: Array,\n      default: function() {\n        return [];\n      }\n    },\n    getBalance: {\n      type: Function,\n      default: function() {}\n    },\n    highestGas: {\n      type: String,\n      default: '0'\n    }\n  },\n  data() {\n    return {\n      showSwapValues: true,\n      dappsToShow: ['maker', 'manageEns', 'scheduleTransaction'],\n      tabData: tabsConfig.tabs,\n      advancedExpand: false,\n      isValidAddress: false,\n      hexAddress: '',\n      address: '',\n      value: '0',\n      gasLimit: '21000',\n      data: '',\n      selectedCurrency: '',\n      ethPrice: 0,\n      swapPairs: [\n        { from: 'ETH', to: 'BTC', amt: 1, rate: 0 },\n        { from: 'ETH', to: 'EUR', amt: 1, rate: 0 },\n        { from: 'ETH', to: 'KNC', amt: 1, rate: 0 },\n        { from: 'BAT', to: 'ETH', amt: 1, rate: 0 },\n        { from: 'ETH', to: 'DAI', amt: 1, rate: 0 }\n      ],\n      swap: new SwapProviders(\n        providers,\n        {\n          network: this.$store.state.network.type.name,\n          web3: this.$store.state.web3,\n          getRateForUnit: false\n        },\n        {\n          tokensWithBalance: this.tokensWithBalance,\n          online: this.$store.state.online\n        }\n      ),\n      updatingRates: false,\n      suppliedFrom: {\n        symbol: 'ETH',\n        name: 'Ethereum'\n      },\n      suppliedTo: {\n        symbol: 'BTC',\n        name: 'Bitcoin'\n      },\n      suppliedFromAmount: 0\n    };\n  },\n\n  computed: {\n    ...mapState(['account', 'web3', 'network', 'online']),\n    sortedObject() {\n      const arrayedDapp = [];\n      Object.keys(dapps).forEach(dapp => {\n        if (this.dappsToShow.includes(dapp)) {\n          arrayedDapp.push(dapps[dapp]);\n        }\n      });\n\n      return arrayedDapp.sort((a, b) => {\n        if (\n          a.supportedNetworks.includes(this.network.type.name) ||\n          b.supportedNetworks.includes(this.network.type.name)\n        )\n          return 1;\n        return 0;\n      });\n    },\n    isOnlineAndEth() {\n      return this.online && this.network.type.name === 'ETH';\n    }\n  },\n  watch: {\n    ['swap.haveProviderRates']() {\n      if (this.isOnlineAndEth) {\n        this.haveProviderRates = this.swap.haveProviderRates;\n        this.setupSwap();\n      }\n    },\n    network() {\n      setTimeout(() => {\n        this.swap = new SwapProviders(\n          providers,\n          {\n            network: this.network.type.name,\n            web3: this.web3,\n            getRateForUnit: false\n          },\n          {\n            tokensWithBalance: this.tokensWithBalance,\n            online: this.$store.state.online\n          }\n        );\n      }, 500);\n    }\n  },\n  mounted() {\n    if (this.online && this.network.type.name === 'ETH') {\n      this.showSwapValues = true;\n    } else {\n      this.showSwapValues = false;\n    }\n  },\n  methods: {\n    goTo(page, disabled) {\n      if (disabled) return;\n      let childIndex = -1;\n      const pageInfo = this.tabData.find(entry => {\n        if (entry.name === page) {\n          return true;\n        } else if (entry.children.length > 0) {\n          const found = entry.children.findIndex(child => child.name === page);\n          if (found >= 0) {\n            childIndex = found;\n            return true;\n          }\n        }\n        return false;\n      });\n      if (childIndex >= 0) {\n        if (this.online || !pageInfo.children[childIndex].onlineOnly) {\n          this.$router.push({ path: pageInfo.children[childIndex].routes[0] });\n        }\n      } else {\n        if (this.online || !pageInfo.onlineOnly) {\n          this.$router.push({ path: pageInfo.routes[0] });\n        }\n      }\n    },\n    async setupSwap() {\n      if (this.isOnlineAndEth) {\n        for (let i = 0; i < this.swapPairs.length; i++) {\n          const swappers = await this.swap.standAloneRateEstimate(\n            this.swapPairs[i].from,\n            this.swapPairs[i].to,\n            this.swapPairs[i].amt\n          );\n          if (this.isOnlineAndEth) {\n            if (swappers) {\n              this.$set(\n                this.swapPairs[i],\n                'rate',\n                toBigNumber(swappers[0].rate).toFixed(4)\n              );\n            }\n          }\n        }\n      }\n    },\n    showSwapWidget(vals) {\n      if (this.isOnlineAndEth) {\n        this.$eventHub.$emit(\n          'showSwapWidget',\n          this.account.address,\n          vals.from,\n          vals.to,\n          vals.amt\n        );\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'DashboardContainer.scss';\n</style>\n"],"sourceRoot":"src/layouts/InterfaceLayout/containers/DashboardContainer"}]}