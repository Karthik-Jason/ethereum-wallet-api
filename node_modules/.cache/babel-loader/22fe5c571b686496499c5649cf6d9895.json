{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/dapps/ManageENS/containers/AlreadyOwnedENSContainer/AlreadyOwnedENSContainer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/dapps/ManageENS/containers/AlreadyOwnedENSContainer/AlreadyOwnedENSContainer.vue","mtime":1574677178133},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/thread-loader/dist/cjs.js","mtime":1574664277654},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js","mtime":1574664275010},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js","mtime":1574664277774}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport InterfaceBottomText from '@/components/InterfaceBottomText';\nimport { mapState } from 'vuex';\nexport default {\n  components: {\n    'interface-bottom-text': InterfaceBottomText\n  },\n  props: {\n    labelHash: {\n      type: String,\n      default: ''\n    },\n    nameHash: {\n      type: String,\n      default: ''\n    },\n    owner: {\n      type: String,\n      default: ''\n    },\n    hostName: {\n      type: String,\n      default: ''\n    },\n    tld: {\n      type: String,\n      default: ''\n    },\n    supportedCoins: {\n      type: Object,\n      default: function _default() {}\n    },\n    resolverMultiCoinSupport: {\n      type: Boolean,\n      default: false\n    },\n    txtRecords: {\n      type: Object,\n      default: function _default() {}\n    }\n  },\n  computed: _objectSpread({}, mapState(['account']), {\n    fullDomainName: function fullDomainName() {\n      return \"\".concat(this.hostName, \".\").concat(this.tld);\n    },\n    hasAnyTxt: function hasAnyTxt() {\n      for (var i in this.txtRecords) {\n        if (this.txtRecords[i] !== '') {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }),\n  mounted: function mounted() {\n    if (this.hostName === '') {\n      this.$router.push('/interface/dapps/manage-ens');\n    }\n  },\n  methods: {\n    manageEns: function manageEns() {\n      this.$router.push('manage');\n    }\n  }\n};",{"version":3,"sources":["AlreadyOwnedENSContainer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA,OAAA,mBAAA,MAAA,kCAAA;AAEA,SAAA,QAAA,QAAA,MAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,6BAAA;AADA,GADA;AAIA,EAAA,KAAA,EAAA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KATA;AAaA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAbA;AAiBA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAjBA;AAqBA,IAAA,cAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA,KArBA;AAyBA,IAAA,wBAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAzBA;AA6BA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA;AA7BA,GAJA;AAsCA,EAAA,QAAA,oBACA,QAAA,CAAA,CAAA,SAAA,CAAA,CADA;AAEA,IAAA,cAFA,4BAEA;AACA,uBAAA,KAAA,QAAA,cAAA,KAAA,GAAA;AACA,KAJA;AAKA,IAAA,SALA,uBAKA;AACA,WAAA,IAAA,CAAA,IAAA,KAAA,UAAA,EAAA;AACA,YAAA,KAAA,UAAA,CAAA,CAAA,MAAA,EAAA,EAAA;AACA,iBAAA,IAAA;AACA;AACA;;AACA,aAAA,KAAA;AACA;AAZA,IAtCA;AAoDA,EAAA,OApDA,qBAoDA;AACA,QAAA,KAAA,QAAA,KAAA,EAAA,EAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,6BAAA;AACA;AACA,GAxDA;AAyDA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,QAAA;AACA;AAHA;AAzDA,CAAA","sourcesContent":["<template lang=\"html\">\n  <div class=\"already-owned-container\">\n    <h3>{{ fullDomainName }} {{ $t('dapps.alreadyOwned') }}.</h3>\n    <div class=\"content-container\">\n      <p class=\"label\">{{ $t('dapps.labelHash') }}({{ hostName }}):</p>\n      <p class=\"content\">{{ labelHash }}</p>\n    </div>\n    <div class=\"content-container\">\n      <p class=\"label\">{{ $t('dapps.nameHash') }}({{ fullDomainName }}):</p>\n      <p class=\"content\">{{ nameHash }}</p>\n    </div>\n    <div class=\"content-container\">\n      <p class=\"label\">{{ $t('dapps.owner') }}:</p>\n      <p class=\"content\">{{ owner }}</p>\n    </div>\n    <div v-show=\"resolverMultiCoinSupport\" class=\"content-container\">\n      <h4>{{ $t('dapps.multiCoin') }}:</h4>\n      <div v-for=\"(v, k) in supportedCoins\" v-if=\"v.value\" :key=\"k.id\">\n        <span class=\"currency\">{{ v.symbol }} address: </span>\n        <span class=\"content\">{{ v.value }}</span>\n      </div>\n    </div>\n    <div v-show=\"hasAnyTxt\" class=\"content-container\">\n      <h4>{{ $t('dapps.txtRecord') }}:</h4>\n      <div v-for=\"(value, key) in txtRecords\" v-if=\"value !== ''\" :key=\"key\">\n        <span class=\"currency\">{{ key }}: </span>\n        <span class=\"content\">{{ value }}</span>\n      </div>\n    </div>\n    <div class=\"owner-options\">\n      <button\n        v-if=\"owner.toLowerCase() === account.address.toLowerCase()\"\n        class=\"manage-button\"\n        @click=\"manageEns\"\n      >\n        {{ $t('dapps.manage') }}\n      </button>\n    </div>\n    <!-- <interface-bottom-text\n      :link-text=\"$t('interface.helpCenter')\"\n      :question=\"$t('interface.haveIssues')\"\n      link=\"https://kb.myetherwallet.com\"\n    /> -->\n  </div>\n</template>\n\n<script>\nimport InterfaceBottomText from '@/components/InterfaceBottomText';\n\nimport { mapState } from 'vuex';\nexport default {\n  components: {\n    'interface-bottom-text': InterfaceBottomText\n  },\n  props: {\n    labelHash: {\n      type: String,\n      default: ''\n    },\n    nameHash: {\n      type: String,\n      default: ''\n    },\n    owner: {\n      type: String,\n      default: ''\n    },\n    hostName: {\n      type: String,\n      default: ''\n    },\n    tld: {\n      type: String,\n      default: ''\n    },\n    supportedCoins: {\n      type: Object,\n      default: function() {}\n    },\n    resolverMultiCoinSupport: {\n      type: Boolean,\n      default: false\n    },\n    txtRecords: {\n      type: Object,\n      default: function() {}\n    }\n  },\n  computed: {\n    ...mapState(['account']),\n    fullDomainName() {\n      return `${this.hostName}.${this.tld}`;\n    },\n    hasAnyTxt() {\n      for (const i in this.txtRecords) {\n        if (this.txtRecords[i] !== '') {\n          return true;\n        }\n      }\n      return false;\n    }\n  },\n  mounted() {\n    if (this.hostName === '') {\n      this.$router.push('/interface/dapps/manage-ens');\n    }\n  },\n  methods: {\n    manageEns() {\n      this.$router.push('manage');\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'AlreadyOwnedENSContainer.scss';\n</style>\n"],"sourceRoot":"src/dapps/ManageENS/containers/AlreadyOwnedENSContainer"}]}