{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/layouts/CreateWalletLayout/containers/ByJsonFileContainer/ByJsonFileContainer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/layouts/CreateWalletLayout/containers/ByJsonFileContainer/ByJsonFileContainer.vue","mtime":1573477611676},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SuccessModal from '@/containers/ConfirmationContainer/components/SuccessModal/SuccessModal.vue';\nimport ByJsonBlock from \"../../components/ByJsonBlock\";\nimport noLose from '@/assets/images/icons/no-lose.svg';\nimport noShare from '@/assets/images/icons/no-share.svg';\nimport makeBackup from '@/assets/images/icons/make-a-backup.svg';\nimport walletWorker from 'worker-loader!@/workers/wallet.worker.js';\nimport { Toast, Wallet, Configs } from '@/helpers';\nimport { mapState } from 'vuex';\nimport createBlob from '@/helpers/createBlob.js';\nexport default {\n  components: {\n    'by-json-block': ByJsonBlock,\n    'success-modal': SuccessModal\n  },\n  props: {\n    password: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      contents: [{\n        title: this.$t('createWallet.byJsonFileDontLoseTitle'),\n        desc: this.$t('createWallet.byJsonFileDontLoseDesc'),\n        img: noLose\n      }, {\n        title: this.$t('createWallet.byJsonFileDontShareTitle'),\n        desc: this.$t('createWallet.byJsonFileDontShareDesc'),\n        img: noShare\n      }, {\n        title: this.$t('createWallet.byJsonFileMakeBackupTitle'),\n        desc: this.$t('createWallet.byJsonFileMakeBackupDesc'),\n        img: makeBackup\n      }],\n      downloadable: false,\n      walletJson: '',\n      name: ''\n    };\n  },\n  computed: _objectSpread({}, mapState(['online'])),\n  mounted: function mounted() {\n    var _this = this;\n\n    if (this.online && window.Worker && window.origin !== 'null') {\n      var worker = new walletWorker();\n      worker.postMessage({\n        type: 'createWallet',\n        data: [this.password]\n      });\n\n      worker.onmessage = function (e) {\n        _this.walletJson = createBlob(e.data.walletJson, 'mime');\n        _this.downloadable = true;\n        _this.name = e.data.name.toString();\n      };\n\n      worker.onerror = function (e) {\n        Toast.responseHandler(e, false);\n      };\n    } else {\n      var _wallet = this.createWallet(this.password);\n\n      this.walletJson = createBlob(_wallet.walletJson, 'mime');\n      this.downloadable = true;\n      this.name = _wallet.name.toString();\n    }\n  },\n  methods: {\n    downloadDone: function downloadDone() {\n      this.$refs.successModal.$refs.success.show();\n    },\n    createWallet: function createWallet(password) {\n      var createdWallet = {};\n      var wallet = new Wallet.generate();\n      createdWallet.walletJson = wallet.toV3(password, {\n        kdf: Configs.wallet.kdf,\n        n: Configs.wallet.n\n      });\n      createdWallet.name = wallet.getV3Filename();\n      return createdWallet;\n    }\n  }\n};",{"version":3,"sources":["ByJsonFileContainer.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"create-wallet-by-json-file\">\n    <success-modal\n      ref=\"successModal\"\n      message=\"You have created a wallet successfully\"\n      link-to=\"/access-my-wallet\"\n      link-message=\"Access My Wallet\"\n    />\n    <div class=\"wrap\">\n      <div class=\"nav-tab-user-input-box\">\n        <b-tabs>\n          <div class=\"progress-bar\" />\n          <b-tab :title=\"$t('createWallet.byJsonFile')\" active>\n            <div class=\"title-block\">\n              <div class=\"title-popover\">\n                <h3>{{ $t('createWallet.byJsonFileSaveKeystore') }}</h3>\n              </div>\n            </div>\n            <div class=\"contents\">\n              <by-json-block\n                v-for=\"content in contents\"\n                :img=\"content.img\"\n                :title=\"content.title\"\n                :desc=\"content.desc\"\n                :key=\"content.title\"\n              />\n            </div>\n            <div class=\"user-input-container\">\n              <div class=\"user-input\">\n                <div class=\"user-button\">\n                  <a\n                    :href=\"walletJson\"\n                    :class=\"[\n                      { disable: !downloadable },\n                      'next-button',\n                      'large-round-button-green-filled',\n                      'nopadding'\n                    ]\"\n                    :download=\"name\"\n                    @click=\"downloadDone()\"\n                  >\n                    <span v-if=\"downloadable\">{{\n                      $t('createWallet.byJsonFileDownloadKeyFile')\n                    }}</span>\n                    <div v-if=\"!downloadable\" class=\"generating\">\n                      <i class=\"fa fa-spinner fa-lg fa-spin\" />\n                      <p>Please wait while we generate your keystore file...</p>\n                    </div>\n                  </a>\n                </div>\n              </div>\n            </div>\n          </b-tab>\n        </b-tabs>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport SuccessModal from '@/containers/ConfirmationContainer/components/SuccessModal/SuccessModal.vue';\nimport ByJsonBlock from '../../components/ByJsonBlock';\n\nimport noLose from '@/assets/images/icons/no-lose.svg';\nimport noShare from '@/assets/images/icons/no-share.svg';\nimport makeBackup from '@/assets/images/icons/make-a-backup.svg';\nimport walletWorker from 'worker-loader!@/workers/wallet.worker.js';\nimport { Toast, Wallet, Configs } from '@/helpers';\nimport { mapState } from 'vuex';\nimport createBlob from '@/helpers/createBlob.js';\n\nexport default {\n  components: {\n    'by-json-block': ByJsonBlock,\n    'success-modal': SuccessModal\n  },\n  props: {\n    password: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      contents: [\n        {\n          title: this.$t('createWallet.byJsonFileDontLoseTitle'),\n          desc: this.$t('createWallet.byJsonFileDontLoseDesc'),\n          img: noLose\n        },\n        {\n          title: this.$t('createWallet.byJsonFileDontShareTitle'),\n          desc: this.$t('createWallet.byJsonFileDontShareDesc'),\n          img: noShare\n        },\n        {\n          title: this.$t('createWallet.byJsonFileMakeBackupTitle'),\n          desc: this.$t('createWallet.byJsonFileMakeBackupDesc'),\n          img: makeBackup\n        }\n      ],\n      downloadable: false,\n      walletJson: '',\n      name: ''\n    };\n  },\n  computed: {\n    ...mapState(['online'])\n  },\n  mounted() {\n    if (this.online && window.Worker && window.origin !== 'null') {\n      const worker = new walletWorker();\n      worker.postMessage({ type: 'createWallet', data: [this.password] });\n      worker.onmessage = e => {\n        this.walletJson = createBlob(e.data.walletJson, 'mime');\n        this.downloadable = true;\n        this.name = e.data.name.toString();\n      };\n      worker.onerror = function(e) {\n        Toast.responseHandler(e, false);\n      };\n    } else {\n      const _wallet = this.createWallet(this.password);\n      this.walletJson = createBlob(_wallet.walletJson, 'mime');\n      this.downloadable = true;\n      this.name = _wallet.name.toString();\n    }\n  },\n  methods: {\n    downloadDone() {\n      this.$refs.successModal.$refs.success.show();\n    },\n    createWallet(password) {\n      const createdWallet = {};\n      const wallet = new Wallet.generate();\n      createdWallet.walletJson = wallet.toV3(password, {\n        kdf: Configs.wallet.kdf,\n        n: Configs.wallet.n\n      });\n      createdWallet.name = wallet.getV3Filename();\n      return createdWallet;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'ByJsonFileContainer-desktop.scss';\n@import 'ByJsonFileContainer-tablet.scss';\n@import 'ByJsonFileContainer-mobile.scss';\n</style>\n"],"sourceRoot":"src/layouts/CreateWalletLayout/containers/ByJsonFileContainer"}]}