{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/eslint-loader/index.js??ref--13-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/wallets/hardware/keepkey/errorHandler.js","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/wallets/hardware/keepkey/errorHandler.js","mtime":1573477612120},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport { Toast } from '@/helpers';\nimport Vue from 'vue';\nvar ERRORS = {\n  'No device selected.': 'keepkeyError.noDeviceSelected',\n  'Invalid PIN': 'keepkeyError.invalidPin',\n  'Unable to claim interface.': 'keepKey.cantClaim',\n  'WebUSB is not available in this browser. We recommend trying Chrome.': 'keepKey.browserNotSupported'\n};\nvar WARNING = {};\nexport default (function (err) {\n  var errorValues = Object.keys(ERRORS);\n  var warningValues = Object.keys(WARNING);\n  var foundError = errorValues.find(function (item) {\n    return item.includes(err.message) || item.includes(err);\n  });\n  var foundWarning = warningValues.find(function (item) {\n    return item.includes(err.message) || item.includes(err);\n  });\n\n  if (foundError) {\n    Toast.responseHandler(Vue.$i18n.t(ERRORS[foundError]), Toast.ERROR);\n  } else if (foundWarning) {\n    Toast.responseHandler(Vue.$i18n.t(WARNING[foundWarning]), Toast.WARN);\n  } else {\n    Toast.responseHandler(err, false);\n  }\n});",{"version":3,"sources":["/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/wallets/hardware/keepkey/errorHandler.js"],"names":["Toast","Vue","ERRORS","WARNING","err","errorValues","Object","keys","warningValues","foundError","find","item","includes","message","foundWarning","responseHandler","$i18n","t","ERROR","WARN"],"mappings":";;;;;AAAA,SAASA,KAAT,QAAsB,WAAtB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,IAAMC,MAAM,GAAG;AACb,yBAAuB,+BADV;AAEb,iBAAe,yBAFF;AAGb,gCAA8B,mBAHjB;AAIb,0EACE;AALW,CAAf;AAOA,IAAMC,OAAO,GAAG,EAAhB;AACA,gBAAe,UAAAC,GAAG,EAAI;AACpB,MAAMC,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYL,MAAZ,CAApB;AACA,MAAMM,aAAa,GAAGF,MAAM,CAACC,IAAP,CAAYJ,OAAZ,CAAtB;AACA,MAAMM,UAAU,GAAGJ,WAAW,CAACK,IAAZ,CAAiB,UAAAC,IAAI,EAAI;AAC1C,WAAOA,IAAI,CAACC,QAAL,CAAcR,GAAG,CAACS,OAAlB,KAA8BF,IAAI,CAACC,QAAL,CAAcR,GAAd,CAArC;AACD,GAFkB,CAAnB;AAIA,MAAMU,YAAY,GAAGN,aAAa,CAACE,IAAd,CAAmB,UAAAC,IAAI,EAAI;AAC9C,WAAOA,IAAI,CAACC,QAAL,CAAcR,GAAG,CAACS,OAAlB,KAA8BF,IAAI,CAACC,QAAL,CAAcR,GAAd,CAArC;AACD,GAFoB,CAArB;;AAIA,MAAIK,UAAJ,EAAgB;AACdT,IAAAA,KAAK,CAACe,eAAN,CAAsBd,GAAG,CAACe,KAAJ,CAAUC,CAAV,CAAYf,MAAM,CAACO,UAAD,CAAlB,CAAtB,EAAuDT,KAAK,CAACkB,KAA7D;AACD,GAFD,MAEO,IAAIJ,YAAJ,EAAkB;AACvBd,IAAAA,KAAK,CAACe,eAAN,CAAsBd,GAAG,CAACe,KAAJ,CAAUC,CAAV,CAAYd,OAAO,CAACW,YAAD,CAAnB,CAAtB,EAA0Dd,KAAK,CAACmB,IAAhE;AACD,GAFM,MAEA;AACLnB,IAAAA,KAAK,CAACe,eAAN,CAAsBX,GAAtB,EAA2B,KAA3B;AACD;AACF,CAlBD","sourcesContent":["import { Toast } from '@/helpers';\nimport Vue from 'vue';\nconst ERRORS = {\n  'No device selected.': 'keepkeyError.noDeviceSelected',\n  'Invalid PIN': 'keepkeyError.invalidPin',\n  'Unable to claim interface.': 'keepKey.cantClaim',\n  'WebUSB is not available in this browser. We recommend trying Chrome.':\n    'keepKey.browserNotSupported'\n};\nconst WARNING = {};\nexport default err => {\n  const errorValues = Object.keys(ERRORS);\n  const warningValues = Object.keys(WARNING);\n  const foundError = errorValues.find(item => {\n    return item.includes(err.message) || item.includes(err);\n  });\n\n  const foundWarning = warningValues.find(item => {\n    return item.includes(err.message) || item.includes(err);\n  });\n\n  if (foundError) {\n    Toast.responseHandler(Vue.$i18n.t(ERRORS[foundError]), Toast.ERROR);\n  } else if (foundWarning) {\n    Toast.responseHandler(Vue.$i18n.t(WARNING[foundWarning]), Toast.WARN);\n  } else {\n    Toast.responseHandler(err, false);\n  }\n};\n"]}]}