{"remainingRequest":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/eslint-loader/index.js??ref--13-0!/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/wallets/web3-provider/methods/eth_getTransactionCount.js","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/wallets/web3-provider/methods/eth_getTransactionCount.js","mtime":1573477612132},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport utils from 'web3-utils';\nimport { toPayload } from \"../jsonrpc\";\nimport EthCalls from \"../web3Calls\";\nimport store from 'store';\nimport BigNumber from 'bignumber.js';\nimport { Misc } from '@/helpers';\nexport default\n/*#__PURE__*/\n(function () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(_ref, res, next) {\n    var payload, requestManager, ethCalls, addr, cached, timeDiff, liveNonce, liveNonceBN, cachedNonceBN;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            payload = _ref.payload, requestManager = _ref.requestManager;\n\n            if (!(payload.method !== 'eth_getTransactionCount')) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", next());\n\n          case 3:\n            ethCalls = new EthCalls(requestManager);\n            addr = payload.params[0];\n            cached = {};\n\n            if (store.get(utils.sha3(addr)) === undefined) {\n              cached = {\n                nonce: '0x00',\n                timestamp: 0\n              };\n              store.set(utils.sha3(addr), cached);\n            } else {\n              cached = store.get(utils.sha3(addr));\n            }\n\n            timeDiff = Math.round((new Date().getTime() - cached.timestamp) / 1000) / 60;\n\n            if (!(timeDiff > 1)) {\n              _context.next = 16;\n              break;\n            }\n\n            _context.next = 11;\n            return ethCalls.getTransactionCount(addr);\n\n          case 11:\n            liveNonce = _context.sent;\n            liveNonceBN = new BigNumber(liveNonce);\n            cachedNonceBN = new BigNumber(cached.nonce);\n\n            if (timeDiff > 15) {\n              cached = {\n                nonce: Misc.sanitizeHex(liveNonceBN.toString(16)),\n                timestamp: +new Date()\n              };\n            } else if (liveNonceBN.isGreaterThan(cachedNonceBN)) {\n              cached = {\n                nonce: Misc.sanitizeHex(liveNonceBN.toString(16)),\n                timestamp: +new Date()\n              };\n            }\n\n            store.set(utils.sha3(addr), cached);\n\n          case 16:\n            res(null, toPayload(payload.id, cached.nonce));\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n})();",{"version":3,"sources":["/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/wallets/web3-provider/methods/eth_getTransactionCount.js"],"names":["utils","toPayload","EthCalls","store","BigNumber","Misc","res","next","payload","requestManager","method","ethCalls","addr","params","cached","get","sha3","undefined","nonce","timestamp","set","timeDiff","Math","round","Date","getTime","getTransactionCount","liveNonce","liveNonceBN","cachedNonceBN","sanitizeHex","toString","isGreaterThan","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,SAASC,SAAT;AACA,OAAOC,QAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,IAAT,QAAqB,WAArB;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAe,uBAAoCC,GAApC,EAAyCC,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,OAAT,QAASA,OAAT,EAAkBC,cAAlB,QAAkBA,cAAlB;;AAAA,kBACTD,OAAO,CAACE,MAAR,KAAmB,yBADV;AAAA;AAAA;AAAA;;AAAA,6CAC4CH,IAAI,EADhD;;AAAA;AAEPI,YAAAA,QAFO,GAEI,IAAIT,QAAJ,CAAaO,cAAb,CAFJ;AAGPG,YAAAA,IAHO,GAGAJ,OAAO,CAACK,MAAR,CAAe,CAAf,CAHA;AAITC,YAAAA,MAJS,GAIA,EAJA;;AAKb,gBAAIX,KAAK,CAACY,GAAN,CAAUf,KAAK,CAACgB,IAAN,CAAWJ,IAAX,CAAV,MAAgCK,SAApC,EAA+C;AAC7CH,cAAAA,MAAM,GAAG;AACPI,gBAAAA,KAAK,EAAE,MADA;AAEPC,gBAAAA,SAAS,EAAE;AAFJ,eAAT;AAIAhB,cAAAA,KAAK,CAACiB,GAAN,CAAUpB,KAAK,CAACgB,IAAN,CAAWJ,IAAX,CAAV,EAA4BE,MAA5B;AACD,aAND,MAMO;AACLA,cAAAA,MAAM,GAAGX,KAAK,CAACY,GAAN,CAAUf,KAAK,CAACgB,IAAN,CAAWJ,IAAX,CAAV,CAAT;AACD;;AACKS,YAAAA,QAdO,GAeXC,IAAI,CAACC,KAAL,CAAW,CAAC,IAAIC,IAAJ,GAAWC,OAAX,KAAuBX,MAAM,CAACK,SAA/B,IAA4C,IAAvD,IAA+D,EAfpD;;AAAA,kBAgBTE,QAAQ,GAAG,CAhBF;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAiBaV,QAAQ,CAACe,mBAAT,CAA6Bd,IAA7B,CAjBb;;AAAA;AAiBLe,YAAAA,SAjBK;AAkBLC,YAAAA,WAlBK,GAkBS,IAAIxB,SAAJ,CAAcuB,SAAd,CAlBT;AAmBLE,YAAAA,aAnBK,GAmBW,IAAIzB,SAAJ,CAAcU,MAAM,CAACI,KAArB,CAnBX;;AAoBX,gBAAIG,QAAQ,GAAG,EAAf,EAAmB;AACjBP,cAAAA,MAAM,GAAG;AACPI,gBAAAA,KAAK,EAAEb,IAAI,CAACyB,WAAL,CAAiBF,WAAW,CAACG,QAAZ,CAAqB,EAArB,CAAjB,CADA;AAEPZ,gBAAAA,SAAS,EAAE,CAAC,IAAIK,IAAJ;AAFL,eAAT;AAID,aALD,MAKO,IAAII,WAAW,CAACI,aAAZ,CAA0BH,aAA1B,CAAJ,EAA8C;AACnDf,cAAAA,MAAM,GAAG;AACPI,gBAAAA,KAAK,EAAEb,IAAI,CAACyB,WAAL,CAAiBF,WAAW,CAACG,QAAZ,CAAqB,EAArB,CAAjB,CADA;AAEPZ,gBAAAA,SAAS,EAAE,CAAC,IAAIK,IAAJ;AAFL,eAAT;AAID;;AACDrB,YAAAA,KAAK,CAACiB,GAAN,CAAUpB,KAAK,CAACgB,IAAN,CAAWJ,IAAX,CAAV,EAA4BE,MAA5B;;AA/BW;AAiCbR,YAAAA,GAAG,CAAC,IAAD,EAAOL,SAAS,CAACO,OAAO,CAACyB,EAAT,EAAanB,MAAM,CAACI,KAApB,CAAhB,CAAH;;AAjCa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import utils from 'web3-utils';\nimport { toPayload } from '../jsonrpc';\nimport EthCalls from '../web3Calls';\nimport store from 'store';\nimport BigNumber from 'bignumber.js';\nimport { Misc } from '@/helpers';\n\nexport default async ({ payload, requestManager }, res, next) => {\n  if (payload.method !== 'eth_getTransactionCount') return next();\n  const ethCalls = new EthCalls(requestManager);\n  const addr = payload.params[0];\n  let cached = {};\n  if (store.get(utils.sha3(addr)) === undefined) {\n    cached = {\n      nonce: '0x00',\n      timestamp: 0\n    };\n    store.set(utils.sha3(addr), cached);\n  } else {\n    cached = store.get(utils.sha3(addr));\n  }\n  const timeDiff =\n    Math.round((new Date().getTime() - cached.timestamp) / 1000) / 60;\n  if (timeDiff > 1) {\n    const liveNonce = await ethCalls.getTransactionCount(addr);\n    const liveNonceBN = new BigNumber(liveNonce);\n    const cachedNonceBN = new BigNumber(cached.nonce);\n    if (timeDiff > 15) {\n      cached = {\n        nonce: Misc.sanitizeHex(liveNonceBN.toString(16)),\n        timestamp: +new Date()\n      };\n    } else if (liveNonceBN.isGreaterThan(cachedNonceBN)) {\n      cached = {\n        nonce: Misc.sanitizeHex(liveNonceBN.toString(16)),\n        timestamp: +new Date()\n      };\n    }\n    store.set(utils.sha3(addr), cached);\n  }\n  res(null, toPayload(payload.id, cached.nonce));\n};\n"]}]}