{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/eslint-loader/index.js??ref--13-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/store/state.js","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/store/state.js","mtime":1574664278314},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js","mtime":1574664275010},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/eslint-loader/index.js","mtime":1574664275986}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport nodeList from '@/networks';\nimport darklist from '@/address-darklist/address-darklist.json';\nimport store from 'store';\nif (store.get('notifications') === undefined) store.set('notifications', {});\nvar gettingStartedDone = store.get('skipTutorial') !== undefined ? store.get('skipTutorial') : false;\nvar storedNetwork = store.get('network');\nvar network = BUILD_TYPE !== 'mewcx' ? nodeList['ETH'][0] : nodeList['ETH'][1];\n\nif (BUILD_TYPE !== 'mewcx' && storedNetwork !== undefined) {\n  network = storedNetwork;\n\n  if (storedNetwork.type.name !== 'CUS') {\n    network.type = nodeList[storedNetwork.type.name][0].type;\n  }\n}\n\nvar notifications = store.get('notifications') !== undefined ? store.get('notifications') : {};\nvar gasPrice = store.get('gasPrice') !== undefined ? store.get('gasPrice') : 41;\nvar customPaths = store.get('customPaths') !== undefined ? store.get('customPaths') : {};\nvar state = {\n  account: {\n    balance: 0,\n    address: null,\n    isHardware: false,\n    identifier: '',\n    nickname: ''\n  },\n  customPaths: customPaths,\n  ens: null,\n  Errors: {},\n  ethDonationAddress: '0xDECAF9CD2367cdbb726E904cD6397eDFcAe6068D',\n  gasPrice: gasPrice,\n  Networks: nodeList,\n  network: network,\n  notifications: notifications,\n  path: '',\n  online: true,\n  transactions: {},\n  wallet: null,\n  web3: {},\n  sidemenuOpen: false,\n  darklist: darklist,\n  gettingStartedDone: gettingStartedDone,\n  blockNumber: 0,\n  linkQuery: {}\n};\nexport default state;",{"version":3,"sources":["/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/store/state.js"],"names":["nodeList","darklist","store","get","undefined","set","gettingStartedDone","storedNetwork","network","BUILD_TYPE","type","name","notifications","gasPrice","customPaths","state","account","balance","address","isHardware","identifier","nickname","ens","Errors","ethDonationAddress","Networks","path","online","transactions","wallet","web3","sidemenuOpen","blockNumber","linkQuery"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,0CAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,IAAIA,KAAK,CAACC,GAAN,CAAU,eAAV,MAA+BC,SAAnC,EAA8CF,KAAK,CAACG,GAAN,CAAU,eAAV,EAA2B,EAA3B;AAC9C,IAAMC,kBAAkB,GACtBJ,KAAK,CAACC,GAAN,CAAU,cAAV,MAA8BC,SAA9B,GAA0CF,KAAK,CAACC,GAAN,CAAU,cAAV,CAA1C,GAAsE,KADxE;AAEA,IAAMI,aAAa,GAAGL,KAAK,CAACC,GAAN,CAAU,SAAV,CAAtB;AACA,IAAIK,OAAO,GAAGC,UAAU,KAAK,OAAf,GAAyBT,QAAQ,CAAC,KAAD,CAAR,CAAgB,CAAhB,CAAzB,GAA8CA,QAAQ,CAAC,KAAD,CAAR,CAAgB,CAAhB,CAA5D;;AAEA,IAAIS,UAAU,KAAK,OAAf,IAA0BF,aAAa,KAAKH,SAAhD,EAA2D;AACzDI,EAAAA,OAAO,GAAGD,aAAV;;AACA,MAAIA,aAAa,CAACG,IAAd,CAAmBC,IAAnB,KAA4B,KAAhC,EAAuC;AACrCH,IAAAA,OAAO,CAACE,IAAR,GAAeV,QAAQ,CAACO,aAAa,CAACG,IAAd,CAAmBC,IAApB,CAAR,CAAkC,CAAlC,EAAqCD,IAApD;AACD;AACF;;AAED,IAAME,aAAa,GACjBV,KAAK,CAACC,GAAN,CAAU,eAAV,MAA+BC,SAA/B,GAA2CF,KAAK,CAACC,GAAN,CAAU,eAAV,CAA3C,GAAwE,EAD1E;AAEA,IAAMU,QAAQ,GACZX,KAAK,CAACC,GAAN,CAAU,UAAV,MAA0BC,SAA1B,GAAsCF,KAAK,CAACC,GAAN,CAAU,UAAV,CAAtC,GAA8D,EADhE;AAEA,IAAMW,WAAW,GACfZ,KAAK,CAACC,GAAN,CAAU,aAAV,MAA6BC,SAA7B,GAAyCF,KAAK,CAACC,GAAN,CAAU,aAAV,CAAzC,GAAoE,EADtE;AAEA,IAAMY,KAAK,GAAG;AACZC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE,CADF;AAEPC,IAAAA,OAAO,EAAE,IAFF;AAGPC,IAAAA,UAAU,EAAE,KAHL;AAIPC,IAAAA,UAAU,EAAE,EAJL;AAKPC,IAAAA,QAAQ,EAAE;AALH,GADG;AAQZP,EAAAA,WAAW,EAAEA,WARD;AASZQ,EAAAA,GAAG,EAAE,IATO;AAUZC,EAAAA,MAAM,EAAE,EAVI;AAWZC,EAAAA,kBAAkB,EAAE,4CAXR;AAYZX,EAAAA,QAAQ,EAAEA,QAZE;AAaZY,EAAAA,QAAQ,EAAEzB,QAbE;AAcZQ,EAAAA,OAAO,EAAEA,OAdG;AAeZI,EAAAA,aAAa,EAAEA,aAfH;AAgBZc,EAAAA,IAAI,EAAE,EAhBM;AAiBZC,EAAAA,MAAM,EAAE,IAjBI;AAkBZC,EAAAA,YAAY,EAAE,EAlBF;AAmBZC,EAAAA,MAAM,EAAE,IAnBI;AAoBZC,EAAAA,IAAI,EAAE,EApBM;AAqBZC,EAAAA,YAAY,EAAE,KArBF;AAsBZ9B,EAAAA,QAAQ,EAAEA,QAtBE;AAuBZK,EAAAA,kBAAkB,EAAEA,kBAvBR;AAwBZ0B,EAAAA,WAAW,EAAE,CAxBD;AAyBZC,EAAAA,SAAS,EAAE;AAzBC,CAAd;AA4BA,eAAelB,KAAf","sourcesContent":["import nodeList from '@/networks';\nimport darklist from '@/address-darklist/address-darklist.json';\nimport store from 'store';\nif (store.get('notifications') === undefined) store.set('notifications', {});\nconst gettingStartedDone =\n  store.get('skipTutorial') !== undefined ? store.get('skipTutorial') : false;\nconst storedNetwork = store.get('network');\nlet network = BUILD_TYPE !== 'mewcx' ? nodeList['ETH'][0] : nodeList['ETH'][1];\n\nif (BUILD_TYPE !== 'mewcx' && storedNetwork !== undefined) {\n  network = storedNetwork;\n  if (storedNetwork.type.name !== 'CUS') {\n    network.type = nodeList[storedNetwork.type.name][0].type;\n  }\n}\n\nconst notifications =\n  store.get('notifications') !== undefined ? store.get('notifications') : {};\nconst gasPrice =\n  store.get('gasPrice') !== undefined ? store.get('gasPrice') : 41;\nconst customPaths =\n  store.get('customPaths') !== undefined ? store.get('customPaths') : {};\nconst state = {\n  account: {\n    balance: 0,\n    address: null,\n    isHardware: false,\n    identifier: '',\n    nickname: ''\n  },\n  customPaths: customPaths,\n  ens: null,\n  Errors: {},\n  ethDonationAddress: '0xDECAF9CD2367cdbb726E904cD6397eDFcAe6068D',\n  gasPrice: gasPrice,\n  Networks: nodeList,\n  network: network,\n  notifications: notifications,\n  path: '',\n  online: true,\n  transactions: {},\n  wallet: null,\n  web3: {},\n  sidemenuOpen: false,\n  darklist: darklist,\n  gettingStartedDone: gettingStartedDone,\n  blockNumber: 0,\n  linkQuery: {}\n};\n\nexport default state;\n"]}]}