{"remainingRequest":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/layouts/AccessWalletLayout/containers/AccessMyWalletContainer/AccessMyWalletContainer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/layouts/AccessWalletLayout/containers/AccessMyWalletContainer/AccessMyWalletContainer.vue","mtime":1573477611668},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport FinneyModal from \"../../components/FinneyModal\";\nimport AccessWalletButton from \"../../components/AccessWalletButton\";\nimport HardwareModal from \"../../components/HardwareModal\";\nimport HardwarePasswordModal from \"../../components/HardwarePasswordModal\";\nimport Web3WalletModal from \"../../components/Web3WalletModal\";\nimport MewConnectModal from \"../../components/MewConnectModal\";\nimport NetworkAndAddressModal from \"../../components/NetworkAndAddressModal\";\nimport PasswordModal from \"../../components/PasswordModal\";\nimport PrivateKeyModal from \"../../components/PrivateKeyModal\";\nimport SoftwareModal from \"../../components/SoftwareModal\";\nimport MnemonicPasswordModal from \"../../components/MnemonicPasswordModal\";\nimport MnemonicModal from \"../../components/MnemonicModal\";\nimport LedgerAppModal from \"../../components/LedgerAppModal\";\nimport WalletPasswordModal from '@/components/WalletPasswordModal';\nimport EnterPinNumberModal from '@/components/EnterPinNumberModal';\nimport XwalletModal from \"../../components/XwalletModal\";\nimport mewConnectImg from '@/assets/images/icons/button-mewconnect.svg';\nimport hardwareImg from '@/assets/images/icons/button-hardware.svg';\nimport web3Img from '@/assets/images/icons/button-web3.svg';\nimport softwareImg from '@/assets/images/icons/button-software.svg';\nimport mewConnectImgDisabled from '@/assets/images/icons/button-mewconnect-disabled.svg';\nimport hardwareImgDisabled from '@/assets/images/icons/button-hardware-disabled.svg';\nimport web3ImgDisabled from '@/assets/images/icons/button-web3-disabled.svg';\nimport softwareImgDisabled from '@/assets/images/icons/button-software-disabled.svg';\nimport { mapState } from 'vuex';\nimport { Toast } from '@/helpers';\nimport DetectRTC from 'detectrtc';\nexport default {\n  components: {\n    'mew-connect-modal': MewConnectModal,\n    'network-and-address-modal': NetworkAndAddressModal,\n    'hardware-modal': HardwareModal,\n    'hardware-password-modal': HardwarePasswordModal,\n    'metamask-modal': Web3WalletModal,\n    'software-modal': SoftwareModal,\n    'password-modal': PasswordModal,\n    'private-key-modal': PrivateKeyModal,\n    'mnemonic-modal': MnemonicModal,\n    'mnemonic-password-modal': MnemonicPasswordModal,\n    'access-wallet-button': AccessWalletButton,\n    'wallet-password-modal': WalletPasswordModal,\n    'enter-pin-number-modal': EnterPinNumberModal,\n    'ledger-app-modal': LedgerAppModal,\n    'finney-modal': FinneyModal,\n    'xwallet-modal': XwalletModal\n  },\n  data: function data() {\n    return {\n      file: {},\n      phrase: '',\n      hardwareWallet: {},\n      hardwareAddresses: [],\n      walletConstructor: function walletConstructor() {},\n      hardwareBrand: '',\n      buttons: [{\n        func: this.mewConnectModalOpen,\n        title: this.$t('common.mewConnect'),\n        desc: this.$t('accessWallet.mewConnectDesc'),\n        recommend: '',\n        tooltip: '',\n        img: mewConnectImg,\n        imgDisabled: mewConnectImgDisabled,\n        disabled: false,\n        classname: 'button-mewconnect'\n      }, {\n        func: this.hardwareModalOpen,\n        title: this.$t('common.hardware'),\n        desc: 'Ledger wallet, FINNEY, Trezor, BitBox, Secalot, KeepKey, XWallet',\n        recommend: '',\n        tooltip: '',\n        img: hardwareImg,\n        imgDisabled: hardwareImgDisabled,\n        disabled: false,\n        classname: 'button-hardware'\n      }, {\n        func: this.web3WalletModal,\n        title: 'Web3 Wallet',\n        desc: this.$t('accessWallet.web3WalletDesc'),\n        recommend: '',\n        tooltip: '',\n        img: web3Img,\n        imgDisabled: web3ImgDisabled,\n        disabled: false,\n        classname: 'button-metamask'\n      }, {\n        func: this.softwareModalOpen,\n        title: this.$t('accessWallet.software'),\n        desc: this.$t('accessWallet.softwareDesc'),\n        recommend: this.$t('accessWallet.notRecommended'),\n        tooltip: '',\n        img: softwareImg,\n        imgDisabled: softwareImgDisabled,\n        disabled: false,\n        classname: 'button-software'\n      }],\n      isMetaMask: false,\n      web3WalletExists: false\n    };\n  },\n  computed: _objectSpread({}, mapState(['online', 'Networks'])),\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      _this.buttons.forEach(function (btn) {\n        btn.disabled = _this.isDisabled(btn.classname);\n      });\n\n      _this.checkWeb3();\n\n      _this.checkIsMetamask();\n    });\n  },\n  methods: {\n    checkIsMetamask: function checkIsMetamask() {\n      this.isMetaMask = window.ethereum && window.ethereum.isMetaMask;\n    },\n    checkWeb3: function checkWeb3() {\n      this.web3WalletExists = typeof window.ethereum !== 'undefined' || typeof window.web3 !== 'undefined';\n    },\n    isDisabled: function isDisabled(className) {\n      switch (className) {\n        case 'button-mewconnect':\n          return !(this.online && DetectRTC.isWebRTCSupported);\n\n        case 'button-hardware':\n          return !this.online;\n\n        default:\n          return false;\n      }\n    },\n    mewConnectModalOpen: function mewConnectModalOpen() {\n      this.$refs.mewconnectModal.$refs.mewConnect.show();\n    },\n    ledgerAppModalOpen: function ledgerAppModalOpen() {\n      this.$refs.ledgerAppModal.$refs.ledgerApp.show();\n    },\n    networkAndAddressOpen: function networkAndAddressOpen() {\n      this.$refs.networkandaddressModal.$refs.networkAndAddress.show();\n    },\n    hardwareModalOpen: function hardwareModalOpen() {\n      this.$refs.hardwareModal.$refs.hardware.show();\n    },\n    web3WalletModal: function web3WalletModal() {\n      this.checkWeb3();\n      this.checkIsMetamask();\n      this.$refs.metamaskModal.$refs.metamask.show();\n    },\n    softwareModalOpen: function softwareModalOpen() {\n      this.$refs.softwareModal.$refs.software.show();\n    },\n    passwordOpen: function passwordOpen() {\n      this.$refs.softwareModal.$refs.software.hide();\n      this.$refs.passwordModal.$refs.password.show();\n    },\n    privateKeyOpen: function privateKeyOpen() {\n      this.$refs.softwareModal.$refs.software.hide();\n      this.$refs.privatekeyModal.$refs.privateKey.show();\n    },\n    installWeb3WalletModalOpen: function installWeb3WalletModalOpen() {\n      this.$refs.installWeb3WalletModal.$refs.installmetamask.show();\n    },\n    mnemonicphraseModalOpen: function mnemonicphraseModalOpen() {\n      this.$refs.mnemonicPhraseModal.$refs.mnemonicPhrase.show();\n      this.$refs.softwareModal.$refs.software.hide();\n    },\n    // mnemonicphrasePasswordModalOpen(phrase) {\n    //   this.phrase = phrase;\n    //   this.$refs.mnemonicPhraseModal.$refs.mnemonicPhrase.hide();\n    //   this.$refs.mnemonicPhrasePassword.$refs.password.show();\n    // },\n    fileUploaded: function fileUploaded(e) {\n      this.file = e;\n      this.passwordOpen();\n    },\n    hardwarePasswordModalOpen: function hardwarePasswordModalOpen(hardwareNeedingPassword) {\n      this.walletConstructor = hardwareNeedingPassword.walletConstructor;\n      this.hardwareBrand = hardwareNeedingPassword.hardwareBrand;\n      this.$refs.hardwareModal.$refs.hardware.hide();\n      this.$refs.hardwarePasswordModal.$refs.password.show();\n    },\n    finneyModalOpen: function finneyModalOpen() {\n      this.$refs.finney.$refs.finneyModal.show();\n    },\n    xwalletModalOpen: function xwalletModalOpen() {\n      this.$refs.xwallet.$refs.xwalletModal.show();\n    },\n    hardwareWalletOpen: function hardwareWalletOpen(wallet) {\n      // if (this.$refs.mnemonicPhrasePassword.$refs.password.visible) {\n      //   this.$refs.mnemonicPhrasePassword.$refs.password.hide();\n      // }\n      try {\n        this.hardwareWallet = wallet;\n        this.networkAndAddressOpen();\n      } catch (e) {\n        Toast.responseHandler(e, false);\n      }\n    }\n  }\n};",{"version":3,"sources":["AccessMyWalletContainer.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"access-my-wallet-options\">\n    <ledger-app-modal\n      ref=\"ledgerAppModal\"\n      :networks=\"Networks\"\n      @hardwareWalletOpen=\"hardwareWalletOpen\"\n    />\n    <mew-connect-modal\n      ref=\"mewconnectModal\"\n      :network-and-address-open=\"networkAndAddressOpen\"\n    />\n\n    <hardware-modal\n      ref=\"hardwareModal\"\n      :ledger-app-open=\"ledgerAppModalOpen\"\n      :network-and-address-open=\"networkAndAddressOpen\"\n      :open-finney=\"finneyModalOpen\"\n      :open-xwallet=\"xwalletModalOpen\"\n      @hardwareRequiresPassword=\"hardwarePasswordModalOpen\"\n      @hardwareWalletOpen=\"hardwareWalletOpen\"\n    />\n\n    <hardware-password-modal\n      ref=\"hardwarePasswordModal\"\n      :wallet-constructor=\"walletConstructor\"\n      :hardware-brand=\"hardwareBrand\"\n      @hardwareWalletOpen=\"hardwareWalletOpen\"\n    />\n\n    <network-and-address-modal\n      ref=\"networkandaddressModal\"\n      :hardware-wallet=\"hardwareWallet\"\n    />\n\n    <metamask-modal\n      ref=\"metamaskModal\"\n      :is-meta-mask=\"isMetaMask\"\n      :web3-wallet-exists=\"web3WalletExists\"\n    />\n\n    <software-modal\n      ref=\"softwareModal\"\n      :open-password=\"passwordOpen\"\n      :open-private-key-input=\"privateKeyOpen\"\n      :open-mnemonic-phrase-input=\"mnemonicphraseModalOpen\"\n      @file=\"fileUploaded\"\n    />\n\n    <password-modal ref=\"passwordModal\" :file=\"file\" />\n\n    <private-key-modal ref=\"privatekeyModal\" />\n\n    <mnemonic-modal\n      ref=\"mnemonicPhraseModal\"\n      :hardware-wallet-open=\"hardwareWalletOpen\"\n    />\n\n    <wallet-password-modal />\n    <finney-modal ref=\"finney\" />\n    <xwallet-modal ref=\"xwallet\" />\n    <enter-pin-number-modal />\n\n    <div class=\"wrap\">\n      <div class=\"page-container\">\n        <div class=\"title\">\n          <h2>{{ $t('common.accessMyWallet') }}</h2>\n          <h5>\n            {{ $t('common.noWallet') }}\n            <router-link :to=\"'/create-wallet'\" class=\"nounderline\">\n              {{ $t('common.createANewWallet') }}\n            </router-link>\n          </h5>\n        </div>\n        <div class=\"buttons-container\">\n          <access-wallet-button\n            v-for=\"(button, index) in buttons\"\n            :key=\"button.title + index\"\n            :func=\"button.func\"\n            :img=\"button.img\"\n            :img-disabled=\"button.imgDisabled\"\n            :title=\"button.title\"\n            :desc=\"button.desc\"\n            :recommend=\"button.recommend\"\n            :tooltip=\"button.tooltip\"\n            :disabled=\"button.disabled\"\n            :classname=\"button.classname\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport FinneyModal from '../../components/FinneyModal';\nimport AccessWalletButton from '../../components/AccessWalletButton';\nimport HardwareModal from '../../components/HardwareModal';\nimport HardwarePasswordModal from '../../components/HardwarePasswordModal';\nimport Web3WalletModal from '../../components/Web3WalletModal';\nimport MewConnectModal from '../../components/MewConnectModal';\nimport NetworkAndAddressModal from '../../components/NetworkAndAddressModal';\nimport PasswordModal from '../../components/PasswordModal';\nimport PrivateKeyModal from '../../components/PrivateKeyModal';\nimport SoftwareModal from '../../components/SoftwareModal';\nimport MnemonicPasswordModal from '../../components/MnemonicPasswordModal';\nimport MnemonicModal from '../../components/MnemonicModal';\nimport LedgerAppModal from '../../components/LedgerAppModal';\nimport WalletPasswordModal from '@/components/WalletPasswordModal';\nimport EnterPinNumberModal from '@/components/EnterPinNumberModal';\nimport XwalletModal from '../../components/XwalletModal';\n\nimport mewConnectImg from '@/assets/images/icons/button-mewconnect.svg';\nimport hardwareImg from '@/assets/images/icons/button-hardware.svg';\nimport web3Img from '@/assets/images/icons/button-web3.svg';\nimport softwareImg from '@/assets/images/icons/button-software.svg';\n\nimport mewConnectImgDisabled from '@/assets/images/icons/button-mewconnect-disabled.svg';\nimport hardwareImgDisabled from '@/assets/images/icons/button-hardware-disabled.svg';\nimport web3ImgDisabled from '@/assets/images/icons/button-web3-disabled.svg';\nimport softwareImgDisabled from '@/assets/images/icons/button-software-disabled.svg';\n\nimport { mapState } from 'vuex';\nimport { Toast } from '@/helpers';\n\nimport DetectRTC from 'detectrtc';\n\nexport default {\n  components: {\n    'mew-connect-modal': MewConnectModal,\n    'network-and-address-modal': NetworkAndAddressModal,\n    'hardware-modal': HardwareModal,\n    'hardware-password-modal': HardwarePasswordModal,\n    'metamask-modal': Web3WalletModal,\n    'software-modal': SoftwareModal,\n    'password-modal': PasswordModal,\n    'private-key-modal': PrivateKeyModal,\n    'mnemonic-modal': MnemonicModal,\n    'mnemonic-password-modal': MnemonicPasswordModal,\n    'access-wallet-button': AccessWalletButton,\n    'wallet-password-modal': WalletPasswordModal,\n    'enter-pin-number-modal': EnterPinNumberModal,\n    'ledger-app-modal': LedgerAppModal,\n    'finney-modal': FinneyModal,\n    'xwallet-modal': XwalletModal\n  },\n  data() {\n    return {\n      file: {},\n      phrase: '',\n      hardwareWallet: {},\n      hardwareAddresses: [],\n      walletConstructor: function() {},\n      hardwareBrand: '',\n      buttons: [\n        {\n          func: this.mewConnectModalOpen,\n          title: this.$t('common.mewConnect'),\n          desc: this.$t('accessWallet.mewConnectDesc'),\n          recommend: '',\n          tooltip: '',\n          img: mewConnectImg,\n          imgDisabled: mewConnectImgDisabled,\n          disabled: false,\n          classname: 'button-mewconnect'\n        },\n        {\n          func: this.hardwareModalOpen,\n          title: this.$t('common.hardware'),\n          desc:\n            'Ledger wallet, FINNEY, Trezor, BitBox, Secalot, KeepKey, XWallet',\n          recommend: '',\n          tooltip: '',\n          img: hardwareImg,\n          imgDisabled: hardwareImgDisabled,\n          disabled: false,\n          classname: 'button-hardware'\n        },\n        {\n          func: this.web3WalletModal,\n          title: 'Web3 Wallet',\n          desc: this.$t('accessWallet.web3WalletDesc'),\n          recommend: '',\n          tooltip: '',\n          img: web3Img,\n          imgDisabled: web3ImgDisabled,\n          disabled: false,\n          classname: 'button-metamask'\n        },\n        {\n          func: this.softwareModalOpen,\n          title: this.$t('accessWallet.software'),\n          desc: this.$t('accessWallet.softwareDesc'),\n          recommend: this.$t('accessWallet.notRecommended'),\n          tooltip: '',\n          img: softwareImg,\n          imgDisabled: softwareImgDisabled,\n          disabled: false,\n          classname: 'button-software'\n        }\n      ],\n      isMetaMask: false,\n      web3WalletExists: false\n    };\n  },\n  computed: {\n    ...mapState(['online', 'Networks'])\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.buttons.forEach(btn => {\n        btn.disabled = this.isDisabled(btn.classname);\n      });\n\n      this.checkWeb3();\n      this.checkIsMetamask();\n    });\n  },\n  methods: {\n    checkIsMetamask() {\n      this.isMetaMask = window.ethereum && window.ethereum.isMetaMask;\n    },\n    checkWeb3() {\n      this.web3WalletExists =\n        typeof window.ethereum !== 'undefined' ||\n        typeof window.web3 !== 'undefined';\n    },\n    isDisabled(className) {\n      switch (className) {\n        case 'button-mewconnect':\n          return !(this.online && DetectRTC.isWebRTCSupported);\n        case 'button-hardware':\n          return !this.online;\n        default:\n          return false;\n      }\n    },\n    mewConnectModalOpen() {\n      this.$refs.mewconnectModal.$refs.mewConnect.show();\n    },\n    ledgerAppModalOpen() {\n      this.$refs.ledgerAppModal.$refs.ledgerApp.show();\n    },\n    networkAndAddressOpen() {\n      this.$refs.networkandaddressModal.$refs.networkAndAddress.show();\n    },\n    hardwareModalOpen() {\n      this.$refs.hardwareModal.$refs.hardware.show();\n    },\n    web3WalletModal() {\n      this.checkWeb3();\n      this.checkIsMetamask();\n      this.$refs.metamaskModal.$refs.metamask.show();\n    },\n    softwareModalOpen() {\n      this.$refs.softwareModal.$refs.software.show();\n    },\n    passwordOpen() {\n      this.$refs.softwareModal.$refs.software.hide();\n      this.$refs.passwordModal.$refs.password.show();\n    },\n    privateKeyOpen() {\n      this.$refs.softwareModal.$refs.software.hide();\n      this.$refs.privatekeyModal.$refs.privateKey.show();\n    },\n    installWeb3WalletModalOpen() {\n      this.$refs.installWeb3WalletModal.$refs.installmetamask.show();\n    },\n    mnemonicphraseModalOpen() {\n      this.$refs.mnemonicPhraseModal.$refs.mnemonicPhrase.show();\n      this.$refs.softwareModal.$refs.software.hide();\n    },\n    // mnemonicphrasePasswordModalOpen(phrase) {\n    //   this.phrase = phrase;\n    //   this.$refs.mnemonicPhraseModal.$refs.mnemonicPhrase.hide();\n    //   this.$refs.mnemonicPhrasePassword.$refs.password.show();\n    // },\n    fileUploaded(e) {\n      this.file = e;\n      this.passwordOpen();\n    },\n    hardwarePasswordModalOpen(hardwareNeedingPassword) {\n      this.walletConstructor = hardwareNeedingPassword.walletConstructor;\n      this.hardwareBrand = hardwareNeedingPassword.hardwareBrand;\n      this.$refs.hardwareModal.$refs.hardware.hide();\n      this.$refs.hardwarePasswordModal.$refs.password.show();\n    },\n    finneyModalOpen() {\n      this.$refs.finney.$refs.finneyModal.show();\n    },\n    xwalletModalOpen() {\n      this.$refs.xwallet.$refs.xwalletModal.show();\n    },\n    hardwareWalletOpen(wallet) {\n      // if (this.$refs.mnemonicPhrasePassword.$refs.password.visible) {\n      //   this.$refs.mnemonicPhrasePassword.$refs.password.hide();\n      // }\n      try {\n        this.hardwareWallet = wallet;\n        this.networkAndAddressOpen();\n      } catch (e) {\n        Toast.responseHandler(e, false);\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'AccessMyWalletContainer-desktop.scss';\n@import 'AccessMyWalletContainer-tablet.scss';\n@import 'AccessMyWalletContainer-mobile.scss';\n</style>\n"],"sourceRoot":"src/layouts/AccessWalletLayout/containers/AccessMyWalletContainer"}]}