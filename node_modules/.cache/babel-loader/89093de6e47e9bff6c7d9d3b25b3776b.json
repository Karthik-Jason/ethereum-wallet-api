{"remainingRequest":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/layouts/InterfaceLayout/containers/SwapContainer/components/ProvidersRadioSelector/ProvidersRadioSelector.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/layouts/InterfaceLayout/containers/SwapContainer/components/ProvidersRadioSelector/ProvidersRadioSelector.vue","mtime":1573477612064},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport BigNumber from 'bignumber.js';\nimport MEW from '@/assets/images/logo.png';\nimport KyberNetwork from '@/assets/images/etc/kybernetwork.png';\nimport Bity from '@/assets/images/etc/bity.png';\nimport Simplex from '@/assets/images/etc/simplex.png';\nimport Changelly from '@/assets/images/etc/changelly.png';\nimport bityBeta from '@/assets/images/etc/bitybeta.png';\nimport ProviderInfoList from \"./ProviderInfoList\";\n\nvar toBigNumber = function toBigNumber(num) {\n  return new BigNumber(num);\n};\n\nexport default {\n  components: {\n    'provider-info-list': ProviderInfoList\n  },\n  props: {\n    allSupportedProviders: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    providerData: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    noProvidersPair: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    loadingData: {\n      type: Boolean,\n      default: true\n    },\n    loadingProviderRates: {\n      type: Boolean,\n      default: true\n    },\n    loadingProviderError: {\n      type: Boolean,\n      default: false\n    },\n    providersFound: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    providerSelected: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    providerSelectedName: {\n      type: String,\n      default: ''\n    },\n    fromValue: {\n      type: Number,\n      default: 0\n    },\n    toValue: {\n      type: Number,\n      default: 0\n    },\n    switchCurrencyOrder: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      providerChosen: '',\n      otherProviderList: [],\n      logos: {\n        mew: MEW,\n        kybernetwork: KyberNetwork,\n        bity: Bity,\n        simplex: Simplex,\n        changelly: Changelly\n      },\n      betaLogos: {\n        bity: bityBeta\n      }\n    };\n  },\n  computed: {\n    noAvaliableProviders: function noAvaliableProviders() {\n      return (this.providersFound.length === 0 || this.providerData.length === 0) && !this.loadingData;\n    },\n    unavailableProviders: function unavailableProviders() {\n      if (this.loadingData) {\n        var activeProviders = this.listPotentialProviders();\n        return this.allSupportedProviders.filter(function (entry) {\n          return !activeProviders.includes(entry);\n        });\n      } else if (this.providerData.length !== 0) {\n        var _activeProviders = this.listActiveProviders();\n\n        return this.allSupportedProviders.filter(function (entry) {\n          return !_activeProviders.includes(entry);\n        });\n      } else if (this.noAvaliableProviders) {\n        return this.allSupportedProviders;\n      }\n    }\n  },\n  watch: {\n    loadingData: function loadingData(val) {\n      var _this = this;\n\n      if (this.providerSelectedName !== '' && !val) {\n        this.$nextTick(function () {\n          _this.$emit('selectedProvider', _this.providerSelectedName);\n\n          var clickedEl = document.getElementsByClassName(_this.providerSelectedName)[0];\n          clickedEl.classList.add('radio-selected');\n          var inputEl = document.getElementById(_this.providerSelectedName);\n          inputEl.checked = true;\n        });\n      }\n    }\n  },\n  methods: {\n    otherProviders: function otherProviders() {\n      var activeProviders = this.listActiveProviders();\n      return this.allSupportedProviders.filter(function (entry) {\n        return !activeProviders.includes(entry);\n      });\n    },\n    otherInactiveProviders: function otherInactiveProviders() {\n      var activeProviders = this.listPotentialProviders();\n      return this.allSupportedProviders.filter(function (entry) {\n        return !activeProviders.includes(entry);\n      });\n    },\n    listActiveProviders: function listActiveProviders() {\n      var _this2 = this;\n\n      this.$nextTick(function () {\n        if (_this2.providerData.length === 1) {\n          _this2.setSelectedProvider(_this2.providerData[0].provider);\n        } else {\n          _this2.providerChosen = '';\n        }\n      });\n      var activeProviders = [];\n      this.providerData.forEach(function (entry) {\n        activeProviders.push(entry.provider);\n      });\n      return activeProviders;\n    },\n    listPotentialProviders: function listPotentialProviders() {\n      var activeProviders = [];\n      this.providersFound.forEach(function (entry) {\n        activeProviders.push(entry);\n      });\n      return activeProviders;\n    },\n    minCheck: function minCheck(details) {\n      return details.minValue > +this.fromValue;\n    },\n    maxCheck: function maxCheck(details) {\n      return +this.fromValue > details.maxValue && details.maxValue > 0;\n    },\n    setSelectedProvider: function setSelectedProvider(provider) {\n      this.providerChosen = provider;\n      var providerEls = document.getElementsByClassName('providers');\n      Array.prototype.forEach.call(providerEls, function (el) {\n        el.classList.remove('radio-selected');\n      });\n      var clickedEl = document.getElementsByClassName(provider)[0];\n      clickedEl.classList.add('radio-selected');\n      this.$emit('selectedProvider', provider);\n    },\n    providerLogo: function providerLogo(details) {\n      if (details.provider) {\n        return this.logos[details.provider];\n      }\n\n      return this.logos[details];\n    },\n    minNote: function minNote(details) {\n      if (details.minValue > 0) {\n        return [\"\".concat(toBigNumber(details.minValue).toFixed(6), \" \").concat(details.fromCurrency, \" (From Min.)\")];\n      }\n\n      return '';\n    },\n    maxNote: function maxNote(details) {\n      if (details.maxValue > 0) {\n        return \"\".concat(toBigNumber(details.maxValue).toFixed(6), \" \").concat(details.fromCurrency, \" (Max.)\");\n      }\n\n      return '';\n    },\n    formatRateDisplay: function formatRateDisplay(fromValue, fromCurrency, toValue, toCurrency) {\n      return \"\".concat(toBigNumber(fromValue).toFixed(6), \" \").concat(fromCurrency, \" = \").concat(toBigNumber(toValue).toFixed(6), \" \").concat(toCurrency);\n    },\n    normalizedRateDisplay: function normalizedRateDisplay(source) {\n      var toValue = this.valueForRate(this.fromValue, source.rate);\n      return \"\".concat(source.fromValue, \" \").concat(source.fromCurrency, \" = \").concat(toValue, \" \").concat(source.toCurrency);\n    },\n    valueForRate: function valueForRate(rate, value) {\n      return toBigNumber(value).times(rate).toFixed(6).toString(10);\n    }\n  }\n};",{"version":3,"sources":["ProvidersRadioSelector.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"providers-radio-selector\">\n    <!-- =========================================================================== -->\n    <div v-show=\"providerData.length > 0\" class=\"radio-button-container\">\n      <ul>\n        <li\n          v-for=\"(provider, idx) in providerData\"\n          :key=\"provider.provider + idx\"\n          :class=\"provider.provider\"\n          class=\"providers\"\n          @click=\"setSelectedProvider(provider.provider)\"\n        >\n          <div class=\"mew-custom-form__radio-button\">\n            <input\n              v-show=\"providerData.length > 0\"\n              v-model=\"providerChosen\"\n              :id=\"provider.provider\"\n              :value=\"provider.provider\"\n              type=\"radio\"\n              name=\"provider\"\n            />\n\n            <label :for=\"provider.provider\" />\n          </div>\n          <div class=\"provider-image\">\n            <img :src=\"providerLogo(provider)\" alt />\n          </div>\n          <div\n            :class=\"[\n              minCheck(provider) || maxCheck(provider) ? 'invalid-min-max' : ''\n            ]\"\n          >\n            {{\n              formatRateDisplay(\n                fromValue,\n                provider.fromCurrency,\n                provider.computeConversion(fromValue),\n                provider.toCurrency\n              )\n            }}\n            <div class=\"show-mobile\">\n              <p\n                v-for=\"note in minNote(provider)\"\n                :key=\"note.key\"\n                :class=\"[minCheck(provider) ? 'error-message-container' : '']\"\n              >\n                {{ note }}\n              </p>\n              <p :class=\"[maxCheck(provider) ? 'error-message-container' : '']\">\n                {{ maxNote(provider) }}\n              </p>\n            </div>\n          </div>\n          <div class=\"show-desktop\">\n            <p\n              v-for=\"note in minNote(provider)\"\n              :key=\"note.key\"\n              :class=\"[minCheck(provider) ? 'error-message-container' : '']\"\n            >\n              {{ note }}\n            </p>\n            <p :class=\"[maxCheck(provider) ? 'error-message-container' : '']\">\n              {{ maxNote(provider) }}\n            </p>\n          </div>\n        </li>\n      </ul>\n      <!-- list of other providers who don't support the selected currency pair -->\n      <provider-info-list\n        :all-supported-providers=\"allSupportedProviders\"\n        :unavailable-providers=\"unavailableProviders\"\n      />\n    </div>\n    <!-- Animation while retrieving rates for available providers when switching to and from currencies-->\n    <div\n      v-show=\"switchCurrencyOrder\"\n      class=\"radio-button-container animated-background\"\n    >\n      <ul>\n        <li v-for=\"provider in providersFound\" :key=\"provider\">\n          <div class=\"mew-custom-form__radio-button\">\n            <input type=\"radio\" name=\"provider\" /> <label :for=\"provider\" />\n          </div>\n          <div class=\"provider-image\">\n            <img :src=\"providerLogo(provider)\" alt />\n          </div>\n          <div class=\"background-masker\" />\n        </li>\n      </ul>\n    </div>\n    <!-- Animation while retrieving rates for available providers -->\n    <div\n      v-show=\"loadingData\"\n      class=\"radio-button-container animated-background\"\n    >\n      <ul>\n        <li v-for=\"provider in providersFound\" :key=\"provider\">\n          <div class=\"mew-custom-form__radio-button\">\n            <input type=\"radio\" name=\"provider\" /> <label :for=\"provider\" />\n          </div>\n          <div class=\"provider-image\">\n            <img :src=\"providerLogo(provider)\" alt />\n          </div>\n          <div class=\"background-masker\" />\n        </li>\n      </ul>\n      <provider-info-list\n        v-show=\"!loadingProviderRates\"\n        :all-supported-providers=\"allSupportedProviders\"\n        :unavailable-providers=\"unavailableProviders\"\n      />\n    </div>\n    <!-- Animation while retrieving the supporting providers rates -->\n    <!-- =========================================================================== -->\n    <div\n      v-show=\"loadingProviderRates\"\n      class=\"radio-button-container animated-background\"\n    >\n      <div class=\"provider-loading-message\">\n        {{ $t('interface.loadingProviders') }}\n      </div>\n      <provider-info-list\n        :all-supported-providers=\"allSupportedProviders\"\n        :unavailable-providers=\"unavailableProviders\"\n      />\n    </div>\n    <!-- Message When Error Seems to have occured while retrieving rate -->\n    <!-- =========================================================================== -->\n    <div\n      v-show=\"loadingProviderError && !noAvaliableProviders\"\n      class=\"radio-button-container animated-background\"\n    >\n      <ul>\n        <li>\n          <div class=\"mew-custom-form__radio-button\">\n            <input type=\"radio\" name=\"provider\" />\n          </div>\n          <div class=\"provider-image\">\n            <img :src=\"providerLogo('mew')\" alt />\n          </div>\n          <div>\n            {{ $t('interface.loadRateError') }}\n            {{ noProvidersPair.fromCurrency }} {{ $t('interface.articleTo') }}\n            {{ noProvidersPair.toCurrency }}\n            {{ $t('interface.pleaseTryAgain') }}\n          </div>\n        </li>\n      </ul>\n    </div>\n    <!-- Message when no valid provider is found for the selected pair -->\n    <!-- =========================================================================== -->\n    <div v-show=\"noAvaliableProviders\" class=\"radio-button-container\">\n      <div class=\"no-provider-message\">\n        {{ $t('interface.noProviderFound') }}\n      </div>\n      <ul>\n        <provider-info-list\n          :all-supported-providers=\"allSupportedProviders\"\n          :unavailable-providers=\"unavailableProviders\"\n        />\n      </ul>\n    </div>\n    <!-- =========================================================================== -->\n  </div>\n</template>\n\n<script>\nimport BigNumber from 'bignumber.js';\nimport MEW from '@/assets/images/logo.png';\nimport KyberNetwork from '@/assets/images/etc/kybernetwork.png';\nimport Bity from '@/assets/images/etc/bity.png';\nimport Simplex from '@/assets/images/etc/simplex.png';\nimport Changelly from '@/assets/images/etc/changelly.png';\nimport bityBeta from '@/assets/images/etc/bitybeta.png';\n\nimport ProviderInfoList from './ProviderInfoList';\n\nconst toBigNumber = num => {\n  return new BigNumber(num);\n};\n\nexport default {\n  components: {\n    'provider-info-list': ProviderInfoList\n  },\n  props: {\n    allSupportedProviders: {\n      type: Array,\n      default: function() {\n        return [];\n      }\n    },\n    providerData: {\n      type: Array,\n      default: function() {\n        return [];\n      }\n    },\n    noProvidersPair: {\n      type: Object,\n      default: function() {\n        return {};\n      }\n    },\n    loadingData: {\n      type: Boolean,\n      default: true\n    },\n    loadingProviderRates: {\n      type: Boolean,\n      default: true\n    },\n    loadingProviderError: {\n      type: Boolean,\n      default: false\n    },\n    providersFound: {\n      type: Array,\n      default: function() {\n        return [];\n      }\n    },\n    providerSelected: {\n      type: Object,\n      default: function() {\n        return {};\n      }\n    },\n    providerSelectedName: {\n      type: String,\n      default: ''\n    },\n    fromValue: {\n      type: Number,\n      default: 0\n    },\n    toValue: {\n      type: Number,\n      default: 0\n    },\n    switchCurrencyOrder: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      providerChosen: '',\n      otherProviderList: [],\n      logos: {\n        mew: MEW,\n        kybernetwork: KyberNetwork,\n        bity: Bity,\n        simplex: Simplex,\n        changelly: Changelly\n      },\n      betaLogos: {\n        bity: bityBeta\n      }\n    };\n  },\n  computed: {\n    noAvaliableProviders() {\n      return (\n        (this.providersFound.length === 0 || this.providerData.length === 0) &&\n        !this.loadingData\n      );\n    },\n    unavailableProviders() {\n      if (this.loadingData) {\n        const activeProviders = this.listPotentialProviders();\n        return this.allSupportedProviders.filter(entry => {\n          return !activeProviders.includes(entry);\n        });\n      } else if (this.providerData.length !== 0) {\n        const activeProviders = this.listActiveProviders();\n\n        return this.allSupportedProviders.filter(entry => {\n          return !activeProviders.includes(entry);\n        });\n      } else if (this.noAvaliableProviders) {\n        return this.allSupportedProviders;\n      }\n    }\n  },\n  watch: {\n    loadingData(val) {\n      if (this.providerSelectedName !== '' && !val) {\n        this.$nextTick(() => {\n          this.$emit('selectedProvider', this.providerSelectedName);\n          const clickedEl = document.getElementsByClassName(\n            this.providerSelectedName\n          )[0];\n          clickedEl.classList.add('radio-selected');\n          const inputEl = document.getElementById(this.providerSelectedName);\n          inputEl.checked = true;\n        });\n      }\n    }\n  },\n  methods: {\n    otherProviders() {\n      const activeProviders = this.listActiveProviders();\n      return this.allSupportedProviders.filter(entry => {\n        return !activeProviders.includes(entry);\n      });\n    },\n    otherInactiveProviders() {\n      const activeProviders = this.listPotentialProviders();\n      return this.allSupportedProviders.filter(entry => {\n        return !activeProviders.includes(entry);\n      });\n    },\n    listActiveProviders() {\n      this.$nextTick(() => {\n        if (this.providerData.length === 1) {\n          this.setSelectedProvider(this.providerData[0].provider);\n        } else {\n          this.providerChosen = '';\n        }\n      });\n\n      const activeProviders = [];\n      this.providerData.forEach(entry => {\n        activeProviders.push(entry.provider);\n      });\n      return activeProviders;\n    },\n    listPotentialProviders() {\n      const activeProviders = [];\n      this.providersFound.forEach(entry => {\n        activeProviders.push(entry);\n      });\n      return activeProviders;\n    },\n    minCheck(details) {\n      return details.minValue > +this.fromValue;\n    },\n    maxCheck(details) {\n      return +this.fromValue > details.maxValue && details.maxValue > 0;\n    },\n    setSelectedProvider(provider) {\n      this.providerChosen = provider;\n      const providerEls = document.getElementsByClassName('providers');\n      Array.prototype.forEach.call(providerEls, function(el) {\n        el.classList.remove('radio-selected');\n      });\n      const clickedEl = document.getElementsByClassName(provider)[0];\n      clickedEl.classList.add('radio-selected');\n      this.$emit('selectedProvider', provider);\n    },\n    providerLogo(details) {\n      if (details.provider) {\n        return this.logos[details.provider];\n      }\n      return this.logos[details];\n    },\n    minNote(details) {\n      if (details.minValue > 0) {\n        return [\n          `${toBigNumber(details.minValue).toFixed(6)} ${\n            details.fromCurrency\n          } (From Min.)`\n        ];\n      }\n      return '';\n    },\n    maxNote(details) {\n      if (details.maxValue > 0) {\n        return `${toBigNumber(details.maxValue).toFixed(6)} ${\n          details.fromCurrency\n        } (Max.)`;\n      }\n      return '';\n    },\n    formatRateDisplay(fromValue, fromCurrency, toValue, toCurrency) {\n      return `${toBigNumber(fromValue).toFixed(\n        6\n      )} ${fromCurrency} = ${toBigNumber(toValue).toFixed(6)} ${toCurrency}`;\n    },\n    normalizedRateDisplay(source) {\n      const toValue = this.valueForRate(this.fromValue, source.rate);\n      return `${source.fromValue} ${source.fromCurrency} = ${toValue} ${source.toCurrency}`;\n    },\n    valueForRate(rate, value) {\n      return toBigNumber(value)\n        .times(rate)\n        .toFixed(6)\n        .toString(10);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'ProvidersRadioSelector.scss';\n</style>\n"],"sourceRoot":"src/layouts/InterfaceLayout/containers/SwapContainer/components/ProvidersRadioSelector"}]}