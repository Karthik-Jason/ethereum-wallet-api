{"remainingRequest":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/dapps/BuySubdomain/BuySubdomain.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/dapps/BuySubdomain/BuySubdomain.vue","mtime":1573477611644},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.sort\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport InterfaceBottomText from '@/components/InterfaceBottomText';\nimport BackButton from '@/layouts/InterfaceLayout/components/BackButton';\nimport SubdomainAbi from '@/helpers/subdomainAbi.js';\nimport domains from \"./domains.json\";\nimport normalise from '@/helpers/normalise';\nimport BigNumber from 'bignumber.js';\nimport web3 from 'web3';\nimport { mapState } from 'vuex';\nimport StandardButton from '@/components/Buttons/StandardButton';\nimport { Toast } from '@/helpers';\nexport default {\n  components: {\n    'interface-bottom-text': InterfaceBottomText,\n    'back-button': BackButton,\n    'standard-button': StandardButton\n  },\n  data: function data() {\n    return {\n      subdomainContract: function subdomainContract() {},\n      ensContract: function ensContract() {},\n      results: [],\n      domainName: '',\n      knownRegistrarInstances: {},\n      hasError: false\n    };\n  },\n  computed: _objectSpread({}, mapState(['ethDonationAddress', 'ens', 'account', 'web3']), {\n    sortedResults: function sortedResults() {\n      var newArr = this.results;\n      newArr.sort(function (a, b) {\n        var ab = new BigNumber(a.price).gt(b.price) ? -1 : new BigNumber(a.price).eq(b.price) ? 0 : 1;\n        return ab;\n      });\n      var taken = newArr.filter(function (item) {\n        return item.active === false;\n      });\n      var available = newArr.filter(function (item) {\n        return item.active === true;\n      });\n      return available.concat(taken);\n    }\n  }),\n  watch: {\n    domainName: function domainName() {\n      this.query();\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    var web3C = this.web3.eth.Contract;\n    domains.forEach(function (domain) {\n      var updatedDomain = Object.assign({}, domain);\n      updatedDomain.contract = new web3C(SubdomainAbi, domain.registrar);\n      _this.knownRegistrarInstances[domain.name] = updatedDomain;\n    });\n  },\n  methods: {\n    debounceInput: web3.utils._.debounce(function (e) {\n      try {\n        this.domainName = normalise(e.target.value);\n        this.hasError = false;\n      } catch (e) {\n        Toast.responseHandler(e, Toast.WARN);\n        this.hasError = true;\n        return;\n      }\n    }, 1500),\n    query: function () {\n      var _query = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var sha3, key, getSubdomain;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.results = [];\n                sha3 = this.web3.utils.sha3;\n\n                if (!(this.domainName.length > 1)) {\n                  _context.next = 14;\n                  break;\n                }\n\n                _context.t0 = regeneratorRuntime.keys(this.knownRegistrarInstances);\n\n              case 4:\n                if ((_context.t1 = _context.t0()).done) {\n                  _context.next = 14;\n                  break;\n                }\n\n                key = _context.t1.value;\n                _context.next = 8;\n                return this.knownRegistrarInstances[key].contract.methods.query(sha3(key), this.domainName).call();\n\n              case 8:\n                getSubdomain = _context.sent;\n                getSubdomain.version = this.knownRegistrarInstances[key].version;\n\n                if (getSubdomain[0] !== '') {\n                  getSubdomain.active = true;\n                } else {\n                  getSubdomain.active = false;\n                  getSubdomain.domain = key;\n                }\n\n                this.results.push(getSubdomain);\n                _context.next = 4;\n                break;\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function query() {\n        return _query.apply(this, arguments);\n      }\n\n      return query;\n    }(),\n    buyDomain: function () {\n      var _buyDomain = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(item) {\n        var domain, subdomain, ownerAddress, referrerAddress, resolverAddress, itemContract, data, raw;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                domain = this.web3.utils.sha3(item.domain);\n                subdomain = this.domainName;\n                ownerAddress = this.account.address;\n                referrerAddress = this.ethDonationAddress;\n                _context2.next = 6;\n                return this.ens.resolver('resolver.eth').addr();\n\n              case 6:\n                resolverAddress = _context2.sent;\n                itemContract = this.knownRegistrarInstances[item.domain];\n                _context2.next = 10;\n                return item.version === '1.0' ? itemContract.contract.methods.register(domain, subdomain, ownerAddress, referrerAddress, resolverAddress).encodeABI() : itemContract.contract.methods.register(domain, subdomain, ownerAddress, resolverAddress, referrerAddress).encodeABI();\n\n              case 10:\n                data = _context2.sent;\n                raw = {\n                  from: ownerAddress,\n                  data: data,\n                  to: itemContract.registrar,\n                  value: item.price\n                };\n                this.web3.eth.sendTransaction(raw).catch(function (err) {\n                  Toast.responseHandler(err, false);\n                });\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function buyDomain(_x) {\n        return _buyDomain.apply(this, arguments);\n      }\n\n      return buyDomain;\n    }()\n  }\n};",{"version":3,"sources":["BuySubdomain.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"buy-subdomain-container\">\n    <back-button />\n    <div class=\"buy-subdomain-content\">\n      <div class=\"buy-subdomain-form-container\">\n        <div class=\"title\">\n          <h4>{{ $t('interface.nameYourWallet') }}</h4>\n        </div>\n        <div class=\"form\">\n          <div class=\"subdomain-input\">\n            <input\n              :placeholder=\"$t('dapps.subDomainPlaceholder')\"\n              :class=\"hasError ? 'errorInput' : ''\"\n              type=\"text\"\n              @input=\"debounceInput\"\n            />\n            <button type=\"button\" @click=\"query\">Check</button>\n          </div>\n          <p v-if=\"hasError\" class=\"errorText\">\n            <span>Invalid symbols</span>\n          </p>\n        </div>\n        <div v-show=\"results.length > 0\" class=\"result-section\">\n          <div class=\"title\">\n            <h4>{{ $t('dapps.allSubDomains') }}</h4>\n          </div>\n          <div class=\"results-container\">\n            <div\n              v-for=\"(item, index) in sortedResults\"\n              :key=\"domainName + item.domain + index\"\n              :class=\"[item.active ? '' : 'disabled', 'result-item']\"\n            >\n              <span class=\"domain-name\"\n                >{{ domainName }}.{{ item.domain }}.eth</span\n              >\n              <div class=\"buy-button-container\">\n                <span class=\"amt\"\n                  >{{ web3.utils.fromWei(item.price, 'ether') }} ETH</span\n                >\n                <button @click=\"buyDomain(item)\">\n                  <span v-if=\"item.active\">{{ $t('dapps.buy') }}</span>\n                  <span v-else>\n                    <i class=\"fa fa-times\" />\n                  </span>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div>\n        <interface-bottom-text\n          :link-text=\"$t('interface.helpCenter')\"\n          :question=\"$t('interface.haveIssues')\"\n          link=\"https://kb.myetherwallet.com\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport InterfaceBottomText from '@/components/InterfaceBottomText';\nimport BackButton from '@/layouts/InterfaceLayout/components/BackButton';\nimport SubdomainAbi from '@/helpers/subdomainAbi.js';\nimport domains from './domains.json';\nimport normalise from '@/helpers/normalise';\nimport BigNumber from 'bignumber.js';\nimport web3 from 'web3';\nimport { mapState } from 'vuex';\nimport StandardButton from '@/components/Buttons/StandardButton';\nimport { Toast } from '@/helpers';\nexport default {\n  components: {\n    'interface-bottom-text': InterfaceBottomText,\n    'back-button': BackButton,\n    'standard-button': StandardButton\n  },\n  data() {\n    return {\n      subdomainContract: function() {},\n      ensContract: function() {},\n      results: [],\n      domainName: '',\n      knownRegistrarInstances: {},\n      hasError: false\n    };\n  },\n  computed: {\n    ...mapState(['ethDonationAddress', 'ens', 'account', 'web3']),\n    sortedResults() {\n      const newArr = this.results;\n      newArr.sort((a, b) => {\n        const ab = new BigNumber(a.price).gt(b.price)\n          ? -1\n          : new BigNumber(a.price).eq(b.price)\n          ? 0\n          : 1;\n        return ab;\n      });\n      const taken = newArr.filter(item => {\n        return item.active === false;\n      });\n      const available = newArr.filter(item => {\n        return item.active === true;\n      });\n      return available.concat(taken);\n    }\n  },\n  watch: {\n    domainName() {\n      this.query();\n    }\n  },\n  mounted() {\n    const web3C = this.web3.eth.Contract;\n    domains.forEach(domain => {\n      const updatedDomain = Object.assign({}, domain);\n      updatedDomain.contract = new web3C(SubdomainAbi, domain.registrar);\n      this.knownRegistrarInstances[domain.name] = updatedDomain;\n    });\n  },\n  methods: {\n    debounceInput: web3.utils._.debounce(function(e) {\n      try {\n        this.domainName = normalise(e.target.value);\n        this.hasError = false;\n      } catch (e) {\n        Toast.responseHandler(e, Toast.WARN);\n        this.hasError = true;\n        return;\n      }\n    }, 1500),\n    async query() {\n      this.results = [];\n      const sha3 = this.web3.utils.sha3;\n      if (this.domainName.length > 1) {\n        for (const key in this.knownRegistrarInstances) {\n          const getSubdomain = await this.knownRegistrarInstances[\n            key\n          ].contract.methods\n            .query(sha3(key), this.domainName)\n            .call();\n          getSubdomain.version = this.knownRegistrarInstances[key].version;\n          if (getSubdomain[0] !== '') {\n            getSubdomain.active = true;\n          } else {\n            getSubdomain.active = false;\n            getSubdomain.domain = key;\n          }\n          this.results.push(getSubdomain);\n        }\n      }\n    },\n    async buyDomain(item) {\n      const domain = this.web3.utils.sha3(item.domain);\n      const subdomain = this.domainName;\n      const ownerAddress = this.account.address;\n      const referrerAddress = this.ethDonationAddress;\n      const resolverAddress = await this.ens.resolver('resolver.eth').addr();\n      const itemContract = this.knownRegistrarInstances[item.domain];\n      const data = await (item.version === '1.0'\n        ? itemContract.contract.methods\n            .register(\n              domain,\n              subdomain,\n              ownerAddress,\n              referrerAddress,\n              resolverAddress\n            )\n            .encodeABI()\n        : itemContract.contract.methods\n            .register(\n              domain,\n              subdomain,\n              ownerAddress,\n              resolverAddress,\n              referrerAddress\n            )\n            .encodeABI());\n      const raw = {\n        from: ownerAddress,\n        data: data,\n        to: itemContract.registrar,\n        value: item.price\n      };\n      this.web3.eth.sendTransaction(raw).catch(err => {\n        Toast.responseHandler(err, false);\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'BuySubdomain.scss';\n</style>\n"],"sourceRoot":"src/dapps/BuySubdomain"}]}