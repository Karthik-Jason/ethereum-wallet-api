{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/layouts/InterfaceLayout/containers/DeployContractContainer/DeployContractContainer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/layouts/InterfaceLayout/containers/DeployContractContainer/DeployContractContainer.vue","mtime":1573477612008},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport InterfaceBottomText from '@/components/InterfaceBottomText';\nimport InterfaceContainerTitle from \"../../components/InterfaceContainerTitle\";\nimport { Misc, Toast } from '@/helpers';\nimport ethUnit from 'ethjs-unit';\nimport { Transaction } from 'ethereumjs-tx';\nimport BigNumber from 'bignumber.js';\nimport store from 'store';\nimport { generateAddress, bufferToHex } from 'ethereumjs-util';\nimport { mapState } from 'vuex';\nexport default {\n  name: 'DeployContract',\n  components: {\n    'interface-bottom-text': InterfaceBottomText,\n    'interface-container-title': InterfaceContainerTitle\n  },\n  data: function data() {\n    return {\n      bytecode: '',\n      abi: '',\n      inputs: {},\n      contractName: '',\n      gasLimit: 21000,\n      data: '',\n      value: 0\n    };\n  },\n  computed: _objectSpread({}, mapState(['gasPrice', 'web3', 'network']), {\n    isValidAbi: function isValidAbi() {\n      return Misc.isJson(this.abi) && Array.isArray(JSON.parse(this.abi));\n    },\n    txValue: function txValue() {\n      return Misc.sanitizeHex(ethUnit.toWei(this.value, 'ether').toString(16));\n    },\n    abiConstructor: function abiConstructor() {\n      var _this = this;\n\n      var _constructor = null;\n\n      if (this.isValidAbi) {\n        JSON.parse(this.abi).forEach(function (item) {\n          if (item.type === 'constructor') {\n            _constructor = item;\n          }\n        });\n      } // Sets radio buttons to false due to vue reactivity\n\n\n      if (_constructor && _constructor.hasOwnProperty('inputs')) {\n        _constructor.inputs.forEach(function (item) {\n          if (item.type === 'bool') {\n            // eslint-disable-next-line\n            _this.inputs[item.name] = false;\n          }\n        });\n      }\n\n      return _constructor;\n    },\n    rawByteCode: function rawByteCode() {\n      try {\n        var remixBytecode = JSON.parse(this.bytecode);\n        if (remixBytecode.object && Misc.validateHexString(remixBytecode.object)) return '0x' + remixBytecode.object;\n      } catch (err) {\n        return this.bytecode;\n      }\n    },\n    isValidByte: function isValidByte() {\n      return this.rawByteCode && this.rawByteCode.substr(0, 2) === '0x' && Misc.validateHexString(this.rawByteCode);\n    },\n    txByteCode: function txByteCode() {\n      return Misc.sanitizeHex(this.rawByteCode);\n    },\n    deployArgs: function deployArgs() {\n      var _this2 = this;\n\n      var _deployArgs = [];\n\n      if (this.abiConstructor) {\n        this.abiConstructor.inputs.forEach(function (item) {\n          if (item.type.includes('[') && item.type.includes(']')) {\n            var inputs = _this2.inputs.hasOwnProperty(item.name) ? _this2.inputs[item.name].replace(/\\s/g, '') : '';\n            var arr = inputs.split(',');\n\n            _deployArgs.push(arr);\n          } else {\n            _deployArgs.push(_this2.inputs[item.name]);\n          }\n        });\n      }\n\n      return _deployArgs;\n    },\n    txData: function txData() {\n      return this.abi !== '' ? new this.web3.eth.Contract(JSON.parse(this.abi)).deploy({\n        data: this.txByteCode,\n        arguments: this.deployArgs\n      }).encodeABI() : '0x';\n    },\n    allValid: function allValid() {\n      var _this3 = this;\n\n      var _allvalid = true;\n\n      if (this.abiConstructor) {\n        this.abiConstructor.inputs.forEach(function (item, idx) {\n          if (!_this3.isValidInput(_this3.deployArgs[idx], _this3.getType(item.type).solidityType)) _allvalid = false;\n        });\n      }\n\n      return _allvalid && this.isValidAbi && this.isValidByte;\n    }\n  }),\n  methods: {\n    isValidInput: Misc.isContractArgValid,\n    getType: Misc.solidityType,\n    sendTransaction: function () {\n      var _sendTransaction = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var web3, coinbase, nonce, _tx, json, contractAddr;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return this.estimateGas();\n\n              case 3:\n                web3 = this.web3;\n                _context.next = 6;\n                return web3.eth.getCoinbase();\n\n              case 6:\n                coinbase = _context.sent;\n                _context.next = 9;\n                return web3.eth.getTransactionCount(coinbase);\n\n              case 9:\n                nonce = _context.sent;\n                _tx = new Transaction({\n                  nonce: nonce,\n                  value: this.txValue,\n                  gasPrice: Misc.sanitizeHex(ethUnit.toWei(this.gasPrice, 'gwei').toString(16)),\n                  gasLimit: Misc.sanitizeHex(new BigNumber(this.gasLimit).toString(16)),\n                  data: this.txData\n                });\n                json = _tx.toJSON(true);\n                delete json.to;\n                json.from = coinbase;\n                this.web3.eth.sendTransaction(json).catch(function (err) {\n                  Toast.responseHandler(err, Toast.WARN);\n                });\n                contractAddr = bufferToHex(generateAddress(coinbase, nonce));\n                this.pushContractToStore(contractAddr);\n                _context.next = 22;\n                break;\n\n              case 19:\n                _context.prev = 19;\n                _context.t0 = _context[\"catch\"](0);\n                Toast.responseHandler(_context.t0, false);\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 19]]);\n      }));\n\n      function sendTransaction() {\n        return _sendTransaction.apply(this, arguments);\n      }\n\n      return sendTransaction;\n    }(),\n    pushContractToStore: function pushContractToStore(addr) {\n      var _this4 = this;\n\n      var localStoredContract = store.get('customContracts') || [];\n      var itemIndex = localStoredContract.findIndex(function (item) {\n        return item.name.toLowerCase() === _this4.contractName.toLowerCase();\n      });\n\n      if (itemIndex === -1) {\n        var storableObj = {\n          abi: JSON.parse(this.abi),\n          address: addr,\n          comment: '',\n          name: this.contractName\n        };\n        localStoredContract.push(storableObj);\n      } else {\n        localStoredContract[itemIndex] = {\n          abi: JSON.parse(this.abi),\n          address: addr,\n          comment: '',\n          name: this.contractName\n        };\n      }\n\n      store.set('customContracts', localStoredContract);\n    },\n    confirmationModalOpen: function confirmationModalOpen() {\n      this.sendTransaction();\n      window.scrollTo(0, 0);\n    },\n    estimateGas: function () {\n      var _estimateGas = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var coinbase, params;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.web3.eth.getCoinbase();\n\n              case 2:\n                coinbase = _context2.sent;\n                params = {\n                  from: coinbase,\n                  data: this.txData,\n                  value: this.txValue\n                };\n                _context2.next = 6;\n                return this.web3.eth.estimateGas(params).catch(function (err) {\n                  Toast.responseHandler(err, Toast.WARN);\n                });\n\n              case 6:\n                this.gasLimit = _context2.sent;\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function estimateGas() {\n        return _estimateGas.apply(this, arguments);\n      }\n\n      return estimateGas;\n    }(),\n    copyToClipboard: function copyToClipboard(ref) {\n      this.$refs[ref].select();\n      document.execCommand('copy');\n    },\n    deleteInput: function deleteInput(ref) {\n      this[ref] = '';\n    }\n  }\n};",{"version":3,"sources":["DeployContractContainer.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"deploy-contract-container\">\n    <interface-container-title :title=\"$t('common.depContract')\" />\n    <div class=\"content-container\">\n      <div class=\"send-form\">\n        <div class=\"title-container\">\n          <div class=\"title\">\n            <h4>{{ $t('interface.byteCode') }}</h4>\n            <div class=\"copy-buttons\">\n              <button class=\"title-button\" @click=\"deleteInput('bytecode')\">\n                {{ $t('common.clear') }}\n              </button>\n              <button class=\"title-button\" @click=\"copyToClipboard('bytecode')\">\n                {{ $t('common.copy') }}\n              </button>\n            </div>\n          </div>\n        </div>\n        <div class=\"the-form byte-code\">\n          <textarea\n            ref=\"bytecode\"\n            v-model=\"bytecode\"\n            class=\"custom-textarea-1\"\n          />\n          <i\n            :class=\"[\n              isValidByte ? '' : 'not-good',\n              'fa fa-check-circle good-button'\n            ]\"\n            aria-hidden=\"true\"\n          />\n        </div>\n      </div>\n\n      <div class=\"send-form\">\n        <div class=\"title-container\">\n          <div class=\"title\">\n            <h4>{{ $t('interface.abiJsonInt') }}</h4>\n            <div class=\"copy-buttons\">\n              <button class=\"title-button\" @click=\"deleteInput('abi')\">\n                {{ $t('common.clear') }}\n              </button>\n              <button class=\"title-button\" @click=\"copyToClipboard('abi')\">\n                {{ $t('common.copy') }}\n              </button>\n            </div>\n          </div>\n        </div>\n        <div class=\"the-form\">\n          <textarea ref=\"abi\" v-model=\"abi\" class=\"custom-textarea-1\" />\n          <i\n            :class=\"[\n              isValidAbi && abi !== '' ? '' : 'not-good',\n              'fa fa-check-circle good-button'\n            ]\"\n            aria-hidden=\"true\"\n          />\n        </div>\n      </div>\n\n      <div v-if=\"abiConstructor\" class=\"send-form\">\n        <div class=\"title-container\">\n          <div class=\"title\">\n            <h4>\n              {{ $t('interface.constructor') }}\n              {{ abiConstructor ? 'Inputs' : 'Input' }}:\n            </h4>\n          </div>\n        </div>\n        <div\n          v-for=\"(input, idx) in abiConstructor.inputs\"\n          :key=\"input.name + idx\"\n        >\n          <div class=\"title-container\">\n            <div class=\"title\">\n              <h5>{{ input.name | capitalize }} ({{ input.type }}):</h5>\n            </div>\n          </div>\n          <div class=\"the-form contract-name\">\n            <input\n              v-if=\"getType(input.type).type !== 'radio'\"\n              :type=\"getType(input.type).type\"\n              v-model=\"inputs[input.name]\"\n            />\n            <div\n              v-if=\"getType(input.type).type === 'radio'\"\n              class=\"bool-input-container\"\n            >\n              <div>\n                <input\n                  v-model=\"inputs[input.name]\"\n                  :value=\"true\"\n                  :name=\"input.name\"\n                  type=\"radio\"\n                />\n                <label :for=\"input.name\">True</label>\n              </div>\n              <div>\n                <input\n                  v-model=\"inputs[input.name]\"\n                  :value=\"false\"\n                  :name=\"input.name\"\n                  type=\"radio\"\n                  checked\n                />\n                <label :for=\"input.name\">False</label>\n              </div>\n            </div>\n            <i\n              :class=\"[\n                isValidInput(\n                  inputs[input.name],\n                  getType(input.type).solidityType\n                )\n                  ? ''\n                  : 'not-good',\n                'fa fa-check-circle good-button'\n              ]\"\n              aria-hidden=\"true\"\n            />\n          </div>\n        </div>\n      </div>\n\n      <div\n        v-if=\"abiConstructor !== null && abiConstructor.payable\"\n        class=\"send-form\"\n      >\n        <div class=\"title-container\">\n          <div class=\"title\">\n            <h4>Value in ETH:</h4>\n          </div>\n        </div>\n        <div class=\"the-form contract-name\">\n          <input\n            ref=\"value\"\n            v-model=\"value\"\n            step=\"any\"\n            placeholder=\"Value in ETH\"\n          />\n        </div>\n      </div>\n      <div class=\"send-form\">\n        <div class=\"title-container\">\n          <div class=\"title\">\n            <h4>{{ $t('interface.contractName') }}</h4>\n          </div>\n        </div>\n        <div class=\"the-form contract-name\">\n          <input\n            ref=\"contractName\"\n            v-model=\"contractName\"\n            placeholder=\"Name for the contract\"\n          />\n        </div>\n      </div>\n\n      <div class=\"submit-button-container\">\n        <div class=\"buttons\">\n          <div\n            :class=\"[\n              allValid ? '' : 'disabled',\n              'submit-button large-round-button-green-filled clickable'\n            ]\"\n            @click=\"confirmationModalOpen\"\n          >\n            {{ $t('common.signTx') }}\n          </div>\n        </div>\n        <interface-bottom-text\n          :link-text=\"$t('interface.helpCenter')\"\n          :question=\"$t('interface.haveIssues')\"\n          link=\"https://kb.myetherwallet.com\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport InterfaceBottomText from '@/components/InterfaceBottomText';\nimport InterfaceContainerTitle from '../../components/InterfaceContainerTitle';\nimport { Misc, Toast } from '@/helpers';\nimport ethUnit from 'ethjs-unit';\nimport { Transaction } from 'ethereumjs-tx';\nimport BigNumber from 'bignumber.js';\nimport store from 'store';\nimport { generateAddress, bufferToHex } from 'ethereumjs-util';\nimport { mapState } from 'vuex';\n\nexport default {\n  name: 'DeployContract',\n  components: {\n    'interface-bottom-text': InterfaceBottomText,\n    'interface-container-title': InterfaceContainerTitle\n  },\n  data() {\n    return {\n      bytecode: '',\n      abi: '',\n      inputs: {},\n      contractName: '',\n      gasLimit: 21000,\n      data: '',\n      value: 0\n    };\n  },\n  computed: {\n    ...mapState(['gasPrice', 'web3', 'network']),\n    isValidAbi() {\n      return Misc.isJson(this.abi) && Array.isArray(JSON.parse(this.abi));\n    },\n    txValue() {\n      return Misc.sanitizeHex(ethUnit.toWei(this.value, 'ether').toString(16));\n    },\n    abiConstructor() {\n      let _constructor = null;\n      if (this.isValidAbi) {\n        JSON.parse(this.abi).forEach(item => {\n          if (item.type === 'constructor') {\n            _constructor = item;\n          }\n        });\n      }\n\n      // Sets radio buttons to false due to vue reactivity\n      if (_constructor && _constructor.hasOwnProperty('inputs')) {\n        _constructor.inputs.forEach(item => {\n          if (item.type === 'bool') {\n            // eslint-disable-next-line\n            this.inputs[item.name] = false;\n          }\n        });\n      }\n      return _constructor;\n    },\n    rawByteCode() {\n      try {\n        const remixBytecode = JSON.parse(this.bytecode);\n        if (\n          remixBytecode.object &&\n          Misc.validateHexString(remixBytecode.object)\n        )\n          return '0x' + remixBytecode.object;\n      } catch (err) {\n        return this.bytecode;\n      }\n    },\n    isValidByte() {\n      return (\n        this.rawByteCode &&\n        this.rawByteCode.substr(0, 2) === '0x' &&\n        Misc.validateHexString(this.rawByteCode)\n      );\n    },\n    txByteCode() {\n      return Misc.sanitizeHex(this.rawByteCode);\n    },\n    deployArgs() {\n      const _deployArgs = [];\n      if (this.abiConstructor) {\n        this.abiConstructor.inputs.forEach(item => {\n          if (item.type.includes('[') && item.type.includes(']')) {\n            const inputs = this.inputs.hasOwnProperty(item.name)\n              ? this.inputs[item.name].replace(/\\s/g, '')\n              : '';\n            const arr = inputs.split(',');\n            _deployArgs.push(arr);\n          } else {\n            _deployArgs.push(this.inputs[item.name]);\n          }\n        });\n      }\n      return _deployArgs;\n    },\n    txData() {\n      return this.abi !== ''\n        ? new this.web3.eth.Contract(JSON.parse(this.abi))\n            .deploy({ data: this.txByteCode, arguments: this.deployArgs })\n            .encodeABI()\n        : '0x';\n    },\n    allValid() {\n      let _allvalid = true;\n      if (this.abiConstructor) {\n        this.abiConstructor.inputs.forEach((item, idx) => {\n          if (\n            !this.isValidInput(\n              this.deployArgs[idx],\n              this.getType(item.type).solidityType\n            )\n          )\n            _allvalid = false;\n        });\n      }\n      return _allvalid && this.isValidAbi && this.isValidByte;\n    }\n  },\n  methods: {\n    isValidInput: Misc.isContractArgValid,\n    getType: Misc.solidityType,\n    async sendTransaction() {\n      try {\n        await this.estimateGas();\n        const web3 = this.web3;\n        const coinbase = await web3.eth.getCoinbase();\n        const nonce = await web3.eth.getTransactionCount(coinbase);\n        const _tx = new Transaction({\n          nonce: nonce,\n          value: this.txValue,\n          gasPrice: Misc.sanitizeHex(\n            ethUnit.toWei(this.gasPrice, 'gwei').toString(16)\n          ),\n          gasLimit: Misc.sanitizeHex(new BigNumber(this.gasLimit).toString(16)),\n          data: this.txData\n        });\n        const json = _tx.toJSON(true);\n        delete json.to;\n        json.from = coinbase;\n        this.web3.eth.sendTransaction(json).catch(err => {\n          Toast.responseHandler(err, Toast.WARN);\n        });\n        const contractAddr = bufferToHex(generateAddress(coinbase, nonce));\n        this.pushContractToStore(contractAddr);\n      } catch (e) {\n        Toast.responseHandler(e, false);\n      }\n    },\n    pushContractToStore(addr) {\n      const localStoredContract = store.get('customContracts') || [];\n      const itemIndex = localStoredContract.findIndex(item => {\n        return item.name.toLowerCase() === this.contractName.toLowerCase();\n      });\n      if (itemIndex === -1) {\n        const storableObj = {\n          abi: JSON.parse(this.abi),\n          address: addr,\n          comment: '',\n          name: this.contractName\n        };\n        localStoredContract.push(storableObj);\n      } else {\n        localStoredContract[itemIndex] = {\n          abi: JSON.parse(this.abi),\n          address: addr,\n          comment: '',\n          name: this.contractName\n        };\n      }\n      store.set('customContracts', localStoredContract);\n    },\n    confirmationModalOpen() {\n      this.sendTransaction();\n      window.scrollTo(0, 0);\n    },\n    async estimateGas() {\n      const coinbase = await this.web3.eth.getCoinbase();\n      const params = {\n        from: coinbase,\n        data: this.txData,\n        value: this.txValue\n      };\n      this.gasLimit = await this.web3.eth.estimateGas(params).catch(err => {\n        Toast.responseHandler(err, Toast.WARN);\n      });\n    },\n    copyToClipboard(ref) {\n      this.$refs[ref].select();\n      document.execCommand('copy');\n    },\n    deleteInput(ref) {\n      this[ref] = '';\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'DeployContractContainer.scss';\n</style>\n"],"sourceRoot":"src/layouts/InterfaceLayout/containers/DeployContractContainer"}]}