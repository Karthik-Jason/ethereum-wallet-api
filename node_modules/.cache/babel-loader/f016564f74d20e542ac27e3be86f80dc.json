{"remainingRequest":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/containers/ConfirmationContainer/components/ConfirmModal/ConfirmModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/containers/ConfirmationContainer/components/ConfirmModal/ConfirmModal.vue","mtime":1573477611636},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport AddressBlock from \"../AddressBlock\";\nimport { mapState } from 'vuex';\nimport StandardButton from '@/components/Buttons/StandardButton';\nimport parseTokensData from '@/helpers/parseTokensData.js';\nexport default {\n  components: {\n    'address-block': AddressBlock,\n    'standard-button': StandardButton\n  },\n  props: {\n    confirmSendTx: {\n      type: Function,\n      default: function _default() {}\n    },\n    fee: {\n      type: String,\n      default: ''\n    },\n    signedTx: {\n      type: String,\n      default: ''\n    },\n    data: {\n      type: String,\n      default: '0x'\n    },\n    from: {\n      type: String,\n      default: ''\n    },\n    gas: {\n      type: String,\n      default: ''\n    },\n    gasPrice: {\n      type: Number,\n      default: 0\n    },\n    nonce: {\n      type: String,\n      default: ''\n    },\n    to: {\n      type: String,\n      default: ''\n    },\n    value: {\n      type: String,\n      default: ''\n    },\n    isHardwareWallet: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      modalDetailInformation: false,\n      transactionSigned: false,\n      tokenTransferTo: '',\n      tokenTransferVal: '',\n      tokenSymbol: '',\n      buttonSendTx: {\n        title: 'Confirm and Send',\n        buttonStyle: 'green',\n        mobileFullWidth: true,\n        helpCenter: true\n      }\n    };\n  },\n  computed: _objectSpread({}, mapState(['web3', 'network']), {\n    signedTransaction: function signedTransaction() {\n      if (this.signedMessage) {\n        return this.signedMessage;\n      } else if (this.isHardwareWallet) {\n        return this.$t('confirmation.approveOnDevice');\n      }\n\n      return '';\n    }\n  }),\n  watch: {\n    data: function data(newVal) {\n      this.parseData(newVal);\n    }\n  },\n  mounted: function mounted() {\n    if (this.data !== '0x') {\n      this.parseData();\n    }\n  },\n  methods: {\n    sendTx: function sendTx() {\n      if (this.signedTx !== '') {\n        this.confirmSendTx();\n      }\n    },\n    parseData: function parseData(val) {\n      var localVal = val ? val : this.data;\n      var tokenInfo = parseTokensData(localVal, this.to, this.web3, this.network.type.tokens, this.network.type.name);\n      this.tokenTransferTo = tokenInfo.tokenTransferTo;\n      this.tokenTransferVal = tokenInfo.tokenTransferVal;\n      this.tokenSymbol = tokenInfo.tokenSymbol;\n    }\n  }\n};",{"version":3,"sources":["ConfirmModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"modal-container\">\n    <b-modal\n      ref=\"confirmation\"\n      hide-footer\n      centered\n      class=\"bootstrap-modal-wide confirmation-modal nopadding\"\n      title=\"Confirmation\"\n      static\n      lazy\n    >\n      <div class=\"modal-content qrcode-modal\">\n        <div class=\"tx-info\">\n          <address-block\n            :currency=\"network.type.currencyName\"\n            :icon=\"network.type.icon\"\n            :address=\"from\"\n            :value=\"value\"\n            :token-transfer-val=\"tokenTransferVal\"\n            :token-symbol=\"tokenSymbol\"\n            direction=\"from\"\n          />\n          <div v-show=\"to !== '' && to !== undefined\" class=\"direction\">\n            <img src=\"~@/assets/images/icons/right-arrow.svg\" alt />\n          </div>\n          <address-block\n            v-show=\"to !== '' && to !== undefined\"\n            :currency=\"network.type.currencyName\"\n            :icon=\"network.type.icon\"\n            :address=\"to\"\n            :token-transfer-to=\"tokenTransferTo\"\n            :token-transfer-val=\"tokenTransferVal\"\n            :token-symbol=\"tokenSymbol\"\n            :value=\"value\"\n            direction=\"to\"\n          />\n        </div>\n        <div class=\"detail-info\">\n          <div class=\"info\">\n            <h4>Detail Information</h4>\n            <div class=\"sliding-switch-white\">\n              <label class=\"switch\">\n                <input\n                  type=\"checkbox\"\n                  @click=\"modalDetailInformation = !modalDetailInformation\"\n                />\n                <span class=\"slider round\" />\n              </label>\n            </div>\n          </div>\n          <div\n            :class=\"modalDetailInformation && 'expended-info-open'\"\n            class=\"expended-info\"\n          >\n            <div class=\"padding-container\">\n              <div class=\"grid-block\">\n                <p>{{ $t('interface.network') }}</p>\n                <p>{{ network.type.name }} by {{ network.service }}</p>\n              </div>\n              <div class=\"grid-block\">\n                <p>{{ $t('common.gasLimit') }}</p>\n                <p>{{ gas }} wei</p>\n              </div>\n              <div class=\"grid-block\">\n                <p>{{ $t('common.gasPrice') }}</p>\n                <p>{{ gasPrice }} gwei</p>\n              </div>\n              <div class=\"grid-block\">\n                <p>{{ $t('common.txFee') }}</p>\n                <p>{{ fee }} {{ network.type.currencyName }}</p>\n              </div>\n              <div class=\"grid-block\">\n                <p>Nonce</p>\n                <p>{{ nonce }}</p>\n              </div>\n              <div class=\"grid-block\">\n                <p>{{ $t('common.data') }}</p>\n                <p>{{ data }}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"submit-button-container\">\n          <standard-button\n            :options=\"buttonSendTx\"\n            :button-disabled=\"signedTx !== '' ? false : true\"\n            @click.native=\"sendTx\"\n          />\n        </div>\n      </div>\n    </b-modal>\n  </div>\n</template>\n\n<script>\nimport AddressBlock from '../AddressBlock';\nimport { mapState } from 'vuex';\nimport StandardButton from '@/components/Buttons/StandardButton';\nimport parseTokensData from '@/helpers/parseTokensData.js';\n\nexport default {\n  components: {\n    'address-block': AddressBlock,\n    'standard-button': StandardButton\n  },\n  props: {\n    confirmSendTx: {\n      type: Function,\n      default: function() {}\n    },\n    fee: {\n      type: String,\n      default: ''\n    },\n    signedTx: {\n      type: String,\n      default: ''\n    },\n    data: {\n      type: String,\n      default: '0x'\n    },\n    from: {\n      type: String,\n      default: ''\n    },\n    gas: {\n      type: String,\n      default: ''\n    },\n    gasPrice: {\n      type: Number,\n      default: 0\n    },\n    nonce: {\n      type: String,\n      default: ''\n    },\n    to: {\n      type: String,\n      default: ''\n    },\n    value: {\n      type: String,\n      default: ''\n    },\n    isHardwareWallet: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      modalDetailInformation: false,\n      transactionSigned: false,\n      tokenTransferTo: '',\n      tokenTransferVal: '',\n      tokenSymbol: '',\n      buttonSendTx: {\n        title: 'Confirm and Send',\n        buttonStyle: 'green',\n        mobileFullWidth: true,\n        helpCenter: true\n      }\n    };\n  },\n  computed: {\n    ...mapState(['web3', 'network']),\n    signedTransaction() {\n      if (this.signedMessage) {\n        return this.signedMessage;\n      } else if (this.isHardwareWallet) {\n        return this.$t('confirmation.approveOnDevice');\n      }\n      return '';\n    }\n  },\n  watch: {\n    data(newVal) {\n      this.parseData(newVal);\n    }\n  },\n  mounted() {\n    if (this.data !== '0x') {\n      this.parseData();\n    }\n  },\n  methods: {\n    sendTx() {\n      if (this.signedTx !== '') {\n        this.confirmSendTx();\n      }\n    },\n    parseData(val) {\n      const localVal = val ? val : this.data;\n      const tokenInfo = parseTokensData(\n        localVal,\n        this.to,\n        this.web3,\n        this.network.type.tokens,\n        this.network.type.name\n      );\n      this.tokenTransferTo = tokenInfo.tokenTransferTo;\n      this.tokenTransferVal = tokenInfo.tokenTransferVal;\n      this.tokenSymbol = tokenInfo.tokenSymbol;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'ConfirmModal.scss';\n</style>\n"],"sourceRoot":"src/containers/ConfirmationContainer/components/ConfirmModal"}]}