{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/layouts/InterfaceLayout/components/InterfaceBalanceModal/InterfaceBalanceModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/layouts/InterfaceLayout/components/InterfaceBalanceModal/InterfaceBalanceModal.vue","mtime":1573477611964},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport BigNumber from 'bignumber.js';\nexport default {\n  props: {\n    balance: {\n      type: String,\n      default: '0'\n    }\n  },\n  data: function data() {\n    return {\n      equivalentValues: [{\n        name: 'BTC',\n        value: ''\n      }, {\n        name: 'REP',\n        value: ''\n      }, {\n        name: 'CHF',\n        value: ''\n      }, {\n        name: 'USD',\n        value: ''\n      }, {\n        name: 'EUR',\n        value: ''\n      }, {\n        name: 'GBP',\n        value: ''\n      }]\n    };\n  },\n  computed: _objectSpread({}, mapState(['network', 'online'])),\n  watch: {\n    balance: function balance() {\n      this.fetchBalanceData();\n    }\n  },\n  mounted: function mounted() {\n    this.fetchBalanceData();\n  },\n  methods: {\n    fetchBalanceData: function () {\n      var _fetchBalanceData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        var newArr, url, fetchValues, values;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.online) {\n                  _context.next = 12;\n                  break;\n                }\n\n                newArr = [];\n                url = 'https://cryptorates.mewapi.io/convert/ETH';\n                _context.next = 5;\n                return fetch(url);\n\n              case 5:\n                fetchValues = _context.sent;\n                _context.next = 8;\n                return fetchValues.json();\n\n              case 8:\n                values = _context.sent;\n                delete values['lastCalled'];\n                Object.keys(values).forEach(function (item) {\n                  if (_this.equivalentValues.find(function (curr) {\n                    return curr.name === item;\n                  })) {\n                    var objectRes = {\n                      name: item,\n                      value: new BigNumber(_this.balance).multipliedBy(new BigNumber(values[item])).decimalPlaces(18).toFixed()\n                    };\n                    newArr.push(objectRes);\n                  }\n                });\n                this.equivalentValues = newArr;\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function fetchBalanceData() {\n        return _fetchBalanceData.apply(this, arguments);\n      }\n\n      return fetchBalanceData;\n    }()\n  }\n};",{"version":3,"sources":["InterfaceBalanceModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,SAAA,QAAA,QAAA,MAAA;AACA,OAAA,SAAA,MAAA,cAAA;AACA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AADA,GADA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AACA,MAAA,gBAAA,EAAA,CACA;AACA,QAAA,IAAA,EAAA,KADA;AAEA,QAAA,KAAA,EAAA;AAFA,OADA,EAKA;AACA,QAAA,IAAA,EAAA,KADA;AAEA,QAAA,KAAA,EAAA;AAFA,OALA,EASA;AACA,QAAA,IAAA,EAAA,KADA;AAEA,QAAA,KAAA,EAAA;AAFA,OATA,EAaA;AACA,QAAA,IAAA,EAAA,KADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAbA,EAiBA;AACA,QAAA,IAAA,EAAA,KADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAjBA,EAqBA;AACA,QAAA,IAAA,EAAA,KADA;AAEA,QAAA,KAAA,EAAA;AAFA,OArBA;AADA,KAAA;AA4BA,GApCA;AAqCA,EAAA,QAAA,oBACA,QAAA,CAAA,CAAA,SAAA,EAAA,QAAA,CAAA,CADA,CArCA;AAwCA,EAAA,KAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,WAAA,gBAAA;AACA;AAHA,GAxCA;AA6CA,EAAA,OA7CA,qBA6CA;AACA,SAAA,gBAAA;AACA,GA/CA;AAiDA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEA,KAAA,MAFA;AAAA;AAAA;AAAA;;AAGA,gBAAA,MAHA,GAGA,EAHA;AAIA,gBAAA,GAJA,GAIA,2CAJA;AAAA;AAAA,uBAKA,KAAA,CAAA,GAAA,CALA;;AAAA;AAKA,gBAAA,WALA;AAAA;AAAA,uBAMA,WAAA,CAAA,IAAA,EANA;;AAAA;AAMA,gBAAA,MANA;AAOA,uBAAA,MAAA,CAAA,YAAA,CAAA;AACA,gBAAA,MAAA,CAAA,IAAA,CAAA,MAAA,EAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,sBACA,KAAA,CAAA,gBAAA,CAAA,IAAA,CAAA,UAAA,IAAA,EAAA;AACA,2BAAA,IAAA,CAAA,IAAA,KAAA,IAAA;AACA,mBAFA,CADA,EAIA;AACA,wBAAA,SAAA,GAAA;AACA,sBAAA,IAAA,EAAA,IADA;AAEA,sBAAA,KAAA,EAAA,IAAA,SAAA,CAAA,KAAA,CAAA,OAAA,EACA,YADA,CACA,IAAA,SAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CADA,EAEA,aAFA,CAEA,EAFA,EAGA,OAHA;AAFA,qBAAA;AAOA,oBAAA,MAAA,CAAA,IAAA,CAAA,SAAA;AACA;AACA,iBAfA;AAgBA,qBAAA,gBAAA,GAAA,MAAA;;AAxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAjDA,CAAA","sourcesContent":["<template>\n  <div class=\"modal-container\">\n    <b-modal\n      ref=\"balance\"\n      :title=\"$t('interface.balance')\"\n      hide-footer\n      centered\n      class=\"bootstrap-modal balance nopadding\"\n      static\n      lazy\n    >\n      <div class=\"content-block total-balance\">\n        <div class=\"flex-container\">\n          <h4 class=\"modal-title\">{{ $t('common.totalBalance') }}</h4>\n          <div class=\"margin-left-auto total-balance-amount\">\n            <span>{{ balance }}</span>\n            {{ network.type.currencyName }}\n          </div>\n        </div>\n      </div>\n\n      <div class=\"content-block\">\n        <h4 class=\"equivalent-values-title\">\n          {{ $t('interface.equivalentValues') }}\n        </h4>\n        <ul class=\"equivalent-values\">\n          <li v-for=\"ev in equivalentValues\" :key=\"ev.key\">\n            <img\n              :src=\"\n                require(`@/assets/images/currency/${ev.name.toLowerCase()}.svg`)\n              \"\n              alt\n            />\n            <p class=\"ev-name\">{{ ev.name }}</p>\n            <p class=\"ev-value\">{{ ev.value }}</p>\n          </li>\n        </ul>\n      </div>\n    </b-modal>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport BigNumber from 'bignumber.js';\nexport default {\n  props: {\n    balance: {\n      type: String,\n      default: '0'\n    }\n  },\n  data() {\n    return {\n      equivalentValues: [\n        {\n          name: 'BTC',\n          value: ''\n        },\n        {\n          name: 'REP',\n          value: ''\n        },\n        {\n          name: 'CHF',\n          value: ''\n        },\n        {\n          name: 'USD',\n          value: ''\n        },\n        {\n          name: 'EUR',\n          value: ''\n        },\n        {\n          name: 'GBP',\n          value: ''\n        }\n      ]\n    };\n  },\n  computed: {\n    ...mapState(['network', 'online'])\n  },\n  watch: {\n    balance() {\n      this.fetchBalanceData();\n    }\n  },\n  mounted() {\n    this.fetchBalanceData();\n  },\n\n  methods: {\n    async fetchBalanceData() {\n      if (this.online) {\n        const newArr = [];\n        const url = 'https://cryptorates.mewapi.io/convert/ETH';\n        const fetchValues = await fetch(url);\n        const values = await fetchValues.json();\n        delete values['lastCalled'];\n        Object.keys(values).forEach(item => {\n          if (\n            this.equivalentValues.find(curr => {\n              return curr.name === item;\n            })\n          ) {\n            const objectRes = {\n              name: item,\n              value: new BigNumber(this.balance)\n                .multipliedBy(new BigNumber(values[item]))\n                .decimalPlaces(18)\n                .toFixed()\n            };\n            newArr.push(objectRes);\n          }\n        });\n        this.equivalentValues = newArr;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'InterfaceBalanceModal.scss';\n</style>\n"],"sourceRoot":"src/layouts/InterfaceLayout/components/InterfaceBalanceModal"}]}