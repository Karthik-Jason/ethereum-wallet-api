{"remainingRequest":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/eslint-loader/index.js??ref--13-0!/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/wallets/web3-provider/methods/net_version.js","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/wallets/web3-provider/methods/net_version.js","mtime":1573477612132},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport { toPayload } from \"../jsonrpc\";\nexport default\n/*#__PURE__*/\n(function () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(_ref, res, next) {\n    var payload, store;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            payload = _ref.payload, store = _ref.store;\n\n            if (!(payload.method !== 'net_version')) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", next());\n\n          case 3:\n            res(null, toPayload(payload.id, store.state.network.type.chainID));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n})();",{"version":3,"sources":["/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/wallets/web3-provider/methods/net_version.js"],"names":["toPayload","res","next","payload","store","method","id","state","network","type","chainID"],"mappings":";;AAAA,SAASA,SAAT;AACA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAe,uBAA2BC,GAA3B,EAAgCC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,OAAT,QAASA,OAAT,EAAkBC,KAAlB,QAAkBA,KAAlB;;AAAA,kBACTD,OAAO,CAACE,MAAR,KAAmB,aADV;AAAA;AAAA;AAAA;;AAAA,6CACgCH,IAAI,EADpC;;AAAA;AAEbD,YAAAA,GAAG,CAAC,IAAD,EAAOD,SAAS,CAACG,OAAO,CAACG,EAAT,EAAaF,KAAK,CAACG,KAAN,CAAYC,OAAZ,CAAoBC,IAApB,CAAyBC,OAAtC,CAAhB,CAAH;;AAFa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { toPayload } from '../jsonrpc';\nexport default async ({ payload, store }, res, next) => {\n  if (payload.method !== 'net_version') return next();\n  res(null, toPayload(payload.id, store.state.network.type.chainID));\n};\n"]}]}