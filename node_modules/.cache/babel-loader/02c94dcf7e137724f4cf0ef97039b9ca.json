{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/layouts/AccessWalletLayout/components/PasswordModal/PasswordModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/layouts/AccessWalletLayout/components/PasswordModal/PasswordModal.vue","mtime":1574664278286},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js","mtime":1574664275010},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js","mtime":1574664277774}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { WalletInterface } from '@/wallets';\nimport { KEYSTORE as keyStoreType } from '@/wallets/bip44/walletTypes';\nimport walletWorker from 'worker-loader!@/workers/wallet.worker.js';\nimport { mapState } from 'vuex';\nimport { Toast, Wallet } from '@/helpers';\nimport WarningMessage from '@/components/WarningMessage';\nexport default {\n  components: {\n    'warning-message': WarningMessage\n  },\n  props: {\n    file: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    return {\n      show: false,\n      password: '',\n      spinner: false\n    };\n  },\n  computed: _objectSpread({}, mapState(['path', 'online']), {\n    inputValid: function inputValid() {\n      return this.walletRequirePass(this.file) && (this.password === '' || this.password.length === 0);\n    }\n  }),\n  watch: {\n    password: function password() {\n      this.error = '';\n    }\n  },\n  methods: {\n    walletRequirePass: function walletRequirePass(ethjson) {\n      if (ethjson.encseed != null) return true;else if (ethjson.Crypto != null || ethjson.crypto != null) return true;else if (ethjson.hash != null && ethjson.locked) return true;else if (ethjson.hash != null && !ethjson.locked) return false;else if (ethjson.publisher == 'MyEtherWallet' && !ethjson.encrypted) return false;\n      return true;\n    },\n    unlockWallet: function unlockWallet() {\n      var _this = this;\n\n      this.spinner = true;\n\n      if (this.online && window.Worker && window.origin !== 'null') {\n        var worker = new walletWorker();\n        var self = this;\n        worker.postMessage({\n          type: 'unlockWallet',\n          data: [this.file, this.password]\n        });\n\n        worker.onmessage = function (e) {\n          var obj = {\n            file: this.file,\n            name: e.data.filename\n          };\n          self.setUnlockedWallet(new WalletInterface(Buffer.from(e.data._privKey), false, keyStoreType, '', JSON.stringify(obj)));\n        };\n\n        worker.onerror = function (e) {\n          e.preventDefault();\n          self.spinner = false;\n          Toast.responseHandler(e, Toast.ERROR);\n        };\n      } else {\n        var newFile = {};\n        Object.keys(this.file).forEach(function (key) {\n          newFile[key.toLowerCase()] = _this.file[key];\n        });\n\n        var _wallet = Wallet.fromV3(newFile, this.password, true);\n\n        this.setUnlockedWallet(new WalletInterface(Buffer.from(_wallet._privKey), false, keyStoreType));\n      }\n    },\n    setUnlockedWallet: function setUnlockedWallet(wallet) {\n      var _this2 = this;\n\n      this.$store.dispatch('decryptWallet', [wallet]).then(function () {\n        _this2.spinner = false;\n        _this2.password = '';\n\n        _this2.$router.push({\n          path: 'interface'\n        });\n      });\n    },\n    switchViewPassword: function switchViewPassword() {\n      this.show = !this.show;\n    },\n    focusInput: function focusInput() {\n      this.password = '';\n      this.$refs.passwordInput.focus();\n    }\n  }\n};",{"version":3,"sources":["PasswordModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA,SAAA,eAAA,QAAA,WAAA;AACA,SAAA,QAAA,IAAA,YAAA,QAAA,6BAAA;AACA,OAAA,YAAA,MAAA,0CAAA;AACA,SAAA,QAAA,QAAA,MAAA;AACA,SAAA,KAAA,EAAA,MAAA,QAAA,WAAA;AACA,OAAA,cAAA,MAAA,6BAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,uBAAA;AADA,GADA;AAIA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA;AACA,eAAA,EAAA;AACA;AAJA;AADA,GAJA;AAYA,EAAA,IAZA,kBAYA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAGA,MAAA,OAAA,EAAA;AAHA,KAAA;AAKA,GAlBA;AAmBA,EAAA,QAAA,oBACA,QAAA,CAAA,CAAA,MAAA,EAAA,QAAA,CAAA,CADA;AAEA,IAAA,UAFA,wBAEA;AACA,aACA,KAAA,iBAAA,CAAA,KAAA,IAAA,MACA,KAAA,QAAA,KAAA,EAAA,IAAA,KAAA,QAAA,CAAA,MAAA,KAAA,CADA,CADA;AAIA;AAPA,IAnBA;AA4BA,EAAA,KAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,WAAA,KAAA,GAAA,EAAA;AACA;AAHA,GA5BA;AAiCA,EAAA,OAAA,EAAA;AACA,IAAA,iBADA,6BACA,OADA,EACA;AACA,UAAA,OAAA,CAAA,OAAA,IAAA,IAAA,EAAA,OAAA,IAAA,CAAA,KACA,IAAA,OAAA,CAAA,MAAA,IAAA,IAAA,IAAA,OAAA,CAAA,MAAA,IAAA,IAAA,EAAA,OAAA,IAAA,CAAA,KACA,IAAA,OAAA,CAAA,IAAA,IAAA,IAAA,IAAA,OAAA,CAAA,MAAA,EAAA,OAAA,IAAA,CAAA,KACA,IAAA,OAAA,CAAA,IAAA,IAAA,IAAA,IAAA,CAAA,OAAA,CAAA,MAAA,EAAA,OAAA,KAAA,CAAA,KACA,IAAA,OAAA,CAAA,SAAA,IAAA,eAAA,IAAA,CAAA,OAAA,CAAA,SAAA,EACA,OAAA,KAAA;AACA,aAAA,IAAA;AACA,KATA;AAUA,IAAA,YAVA,0BAUA;AAAA;;AACA,WAAA,OAAA,GAAA,IAAA;;AAEA,UAAA,KAAA,MAAA,IAAA,MAAA,CAAA,MAAA,IAAA,MAAA,CAAA,MAAA,KAAA,MAAA,EAAA;AACA,YAAA,MAAA,GAAA,IAAA,YAAA,EAAA;AACA,YAAA,IAAA,GAAA,IAAA;AACA,QAAA,MAAA,CAAA,WAAA,CAAA;AACA,UAAA,IAAA,EAAA,cADA;AAEA,UAAA,IAAA,EAAA,CAAA,KAAA,IAAA,EAAA,KAAA,QAAA;AAFA,SAAA;;AAIA,QAAA,MAAA,CAAA,SAAA,GAAA,UAAA,CAAA,EAAA;AACA,cAAA,GAAA,GAAA;AACA,YAAA,IAAA,EAAA,KAAA,IADA;AAEA,YAAA,IAAA,EAAA,CAAA,CAAA,IAAA,CAAA;AAFA,WAAA;AAIA,UAAA,IAAA,CAAA,iBAAA,CACA,IAAA,eAAA,CACA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,QAAA,CADA,EAEA,KAFA,EAGA,YAHA,EAIA,EAJA,EAKA,IAAA,CAAA,SAAA,CAAA,GAAA,CALA,CADA;AASA,SAdA;;AAeA,QAAA,MAAA,CAAA,OAAA,GAAA,UAAA,CAAA,EAAA;AACA,UAAA,CAAA,CAAA,cAAA;AACA,UAAA,IAAA,CAAA,OAAA,GAAA,KAAA;AACA,UAAA,KAAA,CAAA,eAAA,CAAA,CAAA,EAAA,KAAA,CAAA,KAAA;AACA,SAJA;AAKA,OA3BA,MA2BA;AACA,YAAA,OAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,IAAA,CAAA,KAAA,IAAA,EAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,WAAA,EAAA,CAAA,GAAA,KAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AACA,SAFA;;AAGA,YAAA,OAAA,GAAA,MAAA,CAAA,MAAA,CAAA,OAAA,EAAA,KAAA,QAAA,EAAA,IAAA,CAAA;;AACA,aAAA,iBAAA,CACA,IAAA,eAAA,CACA,MAAA,CAAA,IAAA,CAAA,OAAA,CAAA,QAAA,CADA,EAEA,KAFA,EAGA,YAHA,CADA;AAOA;AACA,KAtDA;AAuDA,IAAA,iBAvDA,6BAuDA,MAvDA,EAuDA;AAAA;;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,eAAA,EAAA,CAAA,MAAA,CAAA,EAAA,IAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,KAAA;AACA,QAAA,MAAA,CAAA,QAAA,GAAA,EAAA;;AACA,QAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,UAAA,IAAA,EAAA;AADA,SAAA;AAGA,OANA;AAOA,KA/DA;AAgEA,IAAA,kBAhEA,gCAgEA;AACA,WAAA,IAAA,GAAA,CAAA,KAAA,IAAA;AACA,KAlEA;AAmEA,IAAA,UAnEA,wBAmEA;AACA,WAAA,QAAA,GAAA,EAAA;AACA,WAAA,KAAA,CAAA,aAAA,CAAA,KAAA;AACA;AAtEA;AAjCA,CAAA","sourcesContent":["<template>\n  <b-modal\n    ref=\"password\"\n    :title=\"$t('accessWallet.password')\"\n    hide-footer\n    class=\"bootstrap-modal modal-software nopadding\"\n    centered\n    static\n    lazy\n    @shown=\"focusInput\"\n  >\n    <div>\n      <div class=\"warning\">\n        <warning-message />\n      </div>\n      <form class=\"password-form\">\n        <div class=\"input-container\">\n          <input\n            ref=\"passwordInput\"\n            :type=\"show ? 'text' : 'password'\"\n            v-model=\"password\"\n            name=\"Password\"\n            autocomplete=\"off\"\n            placeholder=\"Enter password\"\n          />\n          <img\n            v-if=\"show\"\n            alt\n            src=\"@/assets/images/icons/show-password.svg\"\n            @click.prevent=\"switchViewPassword\"\n          />\n          <img\n            v-if=\"!show\"\n            alt\n            src=\"@/assets/images/icons/hide-password.svg\"\n            @click.prevent=\"switchViewPassword\"\n          />\n        </div>\n        <button\n          :disabled=\"inputValid\"\n          class=\"submit-button large-round-button-green-filled\"\n          type=\"submit\"\n          @click.prevent=\"unlockWallet\"\n        >\n          <span v-show=\"!spinner\">{{ $t('common.accessWallet') }}</span>\n          <i v-show=\"spinner\" class=\"fa fa-spin fa-spinner fa-lg\" />\n        </button>\n      </form>\n    </div>\n  </b-modal>\n</template>\n\n<script>\nimport { WalletInterface } from '@/wallets';\nimport { KEYSTORE as keyStoreType } from '@/wallets/bip44/walletTypes';\nimport walletWorker from 'worker-loader!@/workers/wallet.worker.js';\nimport { mapState } from 'vuex';\nimport { Toast, Wallet } from '@/helpers';\nimport WarningMessage from '@/components/WarningMessage';\n\nexport default {\n  components: {\n    'warning-message': WarningMessage\n  },\n  props: {\n    file: {\n      type: Object,\n      default: function() {\n        return {};\n      }\n    }\n  },\n  data() {\n    return {\n      show: false,\n      password: '',\n      spinner: false\n    };\n  },\n  computed: {\n    ...mapState(['path', 'online']),\n    inputValid() {\n      return (\n        this.walletRequirePass(this.file) &&\n        (this.password === '' || this.password.length === 0)\n      );\n    }\n  },\n  watch: {\n    password() {\n      this.error = '';\n    }\n  },\n  methods: {\n    walletRequirePass(ethjson) {\n      if (ethjson.encseed != null) return true;\n      else if (ethjson.Crypto != null || ethjson.crypto != null) return true;\n      else if (ethjson.hash != null && ethjson.locked) return true;\n      else if (ethjson.hash != null && !ethjson.locked) return false;\n      else if (ethjson.publisher == 'MyEtherWallet' && !ethjson.encrypted)\n        return false;\n      return true;\n    },\n    unlockWallet() {\n      this.spinner = true;\n\n      if (this.online && window.Worker && window.origin !== 'null') {\n        const worker = new walletWorker();\n        const self = this;\n        worker.postMessage({\n          type: 'unlockWallet',\n          data: [this.file, this.password]\n        });\n        worker.onmessage = function(e) {\n          const obj = {\n            file: this.file,\n            name: e.data.filename\n          };\n          self.setUnlockedWallet(\n            new WalletInterface(\n              Buffer.from(e.data._privKey),\n              false,\n              keyStoreType,\n              '',\n              JSON.stringify(obj)\n            )\n          );\n        };\n        worker.onerror = function(e) {\n          e.preventDefault();\n          self.spinner = false;\n          Toast.responseHandler(e, Toast.ERROR);\n        };\n      } else {\n        const newFile = {};\n        Object.keys(this.file).forEach(key => {\n          newFile[key.toLowerCase()] = this.file[key];\n        });\n        const _wallet = Wallet.fromV3(newFile, this.password, true);\n        this.setUnlockedWallet(\n          new WalletInterface(\n            Buffer.from(_wallet._privKey),\n            false,\n            keyStoreType\n          )\n        );\n      }\n    },\n    setUnlockedWallet(wallet) {\n      this.$store.dispatch('decryptWallet', [wallet]).then(() => {\n        this.spinner = false;\n        this.password = '';\n        this.$router.push({\n          path: 'interface'\n        });\n      });\n    },\n    switchViewPassword() {\n      this.show = !this.show;\n    },\n    focusInput() {\n      this.password = '';\n      this.$refs.passwordInput.focus();\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n@import 'PasswordModal.scss';\n</style>\n"],"sourceRoot":"src/layouts/AccessWalletLayout/components/PasswordModal"}]}