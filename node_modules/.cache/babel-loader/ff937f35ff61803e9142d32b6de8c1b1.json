{"remainingRequest":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/containers/HeaderContainer/components/MobileMenu/components/MobileNetworkBlock/MobileNetworkBlock.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/containers/HeaderContainer/components/MobileMenu/components/MobileNetworkBlock/MobileNetworkBlock.vue","mtime":1573477611640},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport InterfaceNetworkModal from '@/layouts/InterfaceLayout/components/InterfaceNetworkModal';\nimport { mapState } from 'vuex';\nimport { WEB3_WALLET } from '@/wallets/bip44/walletTypes';\nexport default {\n  components: {\n    'interface-network-modal': InterfaceNetworkModal\n  },\n  props: {\n    blockNumber: {\n      type: Number,\n      default: 0\n    }\n  },\n  data: function data() {\n    return {\n      parsedNetwork: 0,\n      identifier: WEB3_WALLET\n    };\n  },\n  computed: _objectSpread({}, mapState(['network', 'account', 'web3'])),\n  watch: {\n    blockNumber: function blockNumber(newVal) {\n      this.parsedNetwork = parseInt(newVal);\n    }\n  },\n  mounted: function mounted() {\n    if (this.blockNumber && this.blockNumber !== undefined) {\n      this.parsedNetwork = parseInt(this.blockNumber);\n    }\n  },\n  methods: {\n    networkModalOpen: function networkModalOpen() {\n      if (this.account.identifier !== this.identifier) {\n        this.$refs.interfaceNetworkModal.$refs.network.show();\n      }\n    }\n  }\n};",{"version":3,"sources":["MobileNetworkBlock.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,OAAA,qBAAA,MAAA,4DAAA;AACA,SAAA,QAAA,QAAA,MAAA;AACA,SAAA,WAAA,QAAA,6BAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,+BAAA;AADA,GADA;AAIA,EAAA,KAAA,EAAA;AACA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AADA,GAJA;AAUA,EAAA,IAVA,kBAUA;AACA,WAAA;AACA,MAAA,aAAA,EAAA,CADA;AAEA,MAAA,UAAA,EAAA;AAFA,KAAA;AAIA,GAfA;AAgBA,EAAA,QAAA,oBACA,QAAA,CAAA,CAAA,SAAA,EAAA,SAAA,EAAA,MAAA,CAAA,CADA,CAhBA;AAmBA,EAAA,KAAA,EAAA;AACA,IAAA,WADA,uBACA,MADA,EACA;AACA,WAAA,aAAA,GAAA,QAAA,CAAA,MAAA,CAAA;AACA;AAHA,GAnBA;AAwBA,EAAA,OAxBA,qBAwBA;AACA,QAAA,KAAA,WAAA,IAAA,KAAA,WAAA,KAAA,SAAA,EAAA;AACA,WAAA,aAAA,GAAA,QAAA,CAAA,KAAA,WAAA,CAAA;AACA;AACA,GA5BA;AA6BA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,8BACA;AACA,UAAA,KAAA,OAAA,CAAA,UAAA,KAAA,KAAA,UAAA,EAAA;AACA,aAAA,KAAA,CAAA,qBAAA,CAAA,KAAA,CAAA,OAAA,CAAA,IAAA;AACA;AACA;AALA;AA7BA,CAAA","sourcesContent":["<template>\n  <div class=\"mobile-network-block\">\n    <interface-network-modal ref=\"interfaceNetworkModal\" />\n    <div class=\"wrap\">\n      <div class=\"top-block\">\n        <div class=\"block-title\">\n          {{ $t('common.network') }}\n        </div>\n        <button class=\"change-button\" @click=\"networkModalOpen\">\n          {{ $t('common.change') }}\n        </button>\n      </div>\n      <div class=\"bottom-block\">\n        <p v-if=\"account.identifier !== identifier\" class=\"network\">\n          {{ network.service + '(' + network.type.name + ')' }}\n        </p>\n        <!--<p v-show=\"parsedNetwork !== ''\" class=\"network\">M{{ parsedNetwork }}</p>-->\n\n        <p class=\"last-block\">\n          {{ $t('interface.lastBlock') }}# : {{ blockNumber }}\n        </p>\n        <i v-show=\"parsedNetwork === ''\" class=\"fa fa-spinner fa-spin\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport InterfaceNetworkModal from '@/layouts/InterfaceLayout/components/InterfaceNetworkModal';\nimport { mapState } from 'vuex';\nimport { WEB3_WALLET } from '@/wallets/bip44/walletTypes';\n\nexport default {\n  components: {\n    'interface-network-modal': InterfaceNetworkModal\n  },\n  props: {\n    blockNumber: {\n      type: Number,\n      default: 0\n    }\n  },\n  data() {\n    return {\n      parsedNetwork: 0,\n      identifier: WEB3_WALLET\n    };\n  },\n  computed: {\n    ...mapState(['network', 'account', 'web3'])\n  },\n  watch: {\n    blockNumber(newVal) {\n      this.parsedNetwork = parseInt(newVal);\n    }\n  },\n  mounted() {\n    if (this.blockNumber && this.blockNumber !== undefined) {\n      this.parsedNetwork = parseInt(this.blockNumber);\n    }\n  },\n  methods: {\n    networkModalOpen() {\n      if (this.account.identifier !== this.identifier) {\n        this.$refs.interfaceNetworkModal.$refs.network.show();\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'MobileNetworkBlock.scss';\n</style>\n"],"sourceRoot":"src/containers/HeaderContainer/components/MobileMenu/components/MobileNetworkBlock"}]}