{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/eslint-loader/index.js??ref--13-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/store/actions.js","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/store/actions.js","mtime":1573477612096},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.find-index\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport url from 'url';\nimport web3 from 'web3';\nimport Vue from 'vue';\nimport MEWProvider from '@/wallets/web3-provider';\nimport { MEW_CONNECT } from '@/wallets/bip44/walletTypes';\nimport * as unit from 'ethjs-unit';\nimport { formatters } from 'web3-core-helpers';\nimport { txIndexes, swapIndexes, addUpdateNotification, addUpdateSwapNotification } from '@/helpers/notificationFormatters';\nimport BigNumber from 'bignumber.js';\n\nvar addNotification = function addNotification(_ref, val) {\n  var commit = _ref.commit,\n      state = _ref.state;\n  var address;\n\n  if (val[1] != undefined) {\n    address = val[txIndexes.address].toLowerCase();\n  } else {\n    throw Error('Unable to determine sending address for notification.');\n  }\n\n  var newNotif = {};\n  Object.keys(state.notifications).forEach(function (item) {\n    newNotif[item] = state.notifications[item];\n  });\n  if (!Array.isArray(newNotif[address])) newNotif[address] = [];\n  newNotif[address] = addUpdateNotification(newNotif[address], val, state.network.type.name);\n  commit('ADD_NOTIFICATION', newNotif);\n};\n\nvar addSwapNotification =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(_ref2, val) {\n    var commit, state, address, newNotif;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            commit = _ref2.commit, state = _ref2.state;\n            address = val[swapIndexes.address].toLowerCase();\n            newNotif = {};\n            Object.keys(state.notifications).forEach(function (item) {\n              newNotif[item] = state.notifications[item];\n            });\n            if (!Array.isArray(newNotif[address])) newNotif[address] = [];\n            _context.next = 7;\n            return addUpdateSwapNotification(newNotif[address], val, state.network.type.name);\n\n          case 7:\n            newNotif[address] = _context.sent;\n            commit('ADD_NOTIFICATION', newNotif);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function addSwapNotification(_x, _x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar addCustomPath = function addCustomPath(_ref4, val) {\n  var commit = _ref4.commit,\n      state = _ref4.state;\n\n  var newPaths = _objectSpread({}, state.customPaths);\n\n  newPaths[val.label] = {\n    label: val.label,\n    path: val.path\n  };\n  commit('ADD_CUSTOM_PATH', newPaths);\n};\n\nvar removeCustomPath = function removeCustomPath(_ref5, val) {\n  var commit = _ref5.commit,\n      state = _ref5.state;\n\n  var newPaths = _objectSpread({}, state.customPaths);\n\n  delete newPaths[val.label];\n  commit('ADD_CUSTOM_PATH', newPaths);\n};\n\nvar checkIfOnline = function checkIfOnline(_ref6, val) {\n  var commit = _ref6.commit,\n      dispatch = _ref6.dispatch;\n  if (val) dispatch('setWeb3Instance');\n  commit('CHECK_IF_ONLINE', val);\n};\n\nvar gettingStartedDone = function gettingStartedDone(_ref7) {\n  var commit = _ref7.commit;\n  commit('GETTING_STARTED_DONE');\n};\n\nvar clearWallet = function clearWallet(_ref8) {\n  var commit = _ref8.commit,\n      state = _ref8.state;\n  var linkTo = state.path !== '' ? state.path : '/';\n\n  if (state.wallet && state.wallet.identifier === MEW_CONNECT) {\n    state.wallet.mewConnect().disconnectRTC();\n  }\n\n  Vue.router.push(linkTo);\n  commit('CLEAR_WALLET');\n};\n\nvar createAndSignTx = function createAndSignTx(_ref9, val) {\n  var commit = _ref9.commit;\n  commit('CREATE_AND_SIGN_TX', val);\n};\n\nvar decryptWallet = function decryptWallet(_ref10, params) {\n  var _this = this;\n\n  var commit = _ref10.commit,\n      dispatch = _ref10.dispatch;\n\n  // if the wallet param (param[0]) is undefined or null then all the subsequent setup steps will also fail.\n  // just explicitly stop it here.\n  if (params[0] !== undefined && params[0] !== null) {\n    if (params[0].identifier === MEW_CONNECT) {\n      params[0].mewConnect().on('RtcClosedEvent', function () {\n        if (params[0].mewConnect().getConnectonState()) {\n          _this._vm.$eventHub.$emit('mewConnectDisconnected');\n\n          dispatch('clearWallet');\n        }\n      });\n    }\n\n    commit('DECRYPT_WALLET', params[0]);\n    dispatch('setWeb3Instance', params[1]);\n  } else {\n    // Could replace this (sentry gets triggered) with a toast, to handle more gracefully\n    // Or some means of informing the user of an issue\n    return Promise.reject(Error('Received null or undefined wallet parameter. Please refresh the page and try again'));\n  }\n};\n\nvar setAccountBalance = function setAccountBalance(_ref11, balance) {\n  var commit = _ref11.commit;\n  commit('SET_ACCOUNT_BALANCE', balance);\n};\n\nvar setGasPrice = function setGasPrice(_ref12, gasPrice) {\n  var commit = _ref12.commit;\n  commit('SET_GAS_PRICE', gasPrice);\n};\n\nvar setState = function setState(_ref13, stateObj) {\n  var commit = _ref13.commit;\n  commit('INIT_STATES', stateObj);\n};\n\nvar setWeb3Instance = function setWeb3Instance(_ref14, provider) {\n  var _this2 = this;\n\n  var dispatch = _ref14.dispatch,\n      commit = _ref14.commit,\n      state = _ref14.state;\n  var hostUrl = state.network.url ? url.parse(state.network.url) : state.Network['ETH'][0];\n  var options = {}; // eslint-disable-next-line\n\n  var parsedUrl = \"\".concat(hostUrl.protocol, \"//\").concat(hostUrl.host).concat(state.network.port ? ':' + state.network.port : '').concat(hostUrl.pathname);\n  state.network.username !== '' && state.network.password !== '' ? options['headers'] = {\n    authorization: \"Basic: \".concat(btoa(state.network.username + ':' + state.network.password))\n  } : {};\n  var web3Instance = new web3(new MEWProvider(provider ? provider : parsedUrl, options, {\n    state: state,\n    dispatch: dispatch\n  }, this._vm.$eventHub));\n  web3Instance.currentProvider.sendAsync = web3Instance.currentProvider.send;\n\n  if (BUILD_TYPE !== 'mewcx') {\n    web3Instance['mew'] = {};\n\n    web3Instance['mew'].sendBatchTransactions = function (arr) {\n      return new Promise(\n      /*#__PURE__*/\n      function () {\n        var _ref15 = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee2(resolve) {\n          var i, localTx, gas, nonce, batchSignCallback;\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  i = 0;\n\n                case 1:\n                  if (!(i < arr.length)) {\n                    _context2.next = 17;\n                    break;\n                  }\n\n                  localTx = {\n                    to: arr[i].to,\n                    data: arr[i].data,\n                    from: arr[i].from,\n                    value: arr[i].value,\n                    gasPrice: arr[i].gasPrice\n                  };\n                  _context2.next = 5;\n                  return arr[i].gas === undefined ? web3Instance.eth.estimateGas(localTx) : arr[i].gas;\n\n                case 5:\n                  gas = _context2.sent;\n                  _context2.next = 8;\n                  return arr[i].nonce === undefined ? web3Instance.eth.getTransactionCount(state.account.address) : arr[i].nonce;\n\n                case 8:\n                  nonce = _context2.sent;\n                  arr[i].nonce = new BigNumber(nonce + i).toFixed();\n                  arr[i].gas = gas;\n                  arr[i].chainId = !arr[i].chainId ? state.network.type.chainID : arr[i].chainId;\n                  arr[i].gasPrice = arr[i].gasPrice === undefined ? unit.toWei(state.gasPrice, 'gwei') : arr[i].gasPrice;\n                  arr[i] = formatters.inputCallFormatter(arr[i]);\n\n                case 14:\n                  i++;\n                  _context2.next = 1;\n                  break;\n\n                case 17:\n                  batchSignCallback = function batchSignCallback(promises) {\n                    resolve(promises);\n                  };\n\n                  _this2._vm.$eventHub.$emit('showTxCollectionConfirmModal', arr, batchSignCallback, state.wallet.isHardware);\n\n                case 19:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x3) {\n          return _ref15.apply(this, arguments);\n        };\n      }());\n    };\n  }\n\n  commit('SET_WEB3_INSTANCE', web3Instance);\n};\n\nvar switchNetwork = function switchNetwork(_ref16, networkObj) {\n  var commit = _ref16.commit;\n  commit('SWITCH_NETWORK', networkObj);\n};\n\nvar setENS = function setENS(_ref17, ens) {\n  var commit = _ref17.commit;\n  commit('SET_ENS', ens);\n};\n\nvar updateNotification = function updateNotification(_ref18, val) {\n  var commit = _ref18.commit,\n      state = _ref18.state;\n  // address, index, object\n  var address = val[0].toLowerCase();\n  var newNotif = {};\n  Object.keys(state.notifications).forEach(function (item) {\n    newNotif[item] = state.notifications[item];\n  });\n  var idIndex = newNotif[address].findIndex(function (entry) {\n    return entry.id === val[2].id;\n  });\n\n  if (idIndex > -1) {\n    newNotif[address][idIndex] = val[2];\n  } else {\n    newNotif[address][val[1]] = val[2];\n  }\n\n  commit('UPDATE_NOTIFICATION', newNotif);\n};\n\nvar updateTransaction = function updateTransaction(_ref19, val) {\n  var commit = _ref19.commit,\n      state = _ref19.state;\n  // address, index, object\n  var address = val[0].toLowerCase();\n  var newNotif = {};\n  Object.keys(state.transactions).forEach(function (item) {\n    newNotif[item] = state.transactions[item];\n  });\n  var entryIndex = newNotif[address].findIndex(function (entry) {\n    return entry.orderId === val[1];\n  });\n  newNotif[address][entryIndex].status = val[2];\n  commit('UPDATE_SWAP_TRANSACTION', newNotif);\n};\n\nvar setLastPath = function setLastPath(_ref20, val) {\n  var commit = _ref20.commit;\n  commit('SET_LAST_PATH', val);\n};\n\nvar updateBlockNumber = function updateBlockNumber(_ref21, val) {\n  var commit = _ref21.commit;\n  commit('UPDATE_BLOCK_NUMBER', val);\n};\n\nvar saveQueryVal = function saveQueryVal(_ref22, val) {\n  var commit = _ref22.commit;\n  commit('SAVE_QUERY_VAL', val);\n};\n\nexport default {\n  addNotification: addNotification,\n  addSwapNotification: addSwapNotification,\n  addCustomPath: addCustomPath,\n  checkIfOnline: checkIfOnline,\n  clearWallet: clearWallet,\n  createAndSignTx: createAndSignTx,\n  decryptWallet: decryptWallet,\n  removeCustomPath: removeCustomPath,\n  setAccountBalance: setAccountBalance,\n  setGasPrice: setGasPrice,\n  setState: setState,\n  setENS: setENS,\n  setLastPath: setLastPath,\n  setWeb3Instance: setWeb3Instance,\n  switchNetwork: switchNetwork,\n  updateNotification: updateNotification,\n  updateTransaction: updateTransaction,\n  gettingStartedDone: gettingStartedDone,\n  updateBlockNumber: updateBlockNumber,\n  saveQueryVal: saveQueryVal\n};",{"version":3,"sources":["/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/store/actions.js"],"names":["url","web3","Vue","MEWProvider","MEW_CONNECT","unit","formatters","txIndexes","swapIndexes","addUpdateNotification","addUpdateSwapNotification","BigNumber","addNotification","val","commit","state","address","undefined","toLowerCase","Error","newNotif","Object","keys","notifications","forEach","item","Array","isArray","network","type","name","addSwapNotification","addCustomPath","newPaths","customPaths","label","path","removeCustomPath","checkIfOnline","dispatch","gettingStartedDone","clearWallet","linkTo","wallet","identifier","mewConnect","disconnectRTC","router","push","createAndSignTx","decryptWallet","params","on","getConnectonState","_vm","$eventHub","$emit","Promise","reject","setAccountBalance","balance","setGasPrice","gasPrice","setState","stateObj","setWeb3Instance","provider","hostUrl","parse","Network","options","parsedUrl","protocol","host","port","pathname","username","password","authorization","btoa","web3Instance","currentProvider","sendAsync","send","BUILD_TYPE","sendBatchTransactions","arr","resolve","i","length","localTx","to","data","from","value","gas","eth","estimateGas","nonce","getTransactionCount","account","toFixed","chainId","chainID","toWei","inputCallFormatter","batchSignCallback","promises","isHardware","switchNetwork","networkObj","setENS","ens","updateNotification","idIndex","findIndex","entry","id","updateTransaction","transactions","entryIndex","orderId","status","setLastPath","updateBlockNumber","saveQueryVal"],"mappings":"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","sourcesContent":["import url from 'url';\nimport web3 from 'web3';\nimport Vue from 'vue';\nimport MEWProvider from '@/wallets/web3-provider';\nimport { MEW_CONNECT } from '@/wallets/bip44/walletTypes';\nimport * as unit from 'ethjs-unit';\nimport { formatters } from 'web3-core-helpers';\nimport {\n  txIndexes,\n  swapIndexes,\n  addUpdateNotification,\n  addUpdateSwapNotification\n} from '@/helpers/notificationFormatters';\nimport BigNumber from 'bignumber.js';\n\nconst addNotification = function({ commit, state }, val) {\n  let address;\n\n  if (val[1] != undefined) {\n    address = val[txIndexes.address].toLowerCase();\n  } else {\n    throw Error('Unable to determine sending address for notification.');\n  }\n\n  const newNotif = {};\n  Object.keys(state.notifications).forEach(item => {\n    newNotif[item] = state.notifications[item];\n  });\n\n  if (!Array.isArray(newNotif[address])) newNotif[address] = [];\n\n  newNotif[address] = addUpdateNotification(\n    newNotif[address],\n    val,\n    state.network.type.name\n  );\n  commit('ADD_NOTIFICATION', newNotif);\n};\n\nconst addSwapNotification = async function({ commit, state }, val) {\n  const address = val[swapIndexes.address].toLowerCase();\n  const newNotif = {};\n  Object.keys(state.notifications).forEach(item => {\n    newNotif[item] = state.notifications[item];\n  });\n\n  if (!Array.isArray(newNotif[address])) newNotif[address] = [];\n\n  newNotif[address] = await addUpdateSwapNotification(\n    newNotif[address],\n    val,\n    state.network.type.name\n  );\n\n  commit('ADD_NOTIFICATION', newNotif);\n};\n\nconst addCustomPath = function({ commit, state }, val) {\n  const newPaths = { ...state.customPaths };\n  newPaths[val.label] = { label: val.label, path: val.path };\n  commit('ADD_CUSTOM_PATH', newPaths);\n};\n\nconst removeCustomPath = function({ commit, state }, val) {\n  const newPaths = { ...state.customPaths };\n  delete newPaths[val.label];\n  commit('ADD_CUSTOM_PATH', newPaths);\n};\n\nconst checkIfOnline = function({ commit, dispatch }, val) {\n  if (val) dispatch('setWeb3Instance');\n  commit('CHECK_IF_ONLINE', val);\n};\n\nconst gettingStartedDone = function({ commit }) {\n  commit('GETTING_STARTED_DONE');\n};\n\nconst clearWallet = function({ commit, state }) {\n  const linkTo = state.path !== '' ? state.path : '/';\n  if (state.wallet && state.wallet.identifier === MEW_CONNECT) {\n    state.wallet.mewConnect().disconnectRTC();\n  }\n  Vue.router.push(linkTo);\n  commit('CLEAR_WALLET');\n};\n\nconst createAndSignTx = function({ commit }, val) {\n  commit('CREATE_AND_SIGN_TX', val);\n};\n\nconst decryptWallet = function({ commit, dispatch }, params) {\n  // if the wallet param (param[0]) is undefined or null then all the subsequent setup steps will also fail.\n  // just explicitly stop it here.\n  if (params[0] !== undefined && params[0] !== null) {\n    if (params[0].identifier === MEW_CONNECT) {\n      params[0].mewConnect().on('RtcClosedEvent', () => {\n        if (params[0].mewConnect().getConnectonState()) {\n          this._vm.$eventHub.$emit('mewConnectDisconnected');\n          dispatch('clearWallet');\n        }\n      });\n    }\n\n    commit('DECRYPT_WALLET', params[0]);\n    dispatch('setWeb3Instance', params[1]);\n  } else {\n    // Could replace this (sentry gets triggered) with a toast, to handle more gracefully\n    // Or some means of informing the user of an issue\n    return Promise.reject(\n      Error(\n        'Received null or undefined wallet parameter. Please refresh the page and try again'\n      )\n    );\n  }\n};\n\nconst setAccountBalance = function({ commit }, balance) {\n  commit('SET_ACCOUNT_BALANCE', balance);\n};\n\nconst setGasPrice = function({ commit }, gasPrice) {\n  commit('SET_GAS_PRICE', gasPrice);\n};\n\nconst setState = function({ commit }, stateObj) {\n  commit('INIT_STATES', stateObj);\n};\n\nconst setWeb3Instance = function({ dispatch, commit, state }, provider) {\n  const hostUrl = state.network.url\n    ? url.parse(state.network.url)\n    : state.Network['ETH'][0];\n  const options = {};\n  // eslint-disable-next-line\n  const parsedUrl = `${hostUrl.protocol}//${hostUrl.host}${\n    state.network.port ? ':' + state.network.port : ''\n  }${hostUrl.pathname}`;\n  state.network.username !== '' && state.network.password !== ''\n    ? (options['headers'] = {\n        authorization: `Basic: ${btoa(\n          state.network.username + ':' + state.network.password\n        )}`\n      })\n    : {};\n  const web3Instance = new web3(\n    new MEWProvider(\n      provider ? provider : parsedUrl,\n      options,\n      {\n        state,\n        dispatch\n      },\n      this._vm.$eventHub\n    )\n  );\n  web3Instance.currentProvider.sendAsync = web3Instance.currentProvider.send;\n  if (BUILD_TYPE !== 'mewcx') {\n    web3Instance['mew'] = {};\n    web3Instance['mew'].sendBatchTransactions = arr => {\n      return new Promise(async resolve => {\n        for (let i = 0; i < arr.length; i++) {\n          const localTx = {\n            to: arr[i].to,\n            data: arr[i].data,\n            from: arr[i].from,\n            value: arr[i].value,\n            gasPrice: arr[i].gasPrice\n          };\n          const gas = await (arr[i].gas === undefined\n            ? web3Instance.eth.estimateGas(localTx)\n            : arr[i].gas);\n          const nonce = await (arr[i].nonce === undefined\n            ? web3Instance.eth.getTransactionCount(state.account.address)\n            : arr[i].nonce);\n          arr[i].nonce = new BigNumber(nonce + i).toFixed();\n          arr[i].gas = gas;\n          arr[i].chainId = !arr[i].chainId\n            ? state.network.type.chainID\n            : arr[i].chainId;\n          arr[i].gasPrice =\n            arr[i].gasPrice === undefined\n              ? unit.toWei(state.gasPrice, 'gwei')\n              : arr[i].gasPrice;\n          arr[i] = formatters.inputCallFormatter(arr[i]);\n        }\n\n        const batchSignCallback = promises => {\n          resolve(promises);\n        };\n        this._vm.$eventHub.$emit(\n          'showTxCollectionConfirmModal',\n          arr,\n          batchSignCallback,\n          state.wallet.isHardware\n        );\n      });\n    };\n  }\n  commit('SET_WEB3_INSTANCE', web3Instance);\n};\n\nconst switchNetwork = function({ commit }, networkObj) {\n  commit('SWITCH_NETWORK', networkObj);\n};\nconst setENS = function({ commit }, ens) {\n  commit('SET_ENS', ens);\n};\n\nconst updateNotification = function({ commit, state }, val) {\n  // address, index, object\n  const address = val[0].toLowerCase();\n  const newNotif = {};\n  Object.keys(state.notifications).forEach(item => {\n    newNotif[item] = state.notifications[item];\n  });\n\n  const idIndex = newNotif[address].findIndex(entry => entry.id === val[2].id);\n  if (idIndex > -1) {\n    newNotif[address][idIndex] = val[2];\n  } else {\n    newNotif[address][val[1]] = val[2];\n  }\n\n  commit('UPDATE_NOTIFICATION', newNotif);\n};\n\nconst updateTransaction = function({ commit, state }, val) {\n  // address, index, object\n  const address = val[0].toLowerCase();\n  const newNotif = {};\n  Object.keys(state.transactions).forEach(item => {\n    newNotif[item] = state.transactions[item];\n  });\n\n  const entryIndex = newNotif[address].findIndex(entry => {\n    return entry.orderId === val[1];\n  });\n\n  newNotif[address][entryIndex].status = val[2];\n  commit('UPDATE_SWAP_TRANSACTION', newNotif);\n};\n\nconst setLastPath = function({ commit }, val) {\n  commit('SET_LAST_PATH', val);\n};\n\nconst updateBlockNumber = function({ commit }, val) {\n  commit('UPDATE_BLOCK_NUMBER', val);\n};\n\nconst saveQueryVal = function({ commit }, val) {\n  commit('SAVE_QUERY_VAL', val);\n};\n\nexport default {\n  addNotification,\n  addSwapNotification,\n  addCustomPath,\n  checkIfOnline,\n  clearWallet,\n  createAndSignTx,\n  decryptWallet,\n  removeCustomPath,\n  setAccountBalance,\n  setGasPrice,\n  setState,\n  setENS,\n  setLastPath,\n  setWeb3Instance,\n  switchNetwork,\n  updateNotification,\n  updateTransaction,\n  gettingStartedDone,\n  updateBlockNumber,\n  saveQueryVal\n};\n"]}]}