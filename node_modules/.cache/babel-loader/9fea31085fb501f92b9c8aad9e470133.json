{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/eslint-loader/index.js??ref--13-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/helpers/parseTokensHex.js","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/helpers/parseTokensHex.js","mtime":1574664278286},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/thread-loader/dist/cjs.js","mtime":1574664277654},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js","mtime":1574664275010},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/eslint-loader/index.js","mtime":1574664275986}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport { BigNumber } from 'bignumber.js';\n\nfunction sizeHex(bytes) {\n  return bytes * 2;\n}\n\nfunction trim(str) {\n  return str.replace(/\\0[\\s\\S]*$/g, '');\n}\n\nfunction getAscii(hex) {\n  hex = hex.substring(0, 2) === '0x' ? hex : '0x' + hex;\n  return trim(hex);\n}\n\nfunction parseTokensHex(hex) {\n  var tokens = [];\n  hex = hex.substring(0, 2) == '0x' ? hex.substring(2) : hex;\n  hex = hex.substring(0, hex.lastIndexOf('1') - 1);\n  var offset = hex.length;\n  offset -= sizeHex(32);\n  var countTokens = hex.substr(offset, sizeHex(32));\n  offset -= sizeHex(1);\n  var isName = parseInt(hex.substr(offset, sizeHex(1)));\n  offset -= sizeHex(1);\n  var isWebSite = parseInt(hex.substr(offset, sizeHex(1)));\n  offset -= sizeHex(1);\n  var isEmail = parseInt(hex.substr(offset, sizeHex(1)));\n  var numTokens = new BigNumber('0x' + countTokens).toNumber();\n\n  for (var i = 0; i < parseInt(numTokens); i++) {\n    var token = {};\n    offset -= sizeHex(16);\n    token.symbol = getAscii(hex.substr(offset, sizeHex(16)));\n    offset -= sizeHex(20);\n    token.addr = '0x' + hex.substr(offset, sizeHex(20));\n    offset -= sizeHex(1);\n    token.decimals = new BigNumber('0x' + hex.substr(offset, sizeHex(1))).toNumber();\n    offset -= sizeHex(32);\n    token.balance = new BigNumber('0x' + hex.substr(offset, sizeHex(32))).toFixed();\n\n    if (isName) {\n      offset -= sizeHex(16);\n      token.name = getAscii(hex.substr(offset, sizeHex(16)));\n    }\n\n    if (isWebSite) {\n      offset -= sizeHex(32);\n      token.website = getAscii(hex.substr(offset, sizeHex(32)));\n    }\n\n    if (isEmail) {\n      offset -= sizeHex(32);\n      token.email = getAscii(hex.substr(offset, sizeHex(32)));\n    }\n\n    tokens.push(token);\n  }\n\n  return tokens;\n}\n\nexport default parseTokensHex;",{"version":3,"sources":["/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/helpers/parseTokensHex.js"],"names":["BigNumber","sizeHex","bytes","trim","str","replace","getAscii","hex","substring","parseTokensHex","tokens","lastIndexOf","offset","length","countTokens","substr","isName","parseInt","isWebSite","isEmail","numTokens","toNumber","i","token","symbol","addr","decimals","balance","toFixed","name","website","email","push"],"mappings":"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","sourcesContent":["import { BigNumber } from 'bignumber.js';\n\nfunction sizeHex(bytes) {\n  return bytes * 2;\n}\n\nfunction trim(str) {\n  return str.replace(/\\0[\\s\\S]*$/g, '');\n}\n\nfunction getAscii(hex) {\n  hex = hex.substring(0, 2) === '0x' ? hex : '0x' + hex;\n  return trim(hex);\n}\n\nfunction parseTokensHex(hex) {\n  const tokens = [];\n  hex = hex.substring(0, 2) == '0x' ? hex.substring(2) : hex;\n  hex = hex.substring(0, hex.lastIndexOf('1') - 1);\n  let offset = hex.length;\n  offset -= sizeHex(32);\n  const countTokens = hex.substr(offset, sizeHex(32));\n  offset -= sizeHex(1);\n  const isName = parseInt(hex.substr(offset, sizeHex(1)));\n  offset -= sizeHex(1);\n  const isWebSite = parseInt(hex.substr(offset, sizeHex(1)));\n  offset -= sizeHex(1);\n  const isEmail = parseInt(hex.substr(offset, sizeHex(1)));\n  const numTokens = new BigNumber('0x' + countTokens).toNumber();\n\n  for (let i = 0; i < parseInt(numTokens); i++) {\n    const token = {};\n    offset -= sizeHex(16);\n    token.symbol = getAscii(hex.substr(offset, sizeHex(16)));\n    offset -= sizeHex(20);\n    token.addr = '0x' + hex.substr(offset, sizeHex(20));\n    offset -= sizeHex(1);\n    token.decimals = new BigNumber(\n      '0x' + hex.substr(offset, sizeHex(1))\n    ).toNumber();\n    offset -= sizeHex(32);\n    token.balance = new BigNumber(\n      '0x' + hex.substr(offset, sizeHex(32))\n    ).toFixed();\n    if (isName) {\n      offset -= sizeHex(16);\n      token.name = getAscii(hex.substr(offset, sizeHex(16)));\n    }\n    if (isWebSite) {\n      offset -= sizeHex(32);\n      token.website = getAscii(hex.substr(offset, sizeHex(32)));\n    }\n    if (isEmail) {\n      offset -= sizeHex(32);\n      token.email = getAscii(hex.substr(offset, sizeHex(32)));\n    }\n    tokens.push(token);\n  }\n  return tokens;\n}\n\nexport default parseTokensHex;\n"]}]}