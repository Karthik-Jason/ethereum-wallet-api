{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/layouts/InterfaceLayout/containers/SwapContainer/components/SwapCurrencyPicker/SwapCurrencyPicker.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/layouts/InterfaceLayout/containers/SwapContainer/components/SwapCurrencyPicker/SwapCurrencyPicker.vue","mtime":1574664278306},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js","mtime":1574664275010},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js","mtime":1574664277774}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport '@/assets/images/currency/coins/asFont/cryptocoins.css';\nimport '@/assets/images/currency/coins/asFont/cryptocoins-colors.css';\nimport { hasIcon } from '@/partners';\nexport default {\n  props: {\n    currencies: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    page: {\n      type: String,\n      default: ''\n    },\n    token: {\n      type: Boolean,\n      default: true\n    },\n    fromSource: {\n      type: Boolean,\n      default: false\n    },\n    selectable: {\n      type: Boolean,\n      default: true\n    },\n    defaultValue: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    overrideCurrency: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    return {\n      icon: '',\n      localCurrencies: [],\n      selectedCurrency: {\n        name: 'Select an item',\n        abi: '',\n        address: ''\n      },\n      open: false,\n      search: '',\n      abi: '',\n      address: ''\n    };\n  },\n  watch: {\n    overrideCurrency: function overrideCurrency(newVal) {\n      this.selectedCurrency = newVal;\n    },\n    selectedCurrency: function selectedCurrency(newVal) {\n      this.$emit('selectedCurrency', newVal, this.fromSource ? 'to' : 'from');\n    },\n    currencies: function currencies(newVal) {\n      var _this = this;\n\n      this.localCurrencies = [];\n      newVal.forEach(function (curr) {\n        return _this.localCurrencies.push(curr);\n      });\n    },\n    search: function search(newVal) {\n      var _this2 = this;\n\n      if (newVal !== '') {\n        this.localCurrencies = this.currencies.filter(function (curr) {\n          if (curr.name && curr.symbol) {\n            if (curr.name.toLowerCase().includes(newVal.toLowerCase()) || curr.symbol.toLowerCase().includes(newVal.toLowerCase())) {\n              return curr;\n            }\n          }\n        });\n      } else {\n        this.localCurrencies = [];\n        this.currencies.forEach(function (curr) {\n          return _this2.localCurrencies.push(curr);\n        });\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this3 = this;\n\n    if (this.currencies) {\n      this.currencies.forEach(function (curr) {\n        return _this3.localCurrencies.push(curr);\n      });\n    }\n\n    if (this.defaultValue.symbol && this.defaultValue.name) {\n      this.selectedCurrency = this.defaultValue;\n    } else if (typeof this.fromSource === 'boolean') {\n      if (this.fromSource) {\n        this.selectedCurrency = {\n          name: 'Ether',\n          symbol: 'ETH'\n        };\n      } else {\n        this.selectedCurrency = {\n          name: 'Bitcoin',\n          symbol: 'BTC'\n        };\n      }\n    }\n  },\n  methods: {\n    iconFetcher: function iconFetcher(currency) {\n      var icon;\n\n      try {\n        // eslint-disable-next-line\n        icon = require(\"@/assets/images/currency/coins/AllImages/\".concat(currency, \".svg\"));\n      } catch (e) {\n        // eslint-disable-next-line\n        return require(\"@/assets/images/icons/web-solution.svg\");\n      }\n\n      return icon;\n    },\n    getIcon: function getIcon(currency) {\n      return hasIcon(currency);\n    },\n    openDropdown: function openDropdown() {\n      if (this.selectable) {\n        this.open = !this.open;\n      }\n    },\n    selectCurrency: function selectCurrency(currency) {\n      this.openDropdown();\n      this.selectedCurrency = currency;\n    }\n  }\n};",{"version":3,"sources":["SwapCurrencyPicker.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"html\">\n  <div v-click-outside=\"openDropdown\" class=\"currency-picker-container\">\n    <div>\n      <div\n        :class=\"[\n          open ? 'open' : '',\n          'dropdown-container',\n          token ? 'dropdown-text-container' : 'dropdown-text-container-white'\n        ]\"\n        @click=\"openDropdown\"\n      >\n        <p>\n          <span\n            v-if=\"getIcon(selectedCurrency.symbol) !== ''\"\n            :class=\"['cc', getIcon(selectedCurrency.symbol), 'cc-icon']\"\n            class=\"currency-symbol\"\n          />\n          <span\n            v-if=\"getIcon(selectedCurrency.symbol) === ''\"\n            class=\"currency-symbol\"\n          >\n            <img\n              :src=\"iconFetcher(selectedCurrency.symbol)\"\n              class=\"icon-image\"\n              alt\n            />\n          </span>\n\n          {{ selectedCurrency.symbol }}\n          <span class=\"subname\">- {{ selectedCurrency.name }}</span>\n        </p>\n        <p v-show=\"!token\">{{ selectedCurrency.name }}</p>\n        <i\n          v-if=\"selectable\"\n          :class=\"['fa', open ? 'fa-angle-up' : 'fa-angle-down']\"\n        />\n      </div>\n      <div\n        v-if=\"selectable\"\n        :class=\"[open ? 'open' : 'hide', 'dropdown-item-container']\"\n      >\n        <div class=\"dropdown-search-container\">\n          <input v-model=\"search\" :placeholder=\"$t('interface.search')\" />\n          <i class=\"fa fa-search\" />\n        </div>\n        <div class=\"item-container\">\n          <div\n            v-for=\"(curr, idx) in localCurrencies\"\n            :class=\"[\n              token\n                ? selectedCurrency.symbol === curr.symbol\n                  ? 'selected'\n                  : ''\n                : selectedCurrency.name === curr.name\n                ? 'selected'\n                : '',\n              'item'\n            ]\"\n            :key=\"\n              token ? curr.name + curr.symbol + page : curr.name + page + idx\n            \"\n            @click=\"selectCurrency(curr)\"\n          >\n            <p>\n              <span\n                v-if=\"getIcon(curr.symbol) !== ''\"\n                :class=\"['cc', getIcon(curr.symbol), 'cc-icon']\"\n                class=\"currency-symbol\"\n              />\n              <span v-if=\"getIcon(curr.symbol) === ''\" class=\"currency-symbol\">\n                <img :src=\"iconFetcher(curr.symbol)\" class=\"icon-image\" alt />\n              </span>\n              {{ curr.symbol }}\n              <span class=\"subname\">- {{ curr.name }}</span>\n            </p>\n            <p />\n            <p v-show=\"!token\">{{ curr.name }}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport '@/assets/images/currency/coins/asFont/cryptocoins.css';\nimport '@/assets/images/currency/coins/asFont/cryptocoins-colors.css';\nimport { hasIcon } from '@/partners';\nexport default {\n  props: {\n    currencies: {\n      type: Array,\n      default: function() {\n        return [];\n      }\n    },\n    page: {\n      type: String,\n      default: ''\n    },\n    token: {\n      type: Boolean,\n      default: true\n    },\n    fromSource: {\n      type: Boolean,\n      default: false\n    },\n    selectable: {\n      type: Boolean,\n      default: true\n    },\n    defaultValue: {\n      type: Object,\n      default: function() {\n        return {};\n      }\n    },\n    overrideCurrency: {\n      type: Object,\n      default: function() {\n        return {};\n      }\n    }\n  },\n  data() {\n    return {\n      icon: '',\n      localCurrencies: [],\n      selectedCurrency: { name: 'Select an item', abi: '', address: '' },\n      open: false,\n      search: '',\n      abi: '',\n      address: ''\n    };\n  },\n  watch: {\n    overrideCurrency(newVal) {\n      this.selectedCurrency = newVal;\n    },\n    selectedCurrency(newVal) {\n      this.$emit('selectedCurrency', newVal, this.fromSource ? 'to' : 'from');\n    },\n    currencies(newVal) {\n      this.localCurrencies = [];\n      newVal.forEach(curr => this.localCurrencies.push(curr));\n    },\n    search(newVal) {\n      if (newVal !== '') {\n        this.localCurrencies = this.currencies.filter(curr => {\n          if (curr.name && curr.symbol) {\n            if (\n              curr.name.toLowerCase().includes(newVal.toLowerCase()) ||\n              curr.symbol.toLowerCase().includes(newVal.toLowerCase())\n            ) {\n              return curr;\n            }\n          }\n        });\n      } else {\n        this.localCurrencies = [];\n        this.currencies.forEach(curr => this.localCurrencies.push(curr));\n      }\n    }\n  },\n  mounted() {\n    if (this.currencies) {\n      this.currencies.forEach(curr => this.localCurrencies.push(curr));\n    }\n    if (this.defaultValue.symbol && this.defaultValue.name) {\n      this.selectedCurrency = this.defaultValue;\n    } else if (typeof this.fromSource === 'boolean') {\n      if (this.fromSource) {\n        this.selectedCurrency = { name: 'Ether', symbol: 'ETH' };\n      } else {\n        this.selectedCurrency = { name: 'Bitcoin', symbol: 'BTC' };\n      }\n    }\n  },\n  methods: {\n    iconFetcher(currency) {\n      let icon;\n      try {\n        // eslint-disable-next-line\n        icon = require(`@/assets/images/currency/coins/AllImages/${currency}.svg`);\n      } catch (e) {\n        // eslint-disable-next-line\n        return require(`@/assets/images/icons/web-solution.svg`);\n      }\n      return icon;\n    },\n    getIcon(currency) {\n      return hasIcon(currency);\n    },\n    openDropdown() {\n      if (this.selectable) {\n        this.open = !this.open;\n      }\n    },\n    selectCurrency(currency) {\n      this.openDropdown();\n      this.selectedCurrency = currency;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'SwapCurrencyPicker.scss';\n</style>\n"],"sourceRoot":"src/layouts/InterfaceLayout/containers/SwapContainer/components/SwapCurrencyPicker"}]}