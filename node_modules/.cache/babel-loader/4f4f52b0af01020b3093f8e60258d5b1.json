{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/layouts/InterfaceLayout/containers/NFTManagerContainer/components/NftCustomAddModal/NftCustomAddModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/layouts/InterfaceLayout/containers/NFTManagerContainer/components/NftCustomAddModal/NftCustomAddModal.vue","mtime":1574664278306},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/thread-loader/dist/cjs.js","mtime":1574664277654},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js","mtime":1574664275010},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js","mtime":1574664277774}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport InterfaceBottomText from '@/components/InterfaceBottomText';\nimport { mapState } from 'vuex';\nimport { isAddress } from '@/helpers/addressUtils';\nexport default {\n  components: {\n    'interface-bottom-text': InterfaceBottomText\n  },\n  props: {\n    addToken: {\n      type: Function,\n      default: function _default() {}\n    },\n    activeAddress: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      contractAddress: '',\n      tokenSymbol: '',\n      tokenDecimal: '',\n      validAddress: false,\n      nonStandardMessage: false\n    };\n  },\n  computed: _objectSpread({}, mapState(['web3']), {\n    allFieldsValid: function allFieldsValid() {\n      if (!this.validAddress) return false;\n      if (this.tokenSymbol === '') return false;\n      if (this.errors.has('address') || this.errors.has('symbol')) return false;\n      return true;\n    }\n  }),\n  watch: {\n    contractAddress: function contractAddress(newVal) {\n      var strippedWhitespace = newVal.toLowerCase().trim();\n      var regTest = new RegExp(/[a-zA-Z0-9]/g);\n      this.validAddress = regTest.test(strippedWhitespace) && isAddress(strippedWhitespace);\n      this.toAddress = strippedWhitespace;\n      this.contractAddress = strippedWhitespace;\n    },\n    tokenSymbol: function tokenSymbol(newVal) {\n      this.tokenSymbol = newVal;\n    }\n  },\n  methods: {\n    resetCompState: function resetCompState() {\n      this.contractAddress = '';\n      this.tokenSymbol = '';\n      this.tokenDecimal = '';\n      this.validAddress = false;\n      this.nonStandardMessage = false;\n    },\n    addCustom: function () {\n      var _addCustom = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(address, symbol) {\n        var result;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.checkIfStandard(address);\n\n              case 2:\n                result = _context.sent;\n                if (result) this.addToken(address, symbol);else {\n                  this.nonStandardMessage = true;\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function addCustom(_x, _x2) {\n        return _addCustom.apply(this, arguments);\n      }\n\n      return addCustom;\n    }(),\n    openCustomModal: function openCustomModal() {\n      this.$refs.customModal.$refs.modal.show();\n    },\n    checkIfStandard: function checkIfStandard(address) {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        // 0x780e9d63\n        var tokenContract = new _this.web3.eth.Contract([{\n          constant: true,\n          inputs: [{\n            name: '_owner',\n            type: 'address'\n          }, {\n            name: '_index',\n            type: 'uint256'\n          }],\n          name: 'tokenOfOwnerByIndex',\n          outputs: [{\n            name: '',\n            type: 'uint256'\n          }],\n          payable: false,\n          stateMutability: 'view',\n          type: 'function'\n        }, {\n          constant: true,\n          inputs: [{\n            name: '_interfaceId',\n            type: 'bytes4'\n          }],\n          name: 'supportsInterface',\n          outputs: [{\n            name: '',\n            type: 'bool'\n          }],\n          payable: false,\n          stateMutability: 'view',\n          type: 'function'\n        }]);\n        tokenContract.options.address = address;\n        tokenContract.methods.supportsInterface('0x780e9d63').call().then(function (res) {\n          if (res) resolve(true);else {\n            tokenContract.methods.tokenOfOwnerByIndex(_this.activeAddress, 0).call().then(function () {\n              resolve(true);\n            }).catch(function () {\n              resolve(false);\n            });\n          }\n        }).catch(function () {\n          resolve(false);\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["NftCustomAddModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"html\">\n  <div>\n    <b-modal\n      ref=\"modal\"\n      :title=\"$t('dapps.addCustomNFT')\"\n      hide-footer\n      class=\"bootstrap-modal nopadding max-height-1\"\n      centered\n      @hidden=\"resetCompState\"\n    >\n      <form class=\"tokens-modal-body\" @keydown.enter.prevent>\n        <div>\n          <input\n            v-validate=\"'required'\"\n            v-model=\"contractAddress\"\n            :class=\"[\n              'custom-input-text-1',\n              contractAddress !== '' && !validAddress ? 'invalid-address' : ''\n            ]\"\n            name=\"Address\"\n            type=\"text\"\n            placeholder=\"Token Contract Address\"\n          />\n          <span\n            v-show=\"contractAddress !== '' && !validAddress\"\n            class=\"error-message\"\n          >\n            Invalid address given.\n          </span>\n          <span v-show=\"nonStandardMessage\">\n            NFT token contract doesn't include a required method to add as a\n            custom NFT or you do not have\n          </span>\n          <input\n            v-validate=\"'required'\"\n            v-model=\"tokenSymbol\"\n            name=\"Symbol\"\n            type=\"text\"\n            placeholder=\"NFT name\"\n            class=\"custom-input-text-1\"\n          />\n        </div>\n        <div class=\"button-block\">\n          <button\n            :class=\"[\n              allFieldsValid ? '' : 'disabled',\n              'save-button large-round-button-green-filled clickable'\n            ]\"\n            @click.prevent=\"addCustom(contractAddress, tokenSymbol)\"\n          >\n            {{ $t('interface.save') }}\n          </button>\n          <interface-bottom-text\n            :link-text=\"$t('interface.helpCenter')\"\n            :question=\"$t('interface.dontKnow')\"\n            link=\"https://kb.myetherwallet.com\"\n          />\n        </div>\n      </form>\n    </b-modal>\n  </div>\n</template>\n\n<script>\nimport InterfaceBottomText from '@/components/InterfaceBottomText';\nimport { mapState } from 'vuex';\nimport { isAddress } from '@/helpers/addressUtils';\n\nexport default {\n  components: {\n    'interface-bottom-text': InterfaceBottomText\n  },\n  props: {\n    addToken: {\n      type: Function,\n      default: function() {}\n    },\n    activeAddress: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      contractAddress: '',\n      tokenSymbol: '',\n      tokenDecimal: '',\n      validAddress: false,\n      nonStandardMessage: false\n    };\n  },\n  computed: {\n    ...mapState(['web3']),\n    allFieldsValid() {\n      if (!this.validAddress) return false;\n      if (this.tokenSymbol === '') return false;\n      if (this.errors.has('address') || this.errors.has('symbol')) return false;\n      return true;\n    }\n  },\n  watch: {\n    contractAddress(newVal) {\n      const strippedWhitespace = newVal.toLowerCase().trim();\n      const regTest = new RegExp(/[a-zA-Z0-9]/g);\n      this.validAddress =\n        regTest.test(strippedWhitespace) && isAddress(strippedWhitespace);\n      this.toAddress = strippedWhitespace;\n      this.contractAddress = strippedWhitespace;\n    },\n    tokenSymbol(newVal) {\n      this.tokenSymbol = newVal;\n    }\n  },\n  methods: {\n    resetCompState() {\n      this.contractAddress = '';\n      this.tokenSymbol = '';\n      this.tokenDecimal = '';\n      this.validAddress = false;\n      this.nonStandardMessage = false;\n    },\n    async addCustom(address, symbol) {\n      const result = await this.checkIfStandard(address);\n      if (result) this.addToken(address, symbol);\n      else {\n        this.nonStandardMessage = true;\n      }\n    },\n    openCustomModal() {\n      this.$refs.customModal.$refs.modal.show();\n    },\n    checkIfStandard(address) {\n      return new Promise(resolve => {\n        // 0x780e9d63\n        const tokenContract = new this.web3.eth.Contract([\n          {\n            constant: true,\n            inputs: [\n              { name: '_owner', type: 'address' },\n              { name: '_index', type: 'uint256' }\n            ],\n            name: 'tokenOfOwnerByIndex',\n            outputs: [{ name: '', type: 'uint256' }],\n            payable: false,\n            stateMutability: 'view',\n            type: 'function'\n          },\n          {\n            constant: true,\n            inputs: [{ name: '_interfaceId', type: 'bytes4' }],\n            name: 'supportsInterface',\n            outputs: [{ name: '', type: 'bool' }],\n            payable: false,\n            stateMutability: 'view',\n            type: 'function'\n          }\n        ]);\n        tokenContract.options.address = address;\n        tokenContract.methods\n          .supportsInterface('0x780e9d63')\n          .call()\n          .then(res => {\n            if (res) resolve(true);\n            else {\n              tokenContract.methods\n                .tokenOfOwnerByIndex(this.activeAddress, 0)\n                .call()\n                .then(() => {\n                  resolve(true);\n                })\n                .catch(() => {\n                  resolve(false);\n                });\n            }\n          })\n          .catch(() => {\n            resolve(false);\n          });\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'NftCustomAddModal.scss';\n</style>\n"],"sourceRoot":"src/layouts/InterfaceLayout/containers/NFTManagerContainer/components/NftCustomAddModal"}]}