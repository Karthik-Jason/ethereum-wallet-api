{"remainingRequest":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/dapps/MakerDai/containers/ProxyMigrateCDP/ProxyMigrateCDP.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/dapps/MakerDai/containers/ProxyMigrateCDP/ProxyMigrateCDP.vue","mtime":1573477611656},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport InterfaceContainerTitle from '@/layouts/InterfaceLayout/components/InterfaceContainerTitle';\nimport InterfaceBottomText from '@/components/InterfaceBottomText';\nimport BottomHelpLink from '@/components/BottomHelpLink';\nimport Blockie from '@/components/Blockie';\nimport CloseCdpModal from \"../../components/CloseCdpModal\";\nimport MoveCdpModal from \"../../components/MoveCdpModal\";\nimport { displayFixedPercent, displayFixedValue, displayPercentValue } from \"../../helpers\";\nimport BigNumber from 'bignumber.js';\n\nvar toBigNumber = function toBigNumber(num) {\n  return new BigNumber(num);\n};\n\nexport default {\n  components: {\n    'interface-container-title': InterfaceContainerTitle,\n    'interface-bottom-text': InterfaceBottomText,\n    'close-cdp-modal': CloseCdpModal,\n    'move-cdp-modal': MoveCdpModal,\n    blockie: Blockie,\n    'help-link': BottomHelpLink\n  },\n  props: {\n    openCloseModal: {\n      type: Boolean,\n      default: false\n    },\n    openMoveModal: {\n      type: Boolean,\n      default: false\n    },\n    tokensWithBalance: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    getBalance: {\n      type: Function,\n      default: function _default() {}\n    },\n    makerActive: {\n      type: Boolean,\n      default: false\n    },\n    cdps: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    availableCdps: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    getCdp: {\n      type: Function,\n      default: function _default() {}\n    },\n    hasCdp: {\n      type: Function,\n      default: function _default() {}\n    },\n    values: {\n      type: Object,\n      default: function _default() {\n        return {\n          maxPethDraw: '',\n          maxEthDraw: '',\n          maxUsdDraw: '',\n          ethCollateral: '',\n          pethCollateral: '',\n          usdCollateral: '',\n          debtValue: '',\n          maxDai: '',\n          collateralRatio: '',\n          cdpId: '',\n          stabilityFee: '',\n          minEth: '',\n          liquidationRatio: '',\n          wethToPethRatio: '',\n          liquidationPenalty: '',\n          targetPrice: '',\n          pethPrice: ''\n        };\n      }\n    },\n    ethPrice: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    pethPrice: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    liquidationPenalty: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    stabilityFee: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    liquidationRatio: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    wethToPethRatio: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    pethMin: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    priceService: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    cdpService: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    proxyService: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    return {\n      loaded: false,\n      ethQty: 0,\n      daiQty: 0,\n      selectedCdp: '',\n      cdpId: '',\n      cdp: {},\n      maxDaiDraw: toBigNumber(0),\n      maxWithDraw: toBigNumber(0),\n      maxWithDrawUSD: toBigNumber(0),\n      maxPethDraw: toBigNumber(0),\n      maxEthDraw: toBigNumber(0)\n    };\n  },\n  computed: _objectSpread({}, mapState(['account', 'gasPrice', 'web3', 'network', 'ens']), {\n    collateralRatioColoring: function collateralRatioColoring() {\n      if (this.values) {\n        if (this.values.collateralRatio >= 2) {\n          return 'green';\n        } else if (this.values.collateralRatio >= 1.75 && this.values.collateralRatio < 2) {\n          return 'orange';\n        }\n\n        return 'red';\n      }\n\n      return '';\n    },\n    liquidationPriceDisplay: function liquidationPriceDisplay() {\n      if (this.values) {\n        var value = displayFixedValue(this.values.liquidationPrice, 2);\n\n        if (new BigNumber(value).gt(0)) {\n          return value;\n        }\n\n        return '--';\n      }\n\n      return '--';\n    },\n    collaterlizationRatioDisplay: function collaterlizationRatioDisplay() {\n      if (this.values) {\n        return displayFixedPercent(this.values.collateralRatio);\n      }\n\n      return '--';\n    },\n    cdpIdDisplay: function cdpIdDisplay() {\n      if (this.values) {\n        return this.values.cdpId;\n      }\n\n      return '--';\n    },\n    liquidationRatioDisplay: function liquidationRatioDisplay() {\n      if (this.values) {\n        return displayFixedValue(displayPercentValue(this.liquidationRatio));\n      }\n\n      return '--';\n    },\n    liquidationPenaltyDisplay: function liquidationPenaltyDisplay() {\n      if (this.values) {\n        return displayFixedValue(displayPercentValue(this.liquidationPenalty));\n      }\n\n      return '--';\n    },\n    stabilityFeeDisplay: function stabilityFeeDisplay() {\n      if (this.values) {\n        return displayFixedValue(displayPercentValue(this.stabilityFee));\n      }\n\n      return '--';\n    },\n    ethPriceDisplay: function ethPriceDisplay() {\n      if (this.values) {\n        return displayFixedValue(this.ethPrice, 2);\n      }\n\n      return '--';\n    },\n    maxPethDrawDisplay: function maxPethDrawDisplay() {\n      if (this.values) {\n        return displayFixedValue(this.values.maxPethDraw, 5);\n      }\n\n      return '--';\n    },\n    zeroDebt: function zeroDebt() {\n      return toBigNumber(this.values.debtValue).eq(0);\n    },\n    maxEthDrawDisplay: function maxEthDrawDisplay() {\n      if (this.values) {\n        return this.values.maxEthDraw;\n      }\n\n      return '--';\n    },\n    maxUsdDrawDisplay: function maxUsdDrawDisplay() {\n      if (this.values) {\n        return displayFixedValue(this.values.maxUsdDraw, 2);\n      }\n\n      return '--';\n    },\n    ethCollateral: function ethCollateral() {\n      if (this.values) {\n        return displayFixedValue(this.values.ethCollateral, 5, true);\n      }\n\n      return '--';\n    },\n    pethCollateral: function pethCollateral() {\n      if (this.values) {\n        return displayFixedValue(this.values.pethCollateral, 5, true);\n      }\n\n      return '--';\n    },\n    usdCollateral: function usdCollateral() {\n      if (this.values) {\n        return displayFixedValue(this.values.usdCollateral, 2);\n      }\n\n      return '--';\n    },\n    debtValueDisplay: function debtValueDisplay() {\n      if (this.values) {\n        return displayFixedValue(this.values.debtValue, 2);\n      }\n\n      return '--';\n    },\n    debtValue: function debtValue() {\n      if (this.values) {\n        return this.values.debtValue;\n      }\n\n      return '--';\n    },\n    maxDai: function maxDai() {\n      if (this.values) {\n        return this.values.maxDai;\n      }\n\n      return '--';\n    },\n    maxUsd: function maxUsd() {\n      if (this.values) {\n        return displayFixedValue(this.values.maxDai, 2);\n      }\n\n      return '--';\n    }\n  }),\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.cdpId = this.$route.params.cdpId;\n\n              if (this.makerActive) {\n                this.loaded = true;\n\n                if (this.cdpId) {\n                  this.$emit('activeCdpId', this.cdpId);\n                }\n              }\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: {\n    showClose: function showClose() {},\n    showMove: function showMove() {},\n    displayPercentValue: displayPercentValue,\n    displayFixedValue: displayFixedValue,\n    isReady: function () {\n      var _isReady = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function isReady() {\n        return _isReady.apply(this, arguments);\n      }\n\n      return isReady;\n    }(),\n    migrateCdp: function () {\n      var _migrateCdp = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.$emit('migrateCdp', this.cdpId);\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function migrateCdp() {\n        return _migrateCdp.apply(this, arguments);\n      }\n\n      return migrateCdp;\n    }()\n  }\n};",{"version":3,"sources":["ProxyMigrateCDP.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"manage-container\">\n      <!-- ==================================================== -->\n      <div class=\"title-content-container\">\n        <p class=\"cpd-title\">{{ $t('dappsMaker.cdpPortal') }}</p>\n        <p class=\"cdp-id\">\n          {{ $t('dappsMaker.positionLabel', { value: cdpIdDisplay }) }}\n        </p>\n      </div>\n      <!-- ==================================================== -->\n      <!-- 1st row-->\n      <!-- ==================================================== -->\n      <div class=\"information-blocks\">\n        <div class=\"block-item\">\n          <div class=\"block-title\">\n            <p>{{ $t('dappsMaker.liquidPrice') }} (ETH/USD)</p>\n            <div class=\"blue\">\n              <span class=\"blue-bold\">{{ liquidationPriceDisplay }}</span>\n              USD\n            </div>\n          </div>\n          <div class=\"block-content\">\n            <div class=\"item\">\n              <p>{{ $t('dappsMaker.currentPrice') }}(ETH/USD)</p>\n              <div>{{ ethPriceDisplay }} <span>USD</span></div>\n            </div>\n            <div class=\"item\">\n              <p>{{ $t('dappsMaker.liquidationPenalty') }}</p>\n              <div>{{ liquidationPenaltyDisplay }}%</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"block-item\">\n          <div class=\"block-title\">\n            <p>{{ $t('dappsMaker.collateralRatio') }}</p>\n            <div :class=\"collateralRatioColoring\">\n              <span>{{ collaterlizationRatioDisplay }}%</span>\n            </div>\n          </div>\n          <div class=\"block-content\">\n            <div class=\"item\">\n              <p>{{ $t('dappsMaker.minimumRatio') }}</p>\n              <div>{{ liquidationRatioDisplay }}%</div>\n            </div>\n            <div class=\"item\">\n              <p>{{ $t('dappsMaker.stabilityFee') }}</p>\n              <div>{{ stabilityFeeDisplay }}%</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- ==================================================== -->\n      <!--2nd row-->\n      <!-- ==================================================== -->\n      <div class=\"information-single-block\">\n        <div class=\"block-item\">\n          <div class=\"block-title\">\n            <p>{{ $t('dappsMaker.ethCollateral') }}</p>\n          </div>\n\n          <div class=\"block-content-container\">\n            <div class=\"block-content\">\n              <div class=\"item\">\n                <p>{{ $t('dappsMaker.deposited') }}</p>\n                <div>\n                  {{ ethCollateral }}\n                  <span>ETH</span>\n                </div>\n                <div>\n                  {{ pethCollateral }}\n                  <span>PETH</span> /\n                  {{ usdCollateral }}\n                  <span>USD</span>\n                </div>\n              </div>\n            </div>\n            <div class=\"block-content\">\n              <div class=\"item\">\n                <p>{{ $t('dappsMaker.maxWithDraw') }}</p>\n                <div>\n                  {{ maxEthDrawDisplay }}\n                  <span>ETH</span>\n                </div>\n                <div>\n                  {{ maxPethDrawDisplay }}\n                  <span>PETH</span> /\n                  {{ maxUsdDrawDisplay }}\n                  <span>USD</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- ==================================================== -->\n\n      <!-- 3rd row-->\n      <!-- ==================================================== -->\n      <div class=\"information-single-block\">\n        <div class=\"block-item\">\n          <div class=\"block-title\">\n            <p>{{ $t('dappsMaker.daiPosition') }}</p>\n          </div>\n\n          <div class=\"block-content-container\">\n            <div class=\"block-content\">\n              <div class=\"item\">\n                <p>{{ $t('dappsMaker.generated') }}</p>\n                <div>{{ debtValue }} <span>DAI</span></div>\n                <div>\n                  {{ debtValueDisplay }}\n                  <span>USD</span>\n                </div>\n              </div>\n            </div>\n            <div class=\"block-content\">\n              <div class=\"item\">\n                <p>{{ $t('dappsMaker.maxAvailable') }}</p>\n                <div>\n                  {{ maxDai }}\n                  <span>DAI</span>\n                </div>\n                <div>\n                  {{ maxUsd }}\n                  <span>USD</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- ==================================================== -->\n    </div>\n    <help-link />\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport InterfaceContainerTitle from '@/layouts/InterfaceLayout/components/InterfaceContainerTitle';\nimport InterfaceBottomText from '@/components/InterfaceBottomText';\nimport BottomHelpLink from '@/components/BottomHelpLink';\nimport Blockie from '@/components/Blockie';\nimport CloseCdpModal from '../../components/CloseCdpModal';\nimport MoveCdpModal from '../../components/MoveCdpModal';\nimport {\n  displayFixedPercent,\n  displayFixedValue,\n  displayPercentValue\n} from '../../helpers';\n\nimport BigNumber from 'bignumber.js';\n\nconst toBigNumber = num => {\n  return new BigNumber(num);\n};\n\nexport default {\n  components: {\n    'interface-container-title': InterfaceContainerTitle,\n    'interface-bottom-text': InterfaceBottomText,\n    'close-cdp-modal': CloseCdpModal,\n    'move-cdp-modal': MoveCdpModal,\n    blockie: Blockie,\n    'help-link': BottomHelpLink\n  },\n  props: {\n    openCloseModal: {\n      type: Boolean,\n      default: false\n    },\n    openMoveModal: {\n      type: Boolean,\n      default: false\n    },\n    tokensWithBalance: {\n      type: Array,\n      default: function() {\n        return [];\n      }\n    },\n    getBalance: {\n      type: Function,\n      default: function() {}\n    },\n    makerActive: {\n      type: Boolean,\n      default: false\n    },\n    cdps: {\n      type: Array,\n      default: function() {\n        return [];\n      }\n    },\n    availableCdps: {\n      type: Object,\n      default: function() {\n        return {};\n      }\n    },\n    getCdp: {\n      type: Function,\n      default: function() {}\n    },\n    hasCdp: {\n      type: Function,\n      default: function() {}\n    },\n    values: {\n      type: Object,\n      default: function() {\n        return {\n          maxPethDraw: '',\n          maxEthDraw: '',\n          maxUsdDraw: '',\n          ethCollateral: '',\n          pethCollateral: '',\n          usdCollateral: '',\n          debtValue: '',\n          maxDai: '',\n          collateralRatio: '',\n          cdpId: '',\n          stabilityFee: '',\n          minEth: '',\n          liquidationRatio: '',\n          wethToPethRatio: '',\n          liquidationPenalty: '',\n          targetPrice: '',\n          pethPrice: ''\n        };\n      }\n    },\n    ethPrice: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    pethPrice: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    liquidationPenalty: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    stabilityFee: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    liquidationRatio: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    wethToPethRatio: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    pethMin: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    priceService: {\n      type: Object,\n      default: function() {\n        return {};\n      }\n    },\n    cdpService: {\n      type: Object,\n      default: function() {\n        return {};\n      }\n    },\n    proxyService: {\n      type: Object,\n      default: function() {\n        return {};\n      }\n    }\n  },\n  data() {\n    return {\n      loaded: false,\n      ethQty: 0,\n      daiQty: 0,\n      selectedCdp: '',\n      cdpId: '',\n      cdp: {},\n      maxDaiDraw: toBigNumber(0),\n      maxWithDraw: toBigNumber(0),\n      maxWithDrawUSD: toBigNumber(0),\n      maxPethDraw: toBigNumber(0),\n      maxEthDraw: toBigNumber(0)\n    };\n  },\n  computed: {\n    ...mapState(['account', 'gasPrice', 'web3', 'network', 'ens']),\n    collateralRatioColoring() {\n      if (this.values) {\n        if (this.values.collateralRatio >= 2) {\n          return 'green';\n        } else if (\n          this.values.collateralRatio >= 1.75 &&\n          this.values.collateralRatio < 2\n        ) {\n          return 'orange';\n        }\n        return 'red';\n      }\n      return '';\n    },\n    liquidationPriceDisplay() {\n      if (this.values) {\n        const value = displayFixedValue(this.values.liquidationPrice, 2);\n        if (new BigNumber(value).gt(0)) {\n          return value;\n        }\n        return '--';\n      }\n      return '--';\n    },\n    collaterlizationRatioDisplay() {\n      if (this.values) {\n        return displayFixedPercent(this.values.collateralRatio);\n      }\n      return '--';\n    },\n    cdpIdDisplay() {\n      if (this.values) {\n        return this.values.cdpId;\n      }\n      return '--';\n    },\n    liquidationRatioDisplay() {\n      if (this.values) {\n        return displayFixedValue(displayPercentValue(this.liquidationRatio));\n      }\n      return '--';\n    },\n    liquidationPenaltyDisplay() {\n      if (this.values) {\n        return displayFixedValue(displayPercentValue(this.liquidationPenalty));\n      }\n      return '--';\n    },\n    stabilityFeeDisplay() {\n      if (this.values) {\n        return displayFixedValue(displayPercentValue(this.stabilityFee));\n      }\n      return '--';\n    },\n    ethPriceDisplay() {\n      if (this.values) {\n        return displayFixedValue(this.ethPrice, 2);\n      }\n      return '--';\n    },\n    maxPethDrawDisplay() {\n      if (this.values) {\n        return displayFixedValue(this.values.maxPethDraw, 5);\n      }\n      return '--';\n    },\n    zeroDebt() {\n      return toBigNumber(this.values.debtValue).eq(0);\n    },\n    maxEthDrawDisplay() {\n      if (this.values) {\n        return this.values.maxEthDraw;\n      }\n      return '--';\n    },\n    maxUsdDrawDisplay() {\n      if (this.values) {\n        return displayFixedValue(this.values.maxUsdDraw, 2);\n      }\n      return '--';\n    },\n    ethCollateral() {\n      if (this.values) {\n        return displayFixedValue(this.values.ethCollateral, 5, true);\n      }\n      return '--';\n    },\n    pethCollateral() {\n      if (this.values) {\n        return displayFixedValue(this.values.pethCollateral, 5, true);\n      }\n      return '--';\n    },\n    usdCollateral() {\n      if (this.values) {\n        return displayFixedValue(this.values.usdCollateral, 2);\n      }\n      return '--';\n    },\n    debtValueDisplay() {\n      if (this.values) {\n        return displayFixedValue(this.values.debtValue, 2);\n      }\n      return '--';\n    },\n    debtValue() {\n      if (this.values) {\n        return this.values.debtValue;\n      }\n      return '--';\n    },\n    maxDai() {\n      if (this.values) {\n        return this.values.maxDai;\n      }\n      return '--';\n    },\n    maxUsd() {\n      if (this.values) {\n        return displayFixedValue(this.values.maxDai, 2);\n      }\n      return '--';\n    }\n  },\n  async mounted() {\n    this.cdpId = this.$route.params.cdpId;\n    if (this.makerActive) {\n      this.loaded = true;\n      if (this.cdpId) {\n        this.$emit('activeCdpId', this.cdpId);\n      }\n    }\n  },\n  methods: {\n    showClose() {},\n    showMove() {},\n    displayPercentValue,\n    displayFixedValue,\n    async isReady() {},\n    async migrateCdp() {\n      this.$emit('migrateCdp', this.cdpId);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'ProxyMigrateCDP';\n</style>\n"],"sourceRoot":"src/dapps/MakerDai/containers/ProxyMigrateCDP"}]}