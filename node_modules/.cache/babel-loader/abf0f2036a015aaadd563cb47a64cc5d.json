{"remainingRequest":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/dapps/MakerDai/MakerDai.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/dapps/MakerDai/MakerDai.vue","mtime":1573477611644},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _toConsumableArray from \"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport BackButton from '@/layouts/InterfaceLayout/components/BackButton';\nimport InterfaceContainerTitle from '@/layouts/InterfaceLayout/components/InterfaceContainerTitle';\nimport InterfaceBottomText from '@/components/InterfaceBottomText';\nimport Blockie from '@/components/Blockie';\nimport CloseCdpModal from \"./components/CloseCdpModal\";\nimport MoveCdpModal from \"./components/MoveCdpModal\";\nimport GenerateModal from \"./components/GenerateModal\";\nimport DepositModal from \"./components/DepositModal\";\nimport WithdrawModal from \"./components/WithdrawModal\";\nimport PaybackModal from \"./components/PaybackModal\";\nimport BigNumber from 'bignumber.js';\nimport Maker from '@makerdao/dai';\nimport { Toast } from '@/helpers';\nimport MakerCDP from \"./MakerCDP\";\nimport { toChecksumAddress } from '@/helpers/addressUtils';\nimport MewPlugin from 'mew-maker-plugin';\nvar MKR = Maker.MKR,\n    DAI = Maker.DAI;\n\nvar toBigNumber = function toBigNumber(num) {\n  return new BigNumber(num);\n};\n\nvar bnOver = function bnOver(one, two, three) {\n  return toBigNumber(one).times(toBigNumber(two)).div(toBigNumber(three));\n};\n\nexport default {\n  components: {\n    'interface-container-title': InterfaceContainerTitle,\n    'interface-bottom-text': InterfaceBottomText,\n    'generate-modal': GenerateModal,\n    'deposit-modal': DepositModal,\n    'withdraw-modal': WithdrawModal,\n    'payback-modal': PaybackModal,\n    blockie: Blockie,\n    'back-button': BackButton,\n    'close-cdp-modal': CloseCdpModal,\n    'move-cdp-modal': MoveCdpModal\n  },\n  props: {\n    tokensWithBalance: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    getBalance: {\n      type: Function,\n      default: function _default() {}\n    },\n    highestGas: {\n      type: String,\n      default: '0'\n    }\n  },\n  data: function data() {\n    return {\n      destAddressProxy: '',\n      destAddressHasProxy: false,\n      afterUpdate: [],\n      allCdpIds: [],\n      activeCdp: {},\n      activeValues: {\n        maxPethDraw: toBigNumber(0),\n        maxEthDraw: toBigNumber(0),\n        maxUsdDraw: toBigNumber(0),\n        ethCollateral: toBigNumber(0),\n        pethCollateral: toBigNumber(0),\n        usdCollateral: toBigNumber(0),\n        debtValue: toBigNumber(0),\n        maxDai: toBigNumber(0),\n        collateralRatio: toBigNumber(0),\n        minEth: toBigNumber(0),\n        cdpId: '--'\n      },\n      availableCdps: {},\n      cdps: [],\n      cdpsWithoutProxy: [],\n      cdpService: {},\n      cdpDetailsLoaded: false,\n      currentProxy: null,\n      currentCdpId: '',\n      creatingCdp: false,\n      daiPrice: 0,\n      daiQty: 0,\n      ethPrice: toBigNumber(0),\n      ethQty: 0,\n      liquidationRatio: toBigNumber(0),\n      liquidationPenalty: toBigNumber(0),\n      makerActive: false,\n      makerCdp: {},\n      makerManager: {},\n      migrationInProgress: {},\n      openCloseModal: false,\n      openMoveModal: false,\n      proxyService: {},\n      proxyAddress: null,\n      pethPrice: toBigNumber(0),\n      pethMin: toBigNumber(0),\n      priceService: {},\n      priceFloor: 0,\n      stabilityFee: toBigNumber(0),\n      sysVars: {},\n      sysServices: {},\n      targetPrice: 0,\n      valuesUpdated: 0,\n      wethToPethRatio: toBigNumber(0)\n    };\n  },\n  computed: _objectSpread({}, mapState(['account', 'gasPrice', 'web3', 'network', 'ens']), {\n    maxDaiDraw: function maxDaiDraw() {\n      if (this.ethQty <= 0) return 0;\n      return bnOver(this.ethPrice, this.ethQty, this.liquidationRatio);\n    },\n    minEthDeposit: function minEthDeposit() {\n      if (this.daiQty <= 0) return 0;\n      return bnOver(this.liquidationRatio, this.daiQty, this.ethPrice);\n    },\n    showMoveOrClose: function showMoveOrClose() {\n      return this.$route.name === 'manage' || this.$route.name === 'migrate';\n    },\n    showManage: function showManage() {\n      return this.listCdps || this.cdps.length >= 1 && this.cdpsWithoutProxy.length >= 1;\n    },\n    showRefresh: function showRefresh() {\n      return this.cdps.length > 0 || this.cdpsWithoutProxy.length > 0;\n    },\n    onCreate: function onCreate() {\n      return this.$route.name === 'create';\n    },\n    showCreateProxy: function showCreateProxy() {\n      if (this.showCdpMigrateButtons) {\n        return false;\n      }\n\n      return !this.hasProxy && !this.onCreate;\n    },\n    showCdpMigrateButtons: function showCdpMigrateButtons() {\n      return this.hasProxy && this.cdpsWithoutProxy.length >= 1;\n    },\n    listCdps: function listCdps() {\n      return this.cdps.length > 1 || this.cdpsWithoutProxy.length > 1;\n    },\n    hasProxy: function hasProxy() {\n      return this.proxyAddress !== null;\n    },\n    currentProxyAddress: function currentProxyAddress() {\n      return this.proxyAddress;\n    }\n  }),\n  watch: _defineProperty({}, 'account.address', function accountAddress() {\n    this.makerActive = false;\n    this.setup();\n  }),\n  destroyed: function destroyed() {\n    this.priceService = {};\n    this.cdpService = {};\n    this.proxyService = {};\n    this.availableCdps = {};\n    this.activeCdp = {};\n    this.makerCdp = {};\n    this.sysVars = {};\n    this.sysServices = {};\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.setup();\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: {\n    modalHidden: function modalHidden() {\n      this.openCloseModal = false;\n      this.openMoveModal = false;\n    },\n    gotoHome: function gotoHome() {\n      this.$router.push({\n        name: 'Maker'\n      });\n    },\n    gotoCreate: function gotoCreate() {\n      if (this.$route.path.includes('maker-dai')) {\n        this.activeValues = this.systemValues;\n        this.$router.push({\n          name: 'create'\n        });\n      }\n    },\n    goToManage: function goToManage() {\n      if (this.$route.path.includes('maker-dai')) {\n        if (this.cdps.length === 1) {\n          this.$router.push({\n            name: 'manage',\n            params: {\n              cdpId: this.cdps[0]\n            }\n          });\n        } else if (this.cdpsWithoutProxy.length === 1) {\n          this.$router.push({\n            name: 'migrate',\n            params: {\n              cdpId: this.cdpsWithoutProxy[0]\n            }\n          });\n        } else if (this.showManage) {\n          // The listing screen may not work and can be removed\n          this.$router.push({\n            name: 'select'\n          });\n        } else {\n          this.gotoCreate();\n        }\n      }\n    },\n    openManage: function openManage(cdpId) {\n      if (this.$route.path.includes('maker-dai')) {\n        this.setupCdpManage(cdpId);\n        this.$router.push({\n          name: 'manage',\n          params: {\n            cdpId: cdpId\n          }\n        });\n      }\n    },\n    openMigrate: function openMigrate(cdpId) {\n      if (this.$route.path.includes('maker-dai')) {\n        this.setupCdpManage(cdpId);\n        this.$router.push({\n          name: 'migrate',\n          params: {\n            cdpId: cdpId\n          }\n        });\n      }\n    },\n    showDeposit: function showDeposit() {\n      this.$refs.deposit.$refs.modal.show();\n    },\n    showWithdraw: function showWithdraw() {\n      this.$refs.withdraw.$refs.modal.show();\n    },\n    showPayback: function showPayback() {\n      this.$refs.payback.$refs.modal.show();\n    },\n    showGenerate: function showGenerate() {\n      this.$refs.generate.$refs.modal.show();\n    },\n    showClose: function showClose() {\n      var _this = this;\n\n      this.$refs.closeCdp.$refs.modal.$on('hidden', function () {\n        _this.$emit('modalHidden');\n      });\n      this.$refs.closeCdp.$refs.modal.show();\n    },\n    showMove: function showMove() {\n      var _this2 = this;\n\n      this.$refs.moveCdp.$refs.modal.$on('hidden', function () {\n        _this2.$emit('modalHidden');\n      });\n      this.destAddressHasProxy = false;\n      this.$refs.moveCdp.$refs.modal.show();\n    },\n    setup: function () {\n      var _setup = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var web3, _self, MewMakerPlugin, minEth, _ref2, withProxy, withoutProxy;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.activeCdps = {};\n                this.currentCdp = {};\n                web3 = this.web3;\n                _self = this;\n                this.gotoHome();\n                MewMakerPlugin = MewPlugin(web3, _self.account.address,\n                /*#__PURE__*/\n                _asyncToGenerator(\n                /*#__PURE__*/\n                regeneratorRuntime.mark(function _callee2() {\n                  return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          if (!_self.$route.path.includes('maker-dai')) {\n                            _context2.next = 3;\n                            break;\n                          }\n\n                          _context2.next = 3;\n                          return _self.doUpdate();\n\n                        case 3:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                })));\n                _context3.next = 8;\n                return Maker.create('inject', {\n                  provider: {\n                    inject: web3.currentProvider\n                  },\n                  plugins: [MewMakerPlugin],\n                  accounts: {\n                    myLedger1: {\n                      type: 'mew'\n                    }\n                  }\n                });\n\n              case 8:\n                this.maker = _context3.sent;\n                _context3.next = 11;\n                return this.maker.authenticate();\n\n              case 11:\n                this._priceService = this.maker.service('price');\n                _context3.next = 14;\n                return this.maker.service('cdp');\n\n              case 14:\n                this._cdpService = _context3.sent;\n                _context3.next = 17;\n                return this.maker.service('proxy');\n\n              case 17:\n                this._proxyService = _context3.sent;\n                _context3.next = 20;\n                return this.maker.service('token');\n\n              case 20:\n                this._tokenService = _context3.sent;\n                this.pethMin = toBigNumber(0.005);\n                _context3.t0 = toBigNumber;\n                _context3.next = 25;\n                return this._priceService.getEthPrice();\n\n              case 25:\n                _context3.t1 = _context3.sent.toNumber();\n                this.ethPrice = (0, _context3.t0)(_context3.t1);\n                _context3.t2 = toBigNumber;\n                _context3.next = 30;\n                return this._priceService.getPethPrice();\n\n              case 30:\n                _context3.t3 = _context3.sent.toNumber();\n                this.pethPrice = (0, _context3.t2)(_context3.t3);\n                _context3.t4 = toBigNumber;\n                _context3.next = 35;\n                return this._priceService.getPethPrice();\n\n              case 35:\n                _context3.t5 = _context3.sent.toNumber();\n                this._targetPrice = (0, _context3.t4)(_context3.t5);\n                _context3.t6 = toBigNumber;\n                _context3.next = 40;\n                return this._cdpService.getLiquidationRatio();\n\n              case 40:\n                _context3.t7 = _context3.sent;\n                this.liquidationRatio = (0, _context3.t6)(_context3.t7);\n                _context3.t8 = toBigNumber;\n                _context3.next = 45;\n                return this._cdpService.getLiquidationPenalty();\n\n              case 45:\n                _context3.t9 = _context3.sent;\n                this.liquidationPenalty = (0, _context3.t8)(_context3.t9);\n                _context3.t10 = toBigNumber;\n                _context3.next = 50;\n                return this._cdpService.getAnnualGovernanceFee();\n\n              case 50:\n                _context3.t11 = _context3.sent;\n                this.stabilityFee = (0, _context3.t10)(_context3.t11);\n                _context3.t12 = toBigNumber;\n                _context3.next = 55;\n                return this._priceService.getWethToPethRatio();\n\n              case 55:\n                _context3.t13 = _context3.sent;\n                this.wethToPethRatio = (0, _context3.t12)(_context3.t13);\n                _context3.next = 59;\n                return this._proxyService.currentProxy();\n\n              case 59:\n                this.proxyAddress = _context3.sent;\n                this.daiToken = this._tokenService.getToken(DAI);\n                _context3.next = 63;\n                return this.daiToken.balance();\n\n              case 63:\n                this.daiBalance = _context3.sent.toBigNumber();\n                this.mkrToken = this._tokenService.getToken(MKR);\n                _context3.next = 67;\n                return this.mkrToken.balance();\n\n              case 67:\n                this.mkrBalance = _context3.sent.toBigNumber();\n                minEth = toBigNumber(this.pethMin).times(this.wethToPethRatio);\n                this.systemValues = {\n                  stabilityFee: this.stabilityFee,\n                  minEth: minEth,\n                  liquidationRatio: this.liquidationRatio,\n                  wethToPethRatio: this.wethToPethRatio,\n                  liquidationPenalty: this.liquidationPenalty,\n                  targetPrice: this._targetPrice,\n                  pethPrice: this.pethPrice\n                };\n                _context3.next = 72;\n                return this.checkAllowances();\n\n              case 72:\n                _context3.next = 74;\n                return this.locateCdps();\n\n              case 74:\n                _ref2 = _context3.sent;\n                withProxy = _ref2.withProxy;\n                withoutProxy = _ref2.withoutProxy;\n                this.cdps = withProxy;\n                this.cdpsWithoutProxy = withoutProxy;\n\n                if (!(this.cdps.length > 0 || this.cdpsWithoutProxy.length > 0)) {\n                  _context3.next = 82;\n                  break;\n                }\n\n                _context3.next = 82;\n                return this.loadCdpDetails();\n\n              case 82:\n                this.currentProxy = this.getProxy();\n\n                if (this.cdps.length > 0 || this.cdpsWithoutProxy.length > 0) {\n                  this.cdpDetailsLoaded = true;\n                  this.makerActive = true;\n\n                  if (this.$route.name !== 'create' && this.$route.path.includes('maker-dai')) {\n                    this.goToManage();\n                  }\n                } else {\n                  this.gotoCreate();\n                }\n\n              case 84:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function setup() {\n        return _setup.apply(this, arguments);\n      }\n\n      return setup;\n    }(),\n    buildEmpty: function () {\n      var _buildEmpty = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.buildCdpObject(null);\n\n              case 2:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function buildEmpty() {\n        return _buildEmpty.apply(this, arguments);\n      }\n\n      return buildEmpty;\n    }(),\n    addCdp: function addCdp() {\n      this.creatingCdp = true;\n    },\n    removeCdp: function removeCdp(vals) {\n      try {\n        delete this.availableCdps[vals.id];\n        Toast.responseHandler('CDP Closed', Toast.INFO);\n      } catch (e) {\n        // eslint-disable-next-line\n        console.error(e);\n      }\n    },\n    migrateCdpExternal: function () {\n      var _migrateCdpExternal = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5(cdpId) {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                this.afterUpdate.push(this.goToManage);\n                _context5.next = 3;\n                return this.migrateCdp(cdpId);\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function migrateCdpExternal(_x) {\n        return _migrateCdpExternal.apply(this, arguments);\n      }\n\n      return migrateCdpExternal;\n    }(),\n    refreshExternal: function () {\n      var _refreshExternal = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6() {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.doUpdate();\n\n              case 2:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function refreshExternal() {\n        return _refreshExternal.apply(this, arguments);\n      }\n\n      return refreshExternal;\n    }(),\n    refresh: function () {\n      var _refresh = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7() {\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.doUpdate();\n\n              case 2:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function refresh() {\n        return _refresh.apply(this, arguments);\n      }\n\n      return refresh;\n    }(),\n    doUpdate: function () {\n      var _doUpdate = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee8() {\n        var _this3 = this;\n\n        var afterClose, afterOpen, _loop, idProp, runAfterUpdate;\n\n        return regeneratorRuntime.wrap(function _callee8$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return this.getProxy();\n\n              case 2:\n                this.proxyAddress = _context9.sent;\n                afterClose = false;\n                afterOpen = this.$route.name === 'create';\n                _context9.next = 7;\n                return this.updateActiveCdp();\n\n              case 7:\n                _loop =\n                /*#__PURE__*/\n                regeneratorRuntime.mark(function _loop(idProp) {\n                  return regeneratorRuntime.wrap(function _loop$(_context8) {\n                    while (1) {\n                      switch (_context8.prev = _context8.next) {\n                        case 0:\n                          if (!_this3.activeCdps[idProp].needsUpdate) {\n                            _context8.next = 16;\n                            break;\n                          }\n\n                          if (!_this3.activeCdps[idProp].closing) {\n                            _context8.next = 8;\n                            break;\n                          }\n\n                          afterClose = true;\n                          delete _this3.activeCdps[idProp];\n                          _this3.cdps = _this3.cdps.filter(function (item) {\n                            return item !== idProp;\n                          });\n                          _this3.cdpsWithoutProxy = _this3.cdpsWithoutProxy.filter(function (item) {\n                            return item !== idProp;\n                          });\n                          _context8.next = 16;\n                          break;\n\n                        case 8:\n                          if (!_this3.activeCdps[idProp].opening) {\n                            _context8.next = 13;\n                            break;\n                          }\n\n                          _context8.next = 11;\n                          return _this3.activeCdps[idProp].updateValues();\n\n                        case 11:\n                          _context8.next = 16;\n                          break;\n\n                        case 13:\n                          _context8.next = 15;\n                          return _this3.activeCdps[idProp].update();\n\n                        case 15:\n                          _this3.activeCdps[idProp] = _context8.sent;\n\n                        case 16:\n                          if (!(idProp === _this3.currentCdpId)) {\n                            _context8.next = 21;\n                            break;\n                          }\n\n                          _context8.next = 19;\n                          return _this3.currentCdp.update();\n\n                        case 19:\n                          _context8.next = 21;\n                          return _this3.setupCdpManage(_this3.currentCdpId);\n\n                        case 21:\n                        case \"end\":\n                          return _context8.stop();\n                      }\n                    }\n                  }, _loop);\n                });\n                _context9.t0 = regeneratorRuntime.keys(this.activeCdps);\n\n              case 9:\n                if ((_context9.t1 = _context9.t0()).done) {\n                  _context9.next = 14;\n                  break;\n                }\n\n                idProp = _context9.t1.value;\n                return _context9.delegateYield(_loop(idProp), \"t2\", 12);\n\n              case 12:\n                _context9.next = 9;\n                break;\n\n              case 14:\n                _context9.next = 16;\n                return this.daiToken.balance();\n\n              case 16:\n                this.daiBalance = _context9.sent.toBigNumber();\n                _context9.next = 19;\n                return this.mkrToken.balance();\n\n              case 19:\n                this.mkrBalance = _context9.sent.toBigNumber();\n                _context9.next = 22;\n                return this.checkAllowances();\n\n              case 22:\n                if (Object.keys(this.activeCdps).includes(this.currentCdpId)) {\n                  _context9.next = 29;\n                  break;\n                }\n\n                _context9.next = 25;\n                return this.loadCdpDetails();\n\n              case 25:\n                _context9.next = 27;\n                return this.setupCdpManage(this.currentCdpId);\n\n              case 27:\n                _context9.next = 31;\n                break;\n\n              case 29:\n                _context9.next = 31;\n                return this.setupCdpManage(this.currentCdpId);\n\n              case 31:\n                runAfterUpdate = function runAfterUpdate() {\n                  if (_this3.afterUpdate.length > 0) {\n                    var fn = _this3.afterUpdate.pop();\n\n                    fn();\n                    runAfterUpdate();\n                  }\n                };\n\n                runAfterUpdate();\n\n                if (afterClose || afterOpen || this.creatingCdp) {\n                  if (this.cdps.length > 0 || this.cdpsWithoutProxy.length > 0) {\n                    this.goToManage();\n                  } else {\n                    this.gotoCreate();\n                  }\n                }\n\n                if (!this.creatingCdp) {\n                  _context9.next = 41;\n                  break;\n                }\n\n                this.creatingCdp = false;\n                _context9.next = 38;\n                return this.updateActiveCdp();\n\n              case 38:\n                Toast.responseHandler('CDP Created', Toast.INFO);\n                _context9.next = 43;\n                break;\n\n              case 41:\n                this.valuesUpdated++;\n                Toast.responseHandler('CDP Updated', Toast.INFO);\n\n              case 43:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function doUpdate() {\n        return _doUpdate.apply(this, arguments);\n      }\n\n      return doUpdate;\n    }(),\n    checkAllowances: function () {\n      var _checkAllowances = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee9() {\n        return regeneratorRuntime.wrap(function _callee9$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                if (!this.proxyAddress) {\n                  _context10.next = 7;\n                  break;\n                }\n\n                _context10.next = 3;\n                return this.daiToken.allowance(this.account.address, this.proxyAddress);\n\n              case 3:\n                this._proxyAllowanceDai = _context10.sent.toBigNumber();\n                _context10.next = 6;\n                return this.mkrToken.allowance(this.account.address, this.proxyAddress);\n\n              case 6:\n                this._proxyAllowanceMkr = _context10.sent.toBigNumber();\n\n              case 7:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function checkAllowances() {\n        return _checkAllowances.apply(this, arguments);\n      }\n\n      return checkAllowances;\n    }(),\n    setupCdpManage: function () {\n      var _setupCdpManage = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee10(cdpId) {\n        return regeneratorRuntime.wrap(function _callee10$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                if (!this.allCdpIds.includes(cdpId) && this.allCdpIds.length > 0) {\n                  cdpId = this.allCdpIds[0];\n                }\n\n                if (!(this.allCdpIds.length === 0)) {\n                  _context11.next = 5;\n                  break;\n                }\n\n                this.activeValues = this.systemValues;\n                _context11.next = 9;\n                break;\n\n              case 5:\n                this.currentCdpId = cdpId;\n                _context11.next = 8;\n                return this.getValuesForManage(cdpId);\n\n              case 8:\n                this.activeValues = _context11.sent;\n\n              case 9:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function setupCdpManage(_x2) {\n        return _setupCdpManage.apply(this, arguments);\n      }\n\n      return setupCdpManage;\n    }(),\n    getValuesForManage: function () {\n      var _getValuesForManage = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee11(cdpId) {\n        var currentCdp, _proxyAllowanceDai, _proxyAllowanceMkr, toPeth, systemValues;\n\n        return regeneratorRuntime.wrap(function _callee11$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                currentCdp = this.activeCdps[cdpId];\n                this.currentCdp = currentCdp;\n                _proxyAllowanceDai = this._proxyAllowanceDai;\n                _proxyAllowanceMkr = this._proxyAllowanceMkr;\n                toPeth = this.toPeth;\n                systemValues = this.systemValues;\n                return _context12.abrupt(\"return\", _objectSpread({}, systemValues, {\n                  cdpId: cdpId,\n                  maxPethDraw: currentCdp.maxPethDraw,\n                  maxEthDraw: currentCdp.maxEthDraw,\n                  maxUsdDraw: currentCdp.maxUsdDraw,\n                  ethCollateral: currentCdp.ethCollateral,\n                  pethCollateral: currentCdp.pethCollateral,\n                  usdCollateral: currentCdp.usdCollateral,\n                  debtValue: currentCdp.debtValue,\n                  maxDai: currentCdp.maxDai,\n                  collateralRatio: currentCdp.collatRatio,\n                  liquidationPrice: currentCdp.liquidationPrice,\n                  minEth: currentCdp.minEth,\n                  isSafe: false,\n                  governanceFeeOwed: currentCdp.governanceFeeOwed,\n                  ethCollateralNum: currentCdp.ethCollateralNum,\n                  toPeth: toPeth,\n                  proxyAllowanceDai: _proxyAllowanceDai,\n                  proxyAllowanceMkr: _proxyAllowanceMkr,\n                  zeroDebt: currentCdp.zeroDebt\n                }));\n\n              case 7:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function getValuesForManage(_x3) {\n        return _getValuesForManage.apply(this, arguments);\n      }\n\n      return getValuesForManage;\n    }(),\n    locateCdps: function () {\n      var _locateCdps = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee12() {\n        return regeneratorRuntime.wrap(function _callee12$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                this.cdpsWithoutProxy = [];\n                _context13.next = 3;\n                return this.locateCdpsWithoutProxy();\n\n              case 3:\n                this.cdpsWithoutProxy = _context13.sent;\n                this.cdps = [];\n                _context13.next = 7;\n                return this.locateCdpsProxy();\n\n              case 7:\n                this.cdps = _context13.sent;\n                this.allCdpIds = [].concat(_toConsumableArray(this.cdpsWithoutProxy), _toConsumableArray(this.cdps));\n                return _context13.abrupt(\"return\", {\n                  withProxy: this.cdps,\n                  withoutProxy: this.cdpsWithoutProxy\n                });\n\n              case 10:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function locateCdps() {\n        return _locateCdps.apply(this, arguments);\n      }\n\n      return locateCdps;\n    }(),\n    locateCdpsWithoutProxy: function () {\n      var _locateCdpsWithoutProxy = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee13() {\n        var directCdps, directCdpsCheckSum;\n        return regeneratorRuntime.wrap(function _callee13$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                _context14.next = 2;\n                return this._cdpService.getCdpIds(this.account.address);\n\n              case 2:\n                directCdps = _context14.sent;\n                _context14.next = 5;\n                return this._cdpService.getCdpIds(toChecksumAddress(this.account.address));\n\n              case 5:\n                directCdpsCheckSum = _context14.sent;\n                return _context14.abrupt(\"return\", directCdps.concat(directCdpsCheckSum));\n\n              case 7:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function locateCdpsWithoutProxy() {\n        return _locateCdpsWithoutProxy.apply(this, arguments);\n      }\n\n      return locateCdpsWithoutProxy;\n    }(),\n    locateCdpsProxy: function () {\n      var _locateCdpsProxy = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee14() {\n        return regeneratorRuntime.wrap(function _callee14$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                _context15.next = 2;\n                return this.getProxy();\n\n              case 2:\n                this.proxyAddress = _context15.sent;\n                _context15.next = 5;\n                return this._cdpService.getCdpIds(this.proxyAddress);\n\n              case 5:\n                return _context15.abrupt(\"return\", _context15.sent);\n\n              case 6:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function locateCdpsProxy() {\n        return _locateCdpsProxy.apply(this, arguments);\n      }\n\n      return locateCdpsProxy;\n    }(),\n    updateActiveCdp: function () {\n      var _updateActiveCdp = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee15() {\n        var _this4 = this;\n\n        var currentCdpIds, newCdps, newCdpsWithoutProxy, removedCdps, i, _i;\n\n        return regeneratorRuntime.wrap(function _callee15$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                currentCdpIds = Object.keys(this.activeCdps);\n                _context16.next = 3;\n                return this.locateCdps();\n\n              case 3:\n                newCdps = this.cdps.filter(function (item) {\n                  return !Object.keys(_this4.activeCdps).includes(item.toString());\n                });\n                newCdpsWithoutProxy = this.cdpsWithoutProxy.filter(function (item) {\n                  return !Object.keys(_this4.activeCdps).includes(item.toString());\n                });\n                removedCdps = currentCdpIds.filter(function (item) {\n                  return !(_this4.cdps.includes(item.toString()) || _this4.cdpsWithoutProxy.includes(item.toString()));\n                });\n\n                if (removedCdps.length > 0) {\n                  removedCdps.forEach(function (item) {\n                    return delete _this4.activeCdps[item];\n                  });\n                }\n\n                if (!(newCdps.length > 0)) {\n                  _context16.next = 16;\n                  break;\n                }\n\n                i = 0;\n\n              case 9:\n                if (!(i < newCdps.length)) {\n                  _context16.next = 16;\n                  break;\n                }\n\n                _context16.next = 12;\n                return this.buildCdpObject(newCdps[i]);\n\n              case 12:\n                this.activeCdps[newCdps[i]] = _context16.sent;\n\n              case 13:\n                i++;\n                _context16.next = 9;\n                break;\n\n              case 16:\n                if (!(newCdpsWithoutProxy.length > 0)) {\n                  _context16.next = 25;\n                  break;\n                }\n\n                _i = 0;\n\n              case 18:\n                if (!(_i < newCdpsWithoutProxy.length)) {\n                  _context16.next = 25;\n                  break;\n                }\n\n                _context16.next = 21;\n                return this.buildCdpObject(newCdpsWithoutProxy[_i], {\n                  noProxy: true\n                });\n\n              case 21:\n                this.activeCdps[newCdpsWithoutProxy[_i]] = _context16.sent;\n\n              case 22:\n                _i++;\n                _context16.next = 18;\n                break;\n\n              case 25:\n                if (this.cdps.length === 0 && this.cdpsWithoutProxy.length === 0) {\n                  this.gotoCreate();\n                }\n\n              case 26:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function updateActiveCdp() {\n        return _updateActiveCdp.apply(this, arguments);\n      }\n\n      return updateActiveCdp;\n    }(),\n    loadCdpDetails: function () {\n      var _loadCdpDetails = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee16() {\n        var i, _i2;\n\n        return regeneratorRuntime.wrap(function _callee16$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                i = 0;\n\n              case 1:\n                if (!(i < this.cdps.length)) {\n                  _context17.next = 8;\n                  break;\n                }\n\n                _context17.next = 4;\n                return this.buildCdpObject(this.cdps[i]);\n\n              case 4:\n                this.activeCdps[this.cdps[i]] = _context17.sent;\n\n              case 5:\n                i++;\n                _context17.next = 1;\n                break;\n\n              case 8:\n                _i2 = 0;\n\n              case 9:\n                if (!(_i2 < this.cdpsWithoutProxy.length)) {\n                  _context17.next = 16;\n                  break;\n                }\n\n                _context17.next = 12;\n                return this.buildCdpObject(this.cdpsWithoutProxy[_i2], {\n                  noProxy: true\n                });\n\n              case 12:\n                this.activeCdps[this.cdpsWithoutProxy[_i2]] = _context17.sent;\n\n              case 13:\n                _i2++;\n                _context17.next = 9;\n                break;\n\n              case 16:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function loadCdpDetails() {\n        return _loadCdpDetails.apply(this, arguments);\n      }\n\n      return loadCdpDetails;\n    }(),\n    buildCdpObject: function () {\n      var _buildCdpObject = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee17(cdpId) {\n        var options,\n            sysVars,\n            services,\n            makerCDP,\n            _args18 = arguments;\n        return regeneratorRuntime.wrap(function _callee17$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                options = _args18.length > 1 && _args18[1] !== undefined ? _args18[1] : {};\n                sysVars = _objectSpread({}, options, {\n                  _proxyAddress: this.proxyAddress,\n                  liquidationPenalty: this.liquidationPenalty,\n                  stabilityFee: this.stabilityFee,\n                  ethPrice: this.ethPrice,\n                  _pethPrice: this.pethPrice,\n                  wethToPethRatio: this.wethToPethRatio,\n                  _targetPrice: this._targetPrice,\n                  liquidationRatio: this.liquidationRatio,\n                  proxyAllowanceDai: this.proxyAllowanceDai,\n                  proxyAllowanceMkr: this.proxyAllowanceMkr,\n                  _daiToken: this._daiToken,\n                  daiBalance: this.daiBalance,\n                  _mkrToken: this._mkrToken,\n                  mkrBalance: this.mkrBalance,\n                  minEth: this.minEth,\n                  pethMin: this.pethMin\n                });\n\n                if (!this.cdpsWithoutProxy.includes(cdpId)) {\n                  _context18.next = 8;\n                  break;\n                }\n\n                _context18.next = 5;\n                return this.getMakerCdp(cdpId, false);\n\n              case 5:\n                this.cdp = _context18.sent;\n                _context18.next = 17;\n                break;\n\n              case 8:\n                if (!this.cdps.includes(cdpId)) {\n                  _context18.next = 14;\n                  break;\n                }\n\n                _context18.next = 11;\n                return this.getMakerCdp(cdpId, this.proxyAddress);\n\n              case 11:\n                this.cdp = _context18.sent;\n                _context18.next = 17;\n                break;\n\n              case 14:\n                _context18.next = 16;\n                return this.getMakerCdp(cdpId, false);\n\n              case 16:\n                this.cdp = _context18.sent;\n\n              case 17:\n                services = {\n                  _proxyService: this._proxyService,\n                  priceService: this.priceService,\n                  _cdpService: this._cdpService,\n                  doUpdate: this.doUpdate,\n                  getProxy: this.getProxy,\n                  hasProxy: this.hasProxy,\n                  getCdp: this.getMakerCdp,\n                  toPeth: this.toPeth,\n                  toUSD: this.toUSD,\n                  _proxyAddress: this.proxyAddress,\n                  liquidationPenalty: this.liquidationPenalty,\n                  stabilityFee: this.stabilityFee,\n                  ethPrice: this.ethPrice,\n                  _pethPrice: this.pethPrice,\n                  wethToPethRatio: this.wethToPethRatio,\n                  _targetPrice: this._targetPrice,\n                  liquidationRatio: this.liquidationRatio,\n                  proxyAllowanceDai: this.proxyAllowanceDai,\n                  proxyAllowanceMkr: this.proxyAllowanceMkr,\n                  _daiToken: this._daiToken,\n                  daiBalance: this.daiBalance,\n                  _mkrToken: this._mkrToken,\n                  mkrBalance: this.mkrBalance,\n                  minEth: this.minEth,\n                  pethMin: this.pethMin\n                };\n                makerCDP = new MakerCDP(cdpId, this.web3, services, sysVars);\n\n                if (!cdpId) {\n                  _context18.next = 23;\n                  break;\n                }\n\n                _context18.next = 22;\n                return makerCDP.init(cdpId);\n\n              case 22:\n                return _context18.abrupt(\"return\", _context18.sent);\n\n              case 23:\n                return _context18.abrupt(\"return\", makerCDP);\n\n              case 24:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee17, this);\n      }));\n\n      function buildCdpObject(_x4) {\n        return _buildCdpObject.apply(this, arguments);\n      }\n\n      return buildCdpObject;\n    }(),\n    getProxy: function () {\n      var _getProxy = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee18() {\n        return regeneratorRuntime.wrap(function _callee18$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                _context19.next = 2;\n                return this._proxyService.currentProxy();\n\n              case 2:\n                this.proxyAddress = _context19.sent;\n\n                if (this.proxyAddress) {\n                  _context19.next = 8;\n                  break;\n                }\n\n                _context19.next = 6;\n                return this._proxyService.getProxyAddress(this.account.address);\n\n              case 6:\n                this.proxyAddress = _context19.sent;\n                if (this.proxyAddress) this.noProxy = false;\n\n              case 8:\n                return _context19.abrupt(\"return\", this.proxyAddress);\n\n              case 9:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n\n      function getProxy() {\n        return _getProxy.apply(this, arguments);\n      }\n\n      return getProxy;\n    }(),\n    lockEth: function lockEth(val) {\n      this.currentCdp.lockEth(val);\n    },\n    wipeDai: function wipeDai(val) {\n      this.currentCdp.wipeDai(val);\n    },\n    freeEth: function freeEth(val) {\n      if (val[1] === null) {\n        this.currentCdp.freeEth(val[0]);\n      } else {\n        this.currentCdp.freeEth(val[0], val[1]);\n      }\n    },\n    drawDai: function drawDai(val) {\n      if (val[1] === null) {\n        this.currentCdp.drawDai(val[0]);\n      } else {\n        this.currentCdp.drawDai(val[0], val[1]);\n      }\n    },\n    closeCdp: function closeCdp() {\n      this.currentCdp.closeCdp();\n    },\n    checkIfDestAddressHasProxy: function checkIfDestAddressHasProxy(val) {\n      var _this5 = this;\n\n      this.currentCdp.checkIfDestAddressHasProxy(val).then(function (result) {\n        _this5.destAddressProxy = result;\n        _this5.destAddressHasProxy = result !== null;\n      }).catch(function (err) {\n        throw err;\n      });\n    },\n    moveCdp: function moveCdp(val) {\n      this.currentCdp.moveCdp(val);\n    },\n    calcCollatRatioDaiChg: function calcCollatRatioDaiChg(daiQty) {\n      return toBigNumber(this.currentCdp.calcCollatRatio(this.currentCdp.ethCollateral, daiQty));\n    },\n    calcCollatRatioEthChg: function calcCollatRatioEthChg(ethQty) {\n      return toBigNumber(this.currentCdp.calcCollatRatio(ethQty, this.currentCdp.debtValue));\n    },\n    calcLiquidationPriceDaiChg: function calcLiquidationPriceDaiChg(daiQty) {\n      return toBigNumber(this.currentCdp.calcLiquidationPrice(this.currentCdp.ethCollateral, daiQty));\n    },\n    calcLiquidationPriceEthChg: function calcLiquidationPriceEthChg(ethQty) {\n      return toBigNumber(this.currentCdp.calcLiquidationPrice(ethQty, this.currentCdp.debtValue));\n    },\n    approveDai: function () {\n      var _approveDai = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee19() {\n        return regeneratorRuntime.wrap(function _callee19$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                _context20.next = 2;\n                return this._tokenService.getToken(DAI).approveUnlimited(this.proxyAddress);\n\n              case 2:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n\n      function approveDai() {\n        return _approveDai.apply(this, arguments);\n      }\n\n      return approveDai;\n    }(),\n    approveMkr: function () {\n      var _approveMkr = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee20() {\n        return regeneratorRuntime.wrap(function _callee20$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                this._tokenService.getToken(MKR).approveUnlimited(this.proxyAddress);\n\n              case 1:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee20, this);\n      }));\n\n      function approveMkr() {\n        return _approveMkr.apply(this, arguments);\n      }\n\n      return approveMkr;\n    }(),\n    hasCdp: function hasCdp(cdpId) {\n      return Object.keys(this.activeCdps).includes(toBigNumber(cdpId).toString());\n    },\n    getCdp: function getCdp(cdpId) {\n      return this.activeCdps[cdpId];\n    },\n    getMakerCdp: function () {\n      var _getMakerCdp = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee21(cdpId) {\n        return regeneratorRuntime.wrap(function _callee21$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                if (!(cdpId === null)) {\n                  _context22.next = 2;\n                  break;\n                }\n\n                return _context22.abrupt(\"return\");\n\n              case 2:\n                if (!this.cdpsWithoutProxy.includes(cdpId)) {\n                  _context22.next = 8;\n                  break;\n                }\n\n                _context22.next = 5;\n                return this.maker.getCdp(cdpId, false);\n\n              case 5:\n                return _context22.abrupt(\"return\", _context22.sent);\n\n              case 8:\n                if (!(this.cdps.includes(cdpId) && this.proxyAddress)) {\n                  _context22.next = 14;\n                  break;\n                }\n\n                _context22.next = 11;\n                return this.maker.getCdp(cdpId, this.proxyAddress);\n\n              case 11:\n                return _context22.abrupt(\"return\", _context22.sent);\n\n              case 14:\n                if (!this.proxyAddress) {\n                  _context22.next = 18;\n                  break;\n                }\n\n                _context22.next = 17;\n                return this.maker.getCdp(cdpId, this.proxyAddress);\n\n              case 17:\n                return _context22.abrupt(\"return\", _context22.sent);\n\n              case 18:\n                _context22.next = 20;\n                return this.maker.getCdp(cdpId, false);\n\n              case 20:\n                return _context22.abrupt(\"return\", _context22.sent);\n\n              case 21:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee21, this);\n      }));\n\n      function getMakerCdp(_x5) {\n        return _getMakerCdp.apply(this, arguments);\n      }\n\n      return getMakerCdp;\n    }(),\n    buildProxy: function () {\n      var _buildProxy = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee22() {\n        return regeneratorRuntime.wrap(function _callee22$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                _context23.next = 2;\n                return this.getProxy();\n\n              case 2:\n                this.proxyAddress = _context23.sent;\n\n                if (this.proxyAddress) {\n                  _context23.next = 10;\n                  break;\n                }\n\n                _context23.next = 6;\n                return this._proxyService.build();\n\n              case 6:\n                _context23.next = 8;\n                return this._proxyService.currentProxy();\n\n              case 8:\n                this.proxyAddress = _context23.sent;\n                return _context23.abrupt(\"return\", this.proxyAddress);\n\n              case 10:\n                _context23.next = 12;\n                return this._proxyService.currentProxy();\n\n              case 12:\n                this.proxyAddress = _context23.sent;\n                return _context23.abrupt(\"return\", this.proxyAddress);\n\n              case 14:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee22, this);\n      }));\n\n      function buildProxy() {\n        return _buildProxy.apply(this, arguments);\n      }\n\n      return buildProxy;\n    }(),\n    migrateCdp: function () {\n      var _migrateCdp = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee23(cdpId) {\n        var currentProxy;\n        return regeneratorRuntime.wrap(function _callee23$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                _context24.next = 2;\n                return this.getProxy();\n\n              case 2:\n                currentProxy = _context24.sent;\n\n                if (!currentProxy) {\n                  _context24.next = 6;\n                  break;\n                }\n\n                _context24.next = 6;\n                return this._cdpService.give(cdpId, currentProxy);\n\n              case 6:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee23, this);\n      }));\n\n      function migrateCdp(_x6) {\n        return _migrateCdp.apply(this, arguments);\n      }\n\n      return migrateCdp;\n    }(),\n    // Calculations\n    minEth: function minEth() {\n      if (this.wethToPethRatio) {\n        return toBigNumber(this.pethMin).times(this.wethToPethRatio);\n      }\n\n      return '--';\n    },\n    toUSD: function toUSD(eth) {\n      if (eth === undefined || eth === null) return toBigNumber(0);\n      return this.ethPrice.times(toBigNumber(eth));\n    },\n    toPeth: function toPeth(eth) {\n      if (!toBigNumber(eth).eq(0)) {\n        return toBigNumber(eth).div(this.wethToPethRatio);\n      }\n\n      return toBigNumber(0);\n    }\n  }\n};",{"version":3,"sources":["MakerDai.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container-maker\">\n    <deposit-modal\n      ref=\"deposit\"\n      :values=\"activeValues\"\n      :calc-collat-ratio-dai-chg=\"calcCollatRatioDaiChg\"\n      :calc-collat-ratio-eth-chg=\"calcCollatRatioEthChg\"\n      :calc-liquidation-price-eth-chg=\"calcLiquidationPriceEthChg\"\n      :calc-liquidation-price-dai-chg=\"calcLiquidationPriceDaiChg\"\n      :tokens-with-balance=\"tokensWithBalance\"\n      @lockEth=\"lockEth\"\n    ></deposit-modal>\n    <generate-modal\n      ref=\"generate\"\n      :values=\"activeValues\"\n      :calc-collat-ratio-dai-chg=\"calcCollatRatioDaiChg\"\n      :calc-collat-ratio-eth-chg=\"calcCollatRatioEthChg\"\n      :calc-liquidation-price-eth-chg=\"calcLiquidationPriceEthChg\"\n      :calc-liquidation-price-dai-chg=\"calcLiquidationPriceDaiChg\"\n      :tokens-with-balance=\"tokensWithBalance\"\n      @drawDai=\"drawDai\"\n    ></generate-modal>\n    <withdraw-modal\n      ref=\"withdraw\"\n      :values=\"activeValues\"\n      :calc-collat-ratio-dai-chg=\"calcCollatRatioDaiChg\"\n      :calc-collat-ratio-eth-chg=\"calcCollatRatioEthChg\"\n      :calc-liquidation-price-eth-chg=\"calcLiquidationPriceEthChg\"\n      :calc-liquidation-price-dai-chg=\"calcLiquidationPriceDaiChg\"\n      :tokens-with-balance=\"tokensWithBalance\"\n      @approveDai=\"approveDai\"\n      @approveMkr=\"approveMkr\"\n      @freeEth=\"freeEth\"\n    ></withdraw-modal>\n    <payback-modal\n      ref=\"payback\"\n      :values=\"activeValues\"\n      :calc-collat-ratio-dai-chg=\"calcCollatRatioDaiChg\"\n      :calc-collat-ratio-eth-chg=\"calcCollatRatioEthChg\"\n      :calc-liquidation-price-eth-chg=\"calcLiquidationPriceEthChg\"\n      :calc-liquidation-price-dai-chg=\"calcLiquidationPriceDaiChg\"\n      :tokens-with-balance=\"tokensWithBalance\"\n      @approveDai=\"approveDai\"\n      @approveMkr=\"approveMkr\"\n      @wipeDai=\"wipeDai\"\n    ></payback-modal>\n    <close-cdp-modal\n      ref=\"closeCdp\"\n      :values=\"activeValues\"\n      :calc-collat-ratio-dai-chg=\"calcCollatRatioDaiChg\"\n      :calc-collat-ratio-eth-chg=\"calcCollatRatioEthChg\"\n      :calc-liquidation-price-eth-chg=\"calcLiquidationPriceEthChg\"\n      :calc-liquidation-price-dai-chg=\"calcLiquidationPriceDaiChg\"\n      :tokens-with-balance=\"tokensWithBalance\"\n      @approveDai=\"approveDai\"\n      @approveMkr=\"approveMkr\"\n      @closeCdp=\"closeCdp\"\n    >\n    </close-cdp-modal>\n    <move-cdp-modal\n      ref=\"moveCdp\"\n      :values=\"activeValues\"\n      :calc-collat-ratio-dai-chg=\"calcCollatRatioDaiChg\"\n      :calc-collat-ratio-eth-chg=\"calcCollatRatioEthChg\"\n      :calc-liquidation-price-eth-chg=\"calcLiquidationPriceEthChg\"\n      :calc-liquidation-price-dai-chg=\"calcLiquidationPriceDaiChg\"\n      :dest-address-has-proxy=\"destAddressHasProxy\"\n      :dest-address-proxy=\"destAddressProxy\"\n      :tokens-with-balance=\"tokensWithBalance\"\n      @moveCdp=\"moveCdp\"\n      @checkForProxy=\"checkIfDestAddressHasProxy\"\n    >\n    </move-cdp-modal>\n    <back-button :path=\"'/interface/dapps/'\">\n      <div class=\"back-bar-container\">\n        <div v-if=\"showMoveOrClose\" class=\"header-buttons-container\">\n          <div class=\"inner-container\">\n            <button class=\"move-btn\" @click=\"showMove\">\n              <h4>{{ $t('dappsMaker.moveTitle') }}</h4>\n            </button>\n            <div v-if=\"!((!hasProxy && !onCreate) || showCdpMigrateButtons)\">\n              <button class=\"close-btn\" @click=\"showClose\">\n                <h4>{{ $t('dappsMaker.closeTitle') }}</h4>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </back-button>\n    <div v-if=\"makerActive\" class=\"buttons-container\">\n      <div v-if=\"showCreateProxy\">\n        <div class=\"dapps-button\" @click=\"buildProxy\">\n          <h4>{{ $t('dappsMaker.createProxy') }}</h4>\n        </div>\n      </div>\n      <div v-if=\"showCreateProxy\" class=\"proxy-container\">\n        {{ $t('dappsMaker.proxyInstructions') }}\n      </div>\n      <div v-if=\"showCdpMigrateButtons\">\n        <div v-for=\"(value, idx) in cdpsWithoutProxy\" :key=\"idx + value\">\n          <div class=\"dapps-button\">\n            <div @click=\"migrateCdpExternal(value)\">\n              <h4>\n                {{ $t('dappsMaker.migrateCdp', { value: value }) }}\n              </h4>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div v-if=\"showCdpMigrateButtons\" class=\"proxy-container\">\n        {{ $t('dappsMaker.migrateInstructions') }}\n      </div>\n    </div>\n    <div v-show=\"makerActive\" class=\"buttons-container\">\n      <div v-if=\"showCreateProxy && cdpsWithoutProxy.length > 1\">\n        <div v-for=\"(value, idx) in cdpsWithoutProxy\" :key=\"idx + value\">\n          <div\n            :class=\"[\n              'dapps-button',\n              activeValues.cdpId === value ? 'active' : ''\n            ]\"\n          >\n            <div @click=\"openMigrate(value)\">\n              <h4>CDP #{{ value }}</h4>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div v-show=\"makerActive && listCdps\" class=\"buttons-container\">\n      <div v-for=\"(value, idx) in cdps\" :key=\"idx + value\">\n        <div\n          :class=\"[\n            'dapps-button',\n            activeValues.cdpId === value ? 'active' : ''\n          ]\"\n        >\n          <div @click=\"openManage(value)\">\n            <h4>CDP #{{ value }}</h4>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <router-view\n      :build-empty=\"buildEmpty\"\n      :maker-active=\"makerActive\"\n      :eth-price=\"ethPrice\"\n      :peth-price=\"pethPrice\"\n      :peth-min=\"pethMin\"\n      :weth-to-peth-ratio=\"wethToPethRatio\"\n      :liquidation-penalty=\"liquidationPenalty\"\n      :stability-fee=\"stabilityFee\"\n      :liquidation-ratio=\"liquidationRatio\"\n      :price-service=\"priceService\"\n      :cdp-service=\"cdpService\"\n      :proxy-service=\"proxyService\"\n      :cdps=\"cdps\"\n      :cdp-details-loaded=\"cdpDetailsLoaded\"\n      :tokens-with-balance=\"tokensWithBalance\"\n      :migration-in-progress=\"migrationInProgress\"\n      :open-close-modal=\"openCloseModal\"\n      :open-move-modal=\"openMoveModal\"\n      :values-updated=\"valuesUpdated\"\n      :values=\"activeValues\"\n      :get-cdp=\"getCdp\"\n      :has-cdp=\"hasCdp\"\n      :loading-message1=\"$t('dappsMaker.initialLoadingOne')\"\n      :loading-message2=\"$t('dappsMaker.initialLoadingTwo')\"\n      @activeCdpId=\"setupCdpManage\"\n      @cdpOpened=\"addCdp\"\n      @cdpClosed=\"removeCdp\"\n      @modalHidden=\"modalHidden\"\n      @managerUpdate=\"doUpdate\"\n      @showWithdraw=\"showWithdraw\"\n      @showPayback=\"showPayback\"\n      @showGenerate=\"showGenerate\"\n      @showDeposit=\"showDeposit\"\n      @migrateCdp=\"migrateCdpExternal\"\n    >\n    </router-view>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport BackButton from '@/layouts/InterfaceLayout/components/BackButton';\nimport InterfaceContainerTitle from '@/layouts/InterfaceLayout/components/InterfaceContainerTitle';\nimport InterfaceBottomText from '@/components/InterfaceBottomText';\nimport Blockie from '@/components/Blockie';\nimport CloseCdpModal from './components/CloseCdpModal';\nimport MoveCdpModal from './components/MoveCdpModal';\nimport GenerateModal from './components/GenerateModal';\nimport DepositModal from './components/DepositModal';\nimport WithdrawModal from './components/WithdrawModal';\nimport PaybackModal from './components/PaybackModal';\nimport BigNumber from 'bignumber.js';\nimport Maker from '@makerdao/dai';\nimport { Toast } from '@/helpers';\nimport MakerCDP from './MakerCDP';\nimport { toChecksumAddress } from '@/helpers/addressUtils';\n\nimport MewPlugin from 'mew-maker-plugin';\nconst { MKR, DAI } = Maker;\n\nconst toBigNumber = num => {\n  return new BigNumber(num);\n};\n\nconst bnOver = (one, two, three) => {\n  return toBigNumber(one)\n    .times(toBigNumber(two))\n    .div(toBigNumber(three));\n};\n\nexport default {\n  components: {\n    'interface-container-title': InterfaceContainerTitle,\n    'interface-bottom-text': InterfaceBottomText,\n    'generate-modal': GenerateModal,\n    'deposit-modal': DepositModal,\n    'withdraw-modal': WithdrawModal,\n    'payback-modal': PaybackModal,\n    blockie: Blockie,\n    'back-button': BackButton,\n    'close-cdp-modal': CloseCdpModal,\n    'move-cdp-modal': MoveCdpModal\n  },\n  props: {\n    tokensWithBalance: {\n      type: Array,\n      default: function() {\n        return [];\n      }\n    },\n    getBalance: {\n      type: Function,\n      default: function() {}\n    },\n    highestGas: {\n      type: String,\n      default: '0'\n    }\n  },\n  data() {\n    return {\n      destAddressProxy: '',\n      destAddressHasProxy: false,\n      afterUpdate: [],\n      allCdpIds: [],\n      activeCdp: {},\n      activeValues: {\n        maxPethDraw: toBigNumber(0),\n        maxEthDraw: toBigNumber(0),\n        maxUsdDraw: toBigNumber(0),\n        ethCollateral: toBigNumber(0),\n        pethCollateral: toBigNumber(0),\n        usdCollateral: toBigNumber(0),\n        debtValue: toBigNumber(0),\n        maxDai: toBigNumber(0),\n        collateralRatio: toBigNumber(0),\n        minEth: toBigNumber(0),\n        cdpId: '--'\n      },\n      availableCdps: {},\n      cdps: [],\n      cdpsWithoutProxy: [],\n      cdpService: {},\n      cdpDetailsLoaded: false,\n      currentProxy: null,\n      currentCdpId: '',\n      creatingCdp: false,\n      daiPrice: 0,\n      daiQty: 0,\n      ethPrice: toBigNumber(0),\n      ethQty: 0,\n      liquidationRatio: toBigNumber(0),\n      liquidationPenalty: toBigNumber(0),\n      makerActive: false,\n      makerCdp: {},\n      makerManager: {},\n      migrationInProgress: {},\n      openCloseModal: false,\n      openMoveModal: false,\n      proxyService: {},\n      proxyAddress: null,\n      pethPrice: toBigNumber(0),\n      pethMin: toBigNumber(0),\n      priceService: {},\n      priceFloor: 0,\n      stabilityFee: toBigNumber(0),\n      sysVars: {},\n      sysServices: {},\n      targetPrice: 0,\n      valuesUpdated: 0,\n      wethToPethRatio: toBigNumber(0)\n    };\n  },\n  computed: {\n    ...mapState(['account', 'gasPrice', 'web3', 'network', 'ens']),\n    maxDaiDraw() {\n      if (this.ethQty <= 0) return 0;\n      return bnOver(this.ethPrice, this.ethQty, this.liquidationRatio);\n    },\n    minEthDeposit() {\n      if (this.daiQty <= 0) return 0;\n      return bnOver(this.liquidationRatio, this.daiQty, this.ethPrice);\n    },\n    showMoveOrClose() {\n      return this.$route.name === 'manage' || this.$route.name === 'migrate';\n    },\n    showManage() {\n      return (\n        this.listCdps ||\n        (this.cdps.length >= 1 && this.cdpsWithoutProxy.length >= 1)\n      );\n    },\n    showRefresh() {\n      return this.cdps.length > 0 || this.cdpsWithoutProxy.length > 0;\n    },\n    onCreate() {\n      return this.$route.name === 'create';\n    },\n    showCreateProxy() {\n      if (this.showCdpMigrateButtons) {\n        return false;\n      }\n      return !this.hasProxy && !this.onCreate;\n    },\n    showCdpMigrateButtons() {\n      return this.hasProxy && this.cdpsWithoutProxy.length >= 1;\n    },\n    listCdps() {\n      return this.cdps.length > 1 || this.cdpsWithoutProxy.length > 1;\n    },\n    hasProxy() {\n      return this.proxyAddress !== null;\n    },\n    currentProxyAddress() {\n      return this.proxyAddress;\n    }\n  },\n  watch: {\n    ['account.address']() {\n      this.makerActive = false;\n      this.setup();\n    }\n  },\n  destroyed() {\n    this.priceService = {};\n    this.cdpService = {};\n    this.proxyService = {};\n    this.availableCdps = {};\n    this.activeCdp = {};\n    this.makerCdp = {};\n    this.sysVars = {};\n    this.sysServices = {};\n  },\n  async mounted() {\n    await this.setup();\n  },\n  methods: {\n    modalHidden() {\n      this.openCloseModal = false;\n      this.openMoveModal = false;\n    },\n    gotoHome() {\n      this.$router.push({\n        name: 'Maker'\n      });\n    },\n    gotoCreate() {\n      if (this.$route.path.includes('maker-dai')) {\n        this.activeValues = this.systemValues;\n        this.$router.push({\n          name: 'create'\n        });\n      }\n    },\n    goToManage() {\n      if (this.$route.path.includes('maker-dai')) {\n        if (this.cdps.length === 1) {\n          this.$router.push({\n            name: 'manage',\n            params: {\n              cdpId: this.cdps[0]\n            }\n          });\n        } else if (this.cdpsWithoutProxy.length === 1) {\n          this.$router.push({\n            name: 'migrate',\n            params: {\n              cdpId: this.cdpsWithoutProxy[0]\n            }\n          });\n        } else if (this.showManage) {\n          // The listing screen may not work and can be removed\n          this.$router.push({\n            name: 'select'\n          });\n        } else {\n          this.gotoCreate();\n        }\n      }\n    },\n    openManage(cdpId) {\n      if (this.$route.path.includes('maker-dai')) {\n        this.setupCdpManage(cdpId);\n        this.$router.push({\n          name: 'manage',\n          params: {\n            cdpId: cdpId\n          }\n        });\n      }\n    },\n    openMigrate(cdpId) {\n      if (this.$route.path.includes('maker-dai')) {\n        this.setupCdpManage(cdpId);\n        this.$router.push({\n          name: 'migrate',\n          params: {\n            cdpId: cdpId\n          }\n        });\n      }\n    },\n    showDeposit() {\n      this.$refs.deposit.$refs.modal.show();\n    },\n    showWithdraw() {\n      this.$refs.withdraw.$refs.modal.show();\n    },\n    showPayback() {\n      this.$refs.payback.$refs.modal.show();\n    },\n    showGenerate() {\n      this.$refs.generate.$refs.modal.show();\n    },\n    showClose() {\n      this.$refs.closeCdp.$refs.modal.$on('hidden', () => {\n        this.$emit('modalHidden');\n      });\n      this.$refs.closeCdp.$refs.modal.show();\n    },\n    showMove() {\n      this.$refs.moveCdp.$refs.modal.$on('hidden', () => {\n        this.$emit('modalHidden');\n      });\n      this.destAddressHasProxy = false;\n      this.$refs.moveCdp.$refs.modal.show();\n    },\n    async setup() {\n      this.activeCdps = {};\n      this.currentCdp = {};\n      const web3 = this.web3;\n      const _self = this;\n      this.gotoHome();\n      const MewMakerPlugin = MewPlugin(\n        web3,\n        _self.account.address,\n        async () => {\n          if (_self.$route.path.includes('maker-dai')) {\n            await _self.doUpdate();\n          }\n        }\n      );\n      this.maker = await Maker.create('inject', {\n        provider: { inject: web3.currentProvider },\n        plugins: [MewMakerPlugin],\n        accounts: {\n          myLedger1: { type: 'mew' }\n        }\n      });\n\n      await this.maker.authenticate();\n      this._priceService = this.maker.service('price');\n      this._cdpService = await this.maker.service('cdp');\n      this._proxyService = await this.maker.service('proxy');\n      this._tokenService = await this.maker.service('token');\n\n      this.pethMin = toBigNumber(0.005);\n\n      this.ethPrice = toBigNumber(\n        (await this._priceService.getEthPrice()).toNumber()\n      );\n\n      this.pethPrice = toBigNumber(\n        (await this._priceService.getPethPrice()).toNumber()\n      );\n\n      this._targetPrice = toBigNumber(\n        (await this._priceService.getPethPrice()).toNumber()\n      );\n\n      this.liquidationRatio = toBigNumber(\n        await this._cdpService.getLiquidationRatio()\n      );\n      this.liquidationPenalty = toBigNumber(\n        await this._cdpService.getLiquidationPenalty()\n      );\n      this.stabilityFee = toBigNumber(\n        await this._cdpService.getAnnualGovernanceFee()\n      );\n\n      this.wethToPethRatio = toBigNumber(\n        await this._priceService.getWethToPethRatio()\n      );\n      this.proxyAddress = await this._proxyService.currentProxy();\n\n      this.daiToken = this._tokenService.getToken(DAI);\n      this.daiBalance = (await this.daiToken.balance()).toBigNumber();\n      this.mkrToken = this._tokenService.getToken(MKR);\n      this.mkrBalance = (await this.mkrToken.balance()).toBigNumber();\n\n      const minEth = toBigNumber(this.pethMin).times(this.wethToPethRatio);\n      this.systemValues = {\n        stabilityFee: this.stabilityFee,\n        minEth: minEth,\n        liquidationRatio: this.liquidationRatio,\n        wethToPethRatio: this.wethToPethRatio,\n        liquidationPenalty: this.liquidationPenalty,\n        targetPrice: this._targetPrice,\n        pethPrice: this.pethPrice\n      };\n\n      await this.checkAllowances();\n\n      const { withProxy, withoutProxy } = await this.locateCdps();\n      this.cdps = withProxy;\n      this.cdpsWithoutProxy = withoutProxy;\n\n      if (this.cdps.length > 0 || this.cdpsWithoutProxy.length > 0) {\n        await this.loadCdpDetails();\n      }\n\n      this.currentProxy = this.getProxy();\n      if (this.cdps.length > 0 || this.cdpsWithoutProxy.length > 0) {\n        this.cdpDetailsLoaded = true;\n        this.makerActive = true;\n        if (\n          this.$route.name !== 'create' &&\n          this.$route.path.includes('maker-dai')\n        ) {\n          this.goToManage();\n        }\n      } else {\n        this.gotoCreate();\n      }\n    },\n\n    async buildEmpty() {\n      return await this.buildCdpObject(null);\n    },\n    addCdp() {\n      this.creatingCdp = true;\n    },\n    removeCdp(vals) {\n      try {\n        delete this.availableCdps[vals.id];\n        Toast.responseHandler('CDP Closed', Toast.INFO);\n      } catch (e) {\n        // eslint-disable-next-line\n        console.error(e);\n      }\n    },\n    async migrateCdpExternal(cdpId) {\n      this.afterUpdate.push(this.goToManage);\n      await this.migrateCdp(cdpId);\n    },\n    async refreshExternal() {\n      await this.doUpdate();\n    },\n    async refresh() {\n      await this.doUpdate();\n    },\n    async doUpdate() {\n      this.proxyAddress = await this.getProxy();\n      let afterClose = false;\n      const afterOpen = this.$route.name === 'create';\n      await this.updateActiveCdp();\n      for (const idProp in this.activeCdps) {\n        if (this.activeCdps[idProp].needsUpdate) {\n          if (this.activeCdps[idProp].closing) {\n            afterClose = true;\n            delete this.activeCdps[idProp];\n            this.cdps = this.cdps.filter(item => item !== idProp);\n            this.cdpsWithoutProxy = this.cdpsWithoutProxy.filter(\n              item => item !== idProp\n            );\n          } else if (this.activeCdps[idProp].opening) {\n            await this.activeCdps[idProp].updateValues();\n          } else {\n            this.activeCdps[idProp] = await this.activeCdps[idProp].update();\n          }\n        }\n        if (idProp === this.currentCdpId) {\n          await this.currentCdp.update();\n          await this.setupCdpManage(this.currentCdpId);\n        }\n      }\n\n      this.daiBalance = (await this.daiToken.balance()).toBigNumber();\n      this.mkrBalance = (await this.mkrToken.balance()).toBigNumber();\n      await this.checkAllowances();\n\n      if (!Object.keys(this.activeCdps).includes(this.currentCdpId)) {\n        await this.loadCdpDetails();\n        await this.setupCdpManage(this.currentCdpId);\n      } else {\n        await this.setupCdpManage(this.currentCdpId);\n      }\n\n      const runAfterUpdate = () => {\n        if (this.afterUpdate.length > 0) {\n          const fn = this.afterUpdate.pop();\n          fn();\n          runAfterUpdate();\n        }\n      };\n      runAfterUpdate();\n      if (afterClose || afterOpen || this.creatingCdp) {\n        if (this.cdps.length > 0 || this.cdpsWithoutProxy.length > 0) {\n          this.goToManage();\n        } else {\n          this.gotoCreate();\n        }\n      }\n      if (this.creatingCdp) {\n        this.creatingCdp = false;\n        await this.updateActiveCdp();\n        Toast.responseHandler('CDP Created', Toast.INFO);\n      } else {\n        this.valuesUpdated++;\n        Toast.responseHandler('CDP Updated', Toast.INFO);\n      }\n    },\n\n    async checkAllowances() {\n      if (this.proxyAddress) {\n        this._proxyAllowanceDai = (await this.daiToken.allowance(\n          this.account.address,\n          this.proxyAddress\n        )).toBigNumber();\n\n        this._proxyAllowanceMkr = (await this.mkrToken.allowance(\n          this.account.address,\n          this.proxyAddress\n        )).toBigNumber();\n      }\n    },\n    async setupCdpManage(cdpId) {\n      if (!this.allCdpIds.includes(cdpId) && this.allCdpIds.length > 0) {\n        cdpId = this.allCdpIds[0];\n      }\n      if (this.allCdpIds.length === 0) {\n        this.activeValues = this.systemValues;\n      } else {\n        this.currentCdpId = cdpId;\n        this.activeValues = await this.getValuesForManage(cdpId);\n      }\n    },\n    async getValuesForManage(cdpId) {\n      const currentCdp = this.activeCdps[cdpId];\n      this.currentCdp = currentCdp;\n      const _proxyAllowanceDai = this._proxyAllowanceDai;\n      const _proxyAllowanceMkr = this._proxyAllowanceMkr;\n      const toPeth = this.toPeth;\n      const systemValues = this.systemValues;\n      return {\n        ...systemValues,\n        cdpId: cdpId,\n        maxPethDraw: currentCdp.maxPethDraw,\n        maxEthDraw: currentCdp.maxEthDraw,\n        maxUsdDraw: currentCdp.maxUsdDraw,\n        ethCollateral: currentCdp.ethCollateral,\n        pethCollateral: currentCdp.pethCollateral,\n        usdCollateral: currentCdp.usdCollateral,\n        debtValue: currentCdp.debtValue,\n        maxDai: currentCdp.maxDai,\n        collateralRatio: currentCdp.collatRatio,\n        liquidationPrice: currentCdp.liquidationPrice,\n        minEth: currentCdp.minEth,\n        isSafe: false,\n        governanceFeeOwed: currentCdp.governanceFeeOwed,\n        ethCollateralNum: currentCdp.ethCollateralNum,\n        toPeth: toPeth,\n        proxyAllowanceDai: _proxyAllowanceDai,\n        proxyAllowanceMkr: _proxyAllowanceMkr,\n        zeroDebt: currentCdp.zeroDebt\n      };\n    },\n    async locateCdps() {\n      this.cdpsWithoutProxy = [];\n      this.cdpsWithoutProxy = await this.locateCdpsWithoutProxy();\n      this.cdps = [];\n      this.cdps = await this.locateCdpsProxy();\n\n      this.allCdpIds = [...this.cdpsWithoutProxy, ...this.cdps];\n\n      return { withProxy: this.cdps, withoutProxy: this.cdpsWithoutProxy };\n    },\n\n    async locateCdpsWithoutProxy() {\n      const directCdps = await this._cdpService.getCdpIds(this.account.address);\n      const directCdpsCheckSum = await this._cdpService.getCdpIds(\n        toChecksumAddress(this.account.address)\n      );\n      return directCdps.concat(directCdpsCheckSum);\n    },\n\n    async locateCdpsProxy() {\n      this.proxyAddress = await this.getProxy();\n      return await this._cdpService.getCdpIds(this.proxyAddress);\n    },\n    async updateActiveCdp() {\n      const currentCdpIds = Object.keys(this.activeCdps);\n      await this.locateCdps();\n\n      const newCdps = this.cdps.filter(\n        item => !Object.keys(this.activeCdps).includes(item.toString())\n      );\n\n      const newCdpsWithoutProxy = this.cdpsWithoutProxy.filter(\n        item => !Object.keys(this.activeCdps).includes(item.toString())\n      );\n\n      const removedCdps = currentCdpIds.filter(\n        item =>\n          !(\n            this.cdps.includes(item.toString()) ||\n            this.cdpsWithoutProxy.includes(item.toString())\n          )\n      );\n\n      if (removedCdps.length > 0) {\n        removedCdps.forEach(item => delete this.activeCdps[item]);\n      }\n\n      if (newCdps.length > 0) {\n        for (let i = 0; i < newCdps.length; i++) {\n          this.activeCdps[newCdps[i]] = await this.buildCdpObject(newCdps[i]);\n        }\n      }\n\n      if (newCdpsWithoutProxy.length > 0) {\n        for (let i = 0; i < newCdpsWithoutProxy.length; i++) {\n          this.activeCdps[newCdpsWithoutProxy[i]] = await this.buildCdpObject(\n            newCdpsWithoutProxy[i],\n            { noProxy: true }\n          );\n        }\n      }\n\n      if (this.cdps.length === 0 && this.cdpsWithoutProxy.length === 0) {\n        this.gotoCreate();\n      }\n    },\n    async loadCdpDetails() {\n      for (let i = 0; i < this.cdps.length; i++) {\n        this.activeCdps[this.cdps[i]] = await this.buildCdpObject(this.cdps[i]);\n      }\n      for (let i = 0; i < this.cdpsWithoutProxy.length; i++) {\n        this.activeCdps[this.cdpsWithoutProxy[i]] = await this.buildCdpObject(\n          this.cdpsWithoutProxy[i],\n          {\n            noProxy: true\n          }\n        );\n      }\n    },\n    async buildCdpObject(cdpId, options = {}) {\n      const sysVars = {\n        ...options,\n        _proxyAddress: this.proxyAddress,\n        liquidationPenalty: this.liquidationPenalty,\n        stabilityFee: this.stabilityFee,\n        ethPrice: this.ethPrice,\n        _pethPrice: this.pethPrice,\n        wethToPethRatio: this.wethToPethRatio,\n        _targetPrice: this._targetPrice,\n        liquidationRatio: this.liquidationRatio,\n        proxyAllowanceDai: this.proxyAllowanceDai,\n        proxyAllowanceMkr: this.proxyAllowanceMkr,\n        _daiToken: this._daiToken,\n        daiBalance: this.daiBalance,\n        _mkrToken: this._mkrToken,\n        mkrBalance: this.mkrBalance,\n        minEth: this.minEth,\n        pethMin: this.pethMin\n      };\n\n      if (this.cdpsWithoutProxy.includes(cdpId)) {\n        this.cdp = await this.getMakerCdp(cdpId, false);\n      } else if (this.cdps.includes(cdpId)) {\n        this.cdp = await this.getMakerCdp(cdpId, this.proxyAddress);\n      } else {\n        this.cdp = await this.getMakerCdp(cdpId, false);\n      }\n\n      const services = {\n        _proxyService: this._proxyService,\n        priceService: this.priceService,\n        _cdpService: this._cdpService,\n        doUpdate: this.doUpdate,\n        getProxy: this.getProxy,\n        hasProxy: this.hasProxy,\n        getCdp: this.getMakerCdp,\n        toPeth: this.toPeth,\n        toUSD: this.toUSD,\n        _proxyAddress: this.proxyAddress,\n        liquidationPenalty: this.liquidationPenalty,\n        stabilityFee: this.stabilityFee,\n        ethPrice: this.ethPrice,\n        _pethPrice: this.pethPrice,\n        wethToPethRatio: this.wethToPethRatio,\n        _targetPrice: this._targetPrice,\n        liquidationRatio: this.liquidationRatio,\n        proxyAllowanceDai: this.proxyAllowanceDai,\n        proxyAllowanceMkr: this.proxyAllowanceMkr,\n        _daiToken: this._daiToken,\n        daiBalance: this.daiBalance,\n        _mkrToken: this._mkrToken,\n        mkrBalance: this.mkrBalance,\n        minEth: this.minEth,\n        pethMin: this.pethMin\n      };\n\n      const makerCDP = new MakerCDP(cdpId, this.web3, services, sysVars);\n      if (cdpId) {\n        return await makerCDP.init(cdpId);\n      }\n      return makerCDP;\n    },\n\n    async getProxy() {\n      this.proxyAddress = await this._proxyService.currentProxy();\n      if (!this.proxyAddress) {\n        this.proxyAddress = await this._proxyService.getProxyAddress(\n          this.account.address\n        );\n        if (this.proxyAddress) this.noProxy = false;\n      }\n      return this.proxyAddress;\n    },\n\n    lockEth(val) {\n      this.currentCdp.lockEth(val);\n    },\n    wipeDai(val) {\n      this.currentCdp.wipeDai(val);\n    },\n    freeEth(val) {\n      if (val[1] === null) {\n        this.currentCdp.freeEth(val[0]);\n      } else {\n        this.currentCdp.freeEth(val[0], val[1]);\n      }\n    },\n    drawDai(val) {\n      if (val[1] === null) {\n        this.currentCdp.drawDai(val[0]);\n      } else {\n        this.currentCdp.drawDai(val[0], val[1]);\n      }\n    },\n    closeCdp() {\n      this.currentCdp.closeCdp();\n    },\n    checkIfDestAddressHasProxy(val) {\n      this.currentCdp\n        .checkIfDestAddressHasProxy(val)\n        .then(result => {\n          this.destAddressProxy = result;\n          this.destAddressHasProxy = result !== null;\n        })\n        .catch(err => {\n          throw err;\n        });\n    },\n    moveCdp(val) {\n      this.currentCdp.moveCdp(val);\n    },\n\n    calcCollatRatioDaiChg(daiQty) {\n      return toBigNumber(\n        this.currentCdp.calcCollatRatio(this.currentCdp.ethCollateral, daiQty)\n      );\n    },\n\n    calcCollatRatioEthChg(ethQty) {\n      return toBigNumber(\n        this.currentCdp.calcCollatRatio(ethQty, this.currentCdp.debtValue)\n      );\n    },\n\n    calcLiquidationPriceDaiChg(daiQty) {\n      return toBigNumber(\n        this.currentCdp.calcLiquidationPrice(\n          this.currentCdp.ethCollateral,\n          daiQty\n        )\n      );\n    },\n\n    calcLiquidationPriceEthChg(ethQty) {\n      return toBigNumber(\n        this.currentCdp.calcLiquidationPrice(ethQty, this.currentCdp.debtValue)\n      );\n    },\n    async approveDai() {\n      await this._tokenService\n        .getToken(DAI)\n        .approveUnlimited(this.proxyAddress);\n    },\n    async approveMkr() {\n      this._tokenService.getToken(MKR).approveUnlimited(this.proxyAddress);\n    },\n    hasCdp(cdpId) {\n      return Object.keys(this.activeCdps).includes(\n        toBigNumber(cdpId).toString()\n      );\n    },\n\n    getCdp(cdpId) {\n      return this.activeCdps[cdpId];\n    },\n\n    async getMakerCdp(cdpId) {\n      if (cdpId === null) return;\n      if (this.cdpsWithoutProxy.includes(cdpId)) {\n        return await this.maker.getCdp(cdpId, false);\n      } else if (this.cdps.includes(cdpId) && this.proxyAddress) {\n        return await this.maker.getCdp(cdpId, this.proxyAddress);\n      } else if (this.proxyAddress) {\n        return await this.maker.getCdp(cdpId, this.proxyAddress);\n      }\n      return await this.maker.getCdp(cdpId, false);\n    },\n\n    async buildProxy() {\n      this.proxyAddress = await this.getProxy();\n      if (!this.proxyAddress) {\n        await this._proxyService.build();\n        this.proxyAddress = await this._proxyService.currentProxy();\n        return this.proxyAddress;\n      }\n      this.proxyAddress = await this._proxyService.currentProxy();\n      return this.proxyAddress;\n    },\n\n    async migrateCdp(cdpId) {\n      const currentProxy = await this.getProxy();\n      if (currentProxy) {\n        await this._cdpService.give(cdpId, currentProxy);\n      }\n    },\n\n    // Calculations\n    minEth() {\n      if (this.wethToPethRatio) {\n        return toBigNumber(this.pethMin).times(this.wethToPethRatio);\n      }\n      return '--';\n    },\n    toUSD(eth) {\n      if (eth === undefined || eth === null) return toBigNumber(0);\n      return this.ethPrice.times(toBigNumber(eth));\n    },\n\n    toPeth(eth) {\n      if (!toBigNumber(eth).eq(0)) {\n        return toBigNumber(eth).div(this.wethToPethRatio);\n      }\n      return toBigNumber(0);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'MakerDai.scss';\n</style>\n"],"sourceRoot":"src/dapps/MakerDai"}]}