{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/eslint-loader/index.js??ref--13-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/directives/EnsResolver.js","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/directives/EnsResolver.js","mtime":1574664278286},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/thread-loader/dist/cjs.js","mtime":1574664277654},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js","mtime":1574664275010},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/eslint-loader/index.js","mtime":1574664275986}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport normalise from '@/helpers/normalise';\nimport { Misc } from '@/helpers';\nimport { toChecksumAddress } from '@/helpers/addressUtils';\nimport utils from 'web3-utils';\nvar EnsResolver = {\n  bind: function bind(el, binding, vnode) {\n    vnode.context.$watch(binding.value, function (e) {\n      var _this = vnode.context;\n      var errorPar = document.createElement('p');\n      errorPar.classList.add('resolver-error');\n      var ens = _this.$store.state.ens;\n\n      var checkDarklist = function checkDarklist(addr) {\n        var isDarklisted = Misc.isDarklisted(addr);\n\n        if (isDarklisted.error) {\n          removeElements();\n          _this.isValidAddress = false;\n          _this.hexAddress = '';\n          errorPar.innerText = isDarklisted.msg.length > 0 ? isDarklisted.msg : 'Address has been reported. Please make sure you are sending funds to the correct address.';\n          el.parentNode.parentNode.appendChild(errorPar);\n          return true;\n        }\n\n        return false;\n      };\n\n      var removeElements = function removeElements() {\n        var child = el.parentNode.parentNode.lastChild;\n        Object.keys(child.classList).forEach(function (item) {\n          if (child.classList[item] === 'resolver-error') {\n            vnode.elm.parentNode.parentNode.removeChild(child);\n          }\n        });\n      };\n\n      if (Misc.isValidENSorEtherAddress(e)) {\n        if (Misc.isValidETHAddress(e)) {\n          if (!checkDarklist(e)) {\n            _this.isValidAddress = true;\n            _this.hexAddress = toChecksumAddress(e);\n            removeElements();\n          }\n        } else {\n          if (_this.network.type.ens === '' || ens === null || ens === undefined) {\n            removeElements();\n            _this.isValidAddress = false;\n            _this.hexAddress = ''; // eslint-disable-next-line\n\n            errorPar.innerText = \"No \".concat(_this.network.type.name[0], \"NS resolver in this node\");\n            el.parentNode.parentNode.appendChild(errorPar);\n          } else {\n            ens.resolver(normalise(e)).addr().then(function (address) {\n              if (!checkDarklist(address)) {\n                removeElements();\n                _this.hexAddress = toChecksumAddress(address);\n                _this.isValidAddress = true;\n                errorPar.innerText = address;\n                vnode.elm.parentNode.parentNode.appendChild(errorPar);\n              }\n            }).catch(function () {\n              removeElements(); // eslint-disable-next-line\n\n              errorPar.innerText = \"\".concat(_this.network.type.name[0], \"NS name is invalid or not found\");\n              _this.isValidAddress = false;\n              _this.hexAddress = '';\n              vnode.elm.parentNode.parentNode.appendChild(errorPar);\n            });\n          }\n        }\n      } else {\n        _this.isValidAddress = false;\n        _this.hexAddress = '';\n        removeElements();\n\n        if (e.length > 0) {\n          if (e.length !== 42 || !utils.isHexStrict(e)) {\n            errorPar.innerText = 'Not a valid Ethereum address';\n          } else if (!utils.checkAddressChecksum(e)) {\n            errorPar.innerText = 'This address is not checksummed properly. Please copy the address exactly as shown.'; // 'Incorrect checksum: check address format on EthVM';\n          }\n        } else {\n          errorPar.innerText = '';\n        }\n\n        el.parentNode.parentNode.appendChild(errorPar);\n      }\n    });\n  }\n};\nexport default EnsResolver;",{"version":3,"sources":["/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/directives/EnsResolver.js"],"names":["normalise","Misc","toChecksumAddress","utils","EnsResolver","bind","el","binding","vnode","context","$watch","value","e","_this","errorPar","document","createElement","classList","add","ens","$store","state","checkDarklist","addr","isDarklisted","error","removeElements","isValidAddress","hexAddress","innerText","msg","length","parentNode","appendChild","child","lastChild","Object","keys","forEach","item","elm","removeChild","isValidENSorEtherAddress","isValidETHAddress","network","type","undefined","name","resolver","then","address","catch","isHexStrict","checkAddressChecksum"],"mappings":"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","sourcesContent":["import normalise from '@/helpers/normalise';\nimport { Misc } from '@/helpers';\nimport { toChecksumAddress } from '@/helpers/addressUtils';\nimport utils from 'web3-utils';\nconst EnsResolver = {\n  bind: function(el, binding, vnode) {\n    vnode.context.$watch(binding.value, function(e) {\n      const _this = vnode.context;\n      const errorPar = document.createElement('p');\n      errorPar.classList.add('resolver-error');\n      const ens = _this.$store.state.ens;\n      const checkDarklist = function(addr) {\n        const isDarklisted = Misc.isDarklisted(addr);\n        if (isDarklisted.error) {\n          removeElements();\n          _this.isValidAddress = false;\n          _this.hexAddress = '';\n          errorPar.innerText =\n            isDarklisted.msg.length > 0\n              ? isDarklisted.msg\n              : 'Address has been reported. Please make sure you are sending funds to the correct address.';\n          el.parentNode.parentNode.appendChild(errorPar);\n          return true;\n        }\n        return false;\n      };\n      const removeElements = function() {\n        const child = el.parentNode.parentNode.lastChild;\n        Object.keys(child.classList).forEach(item => {\n          if (child.classList[item] === 'resolver-error') {\n            vnode.elm.parentNode.parentNode.removeChild(child);\n          }\n        });\n      };\n      if (Misc.isValidENSorEtherAddress(e)) {\n        if (Misc.isValidETHAddress(e)) {\n          if (!checkDarklist(e)) {\n            _this.isValidAddress = true;\n            _this.hexAddress = toChecksumAddress(e);\n            removeElements();\n          }\n        } else {\n          if (\n            _this.network.type.ens === '' ||\n            ens === null ||\n            ens === undefined\n          ) {\n            removeElements();\n            _this.isValidAddress = false;\n            _this.hexAddress = '';\n            // eslint-disable-next-line\n            errorPar.innerText = `No ${\n              _this.network.type.name[0]\n            }NS resolver in this node`;\n            el.parentNode.parentNode.appendChild(errorPar);\n          } else {\n            ens\n              .resolver(normalise(e))\n              .addr()\n              .then(address => {\n                if (!checkDarklist(address)) {\n                  removeElements();\n                  _this.hexAddress = toChecksumAddress(address);\n                  _this.isValidAddress = true;\n                  errorPar.innerText = address;\n                  vnode.elm.parentNode.parentNode.appendChild(errorPar);\n                }\n              })\n              .catch(() => {\n                removeElements();\n                // eslint-disable-next-line\n                errorPar.innerText = `${\n                  _this.network.type.name[0]\n                }NS name is invalid or not found`;\n                _this.isValidAddress = false;\n                _this.hexAddress = '';\n                vnode.elm.parentNode.parentNode.appendChild(errorPar);\n              });\n          }\n        }\n      } else {\n        _this.isValidAddress = false;\n        _this.hexAddress = '';\n        removeElements();\n        if (e.length > 0) {\n          if (e.length !== 42 || !utils.isHexStrict(e)) {\n            errorPar.innerText = 'Not a valid Ethereum address';\n          } else if (!utils.checkAddressChecksum(e)) {\n            errorPar.innerText =\n              'This address is not checksummed properly. Please copy the address exactly as shown.';\n            // 'Incorrect checksum: check address format on EthVM';\n          }\n        } else {\n          errorPar.innerText = '';\n        }\n\n        el.parentNode.parentNode.appendChild(errorPar);\n      }\n    });\n  }\n};\n\nexport default EnsResolver;\n"]}]}