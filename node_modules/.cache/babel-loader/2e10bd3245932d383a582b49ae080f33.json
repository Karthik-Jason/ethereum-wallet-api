{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/layouts/AccessWalletLayout/components/LedgerAppModal/LedgerAppModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/layouts/AccessWalletLayout/components/LedgerAppModal/LedgerAppModal.vue","mtime":1574664278286},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js","mtime":1574664275010},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js","mtime":1574664277774}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport apps from '@/wallets/hardware/ledger/appPaths.js';\nimport cust from '@/assets/images/icons/network.svg';\nimport { Toast, pathHelpers } from '@/helpers';\nimport { LedgerWallet } from '@/wallets';\nimport { mapState } from 'vuex';\nimport { ethereum } from '@/wallets/bip44/paths';\nexport default {\n  props: {\n    networks: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    return {\n      apps: apps,\n      selectedApp: {\n        network: {\n          name_long: apps[0].network.name_long,\n          icon: apps[0].network.icon\n        },\n        paths: apps[0].paths\n      },\n      toggled: false,\n      selectedPath: apps[0].paths[0],\n      flipButton: false,\n      customLabel: '',\n      customPath: ''\n    };\n  },\n  computed: _objectSpread({\n    fieldsFilled: function fieldsFilled() {\n      var emptyApp = Object.keys(this.selectedApp).length;\n      return this.selected === '' && emptyApp === 0 && this.selectedPathText === 'Select Path' && this.selectedPath === '';\n    },\n    dropDownDefaultText: function dropDownDefaultText() {\n      return \"\".concat(this.selectedPath.label, \" - \").concat(this.selectedPath.path);\n    }\n  }, mapState(['customPaths'])),\n  watch: {\n    selectedApp: {\n      handler: function handler(newVal) {\n        this.selectedPath = newVal.paths[0];\n      },\n      deep: true\n    },\n    customPaths: function customPaths() {\n      this.setupCustomPaths();\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.setupCustomPaths();\n    this.$root.$on('bv::dropdown::show', function () {\n      _this.flipButton = true;\n    });\n    this.$root.$on('bv::dropdown::hide', function () {\n      _this.flipButton = false;\n    });\n  },\n  methods: {\n    remove: function remove(path, idx) {\n      var mappedPaths = this.selectedApp.paths.filter(function (item, itemIdx) {\n        if (itemIdx !== idx) return item;\n      });\n      this.$store.dispatch('removeCustomPath', path);\n      this.setupCustomPaths();\n      this.selectedApp.paths = mappedPaths;\n      this.selectedPath = this.selectedApp.paths.length > 1 ? this.selectedApp.paths[0] : apps[0].paths[0];\n      this.$refs.pathDropdown[0].closeDropdown();\n    },\n    setupCustomPaths: function setupCustomPaths() {\n      var _this2 = this;\n\n      var loc = apps.map(function (item) {\n        return item;\n      });\n      var customPathArr = Object.keys(this.customPaths);\n      var customApp = {\n        paths: [{\n          label: 'Ethereum (Trezor)',\n          path: ethereum.path,\n          default: true\n        }, {\n          label: 'Add Custom Paths',\n          path: 'custom',\n          default: true\n        }],\n        network: {\n          icon: cust,\n          name_long: 'Custom Paths',\n          name: 'Custom'\n        }\n      };\n      customPathArr.forEach(function (item) {\n        customApp.paths.unshift(_this2.customPaths[item]);\n      });\n      loc.push(customApp);\n      this.apps = loc;\n    },\n    addCustomPath: function addCustomPath() {\n      var _this3 = this;\n\n      var customPath = pathHelpers.checkCustomPath(this.customPath);\n\n      if (customPath) {\n        this.selectedPath = {\n          path: customPath,\n          label: this.customLabel\n        };\n        this.$store.dispatch('addCustomPath', {\n          label: this.customLabel,\n          path: customPath\n        }).then(function () {\n          _this3.setupCustomPaths();\n\n          _this3.selectedApp.paths.unshift(_this3.selectedPath);\n        });\n      } else {\n        Toast.responseHandler('Invalid Custom Path', Toast.ERROR);\n      }\n    },\n    cancel: function cancel() {\n      this.customLabel = '';\n      this.customPath = '';\n      this.selectedPath = this.selectedApp.paths.length > 1 ? this.selectedApp.paths[0] : apps[0].paths[0];\n    },\n    selectDapp: function selectDapp(app) {\n      this.selectedApp = app;\n    },\n    setPath: function setPath(path) {\n      this.selectedPath = path;\n    },\n    next: function next() {\n      var _this4 = this;\n\n      this.$refs.ledgerApp.hide();\n      LedgerWallet(this.selectedPath.path).then(function (_newWallet) {\n        _this4.$emit('hardwareWalletOpen', _newWallet);\n      }).catch(function (e) {\n        LedgerWallet.errorHandler(e);\n      });\n    },\n    reset: function reset() {\n      this.selectedApp = this.apps[0];\n      this.selectedPath = this.apps[0].paths[0];\n    }\n  }\n};",{"version":3,"sources":["LedgerAppModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuHA,OAAA,IAAA,MAAA,uCAAA;AACA,OAAA,IAAA,MAAA,mCAAA;AACA,SAAA,KAAA,EAAA,WAAA,QAAA,WAAA;AACA,SAAA,YAAA,QAAA,WAAA;AACA,SAAA,QAAA,QAAA,MAAA;AACA,SAAA,QAAA,QAAA,uBAAA;AACA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA;AACA,eAAA,EAAA;AACA;AAJA;AADA,GADA;AASA,EAAA,IATA,kBASA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,WAAA,EAAA;AACA,QAAA,OAAA,EAAA;AACA,UAAA,SAAA,EAAA,IAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA,SADA;AAEA,UAAA,IAAA,EAAA,IAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA;AAFA,SADA;AAKA,QAAA,KAAA,EAAA,IAAA,CAAA,CAAA,CAAA,CAAA;AALA,OAFA;AASA,MAAA,OAAA,EAAA,KATA;AAUA,MAAA,YAAA,EAAA,IAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAVA;AAWA,MAAA,UAAA,EAAA,KAXA;AAYA,MAAA,WAAA,EAAA,EAZA;AAaA,MAAA,UAAA,EAAA;AAbA,KAAA;AAeA,GAzBA;AA0BA,EAAA,QAAA;AACA,IAAA,YADA,0BACA;AACA,UAAA,QAAA,GAAA,MAAA,CAAA,IAAA,CAAA,KAAA,WAAA,EAAA,MAAA;AACA,aACA,KAAA,QAAA,KAAA,EAAA,IACA,QAAA,KAAA,CADA,IAEA,KAAA,gBAAA,KAAA,aAFA,IAGA,KAAA,YAAA,KAAA,EAJA;AAMA,KATA;AAUA,IAAA,mBAVA,iCAUA;AACA,uBAAA,KAAA,YAAA,CAAA,KAAA,gBAAA,KAAA,YAAA,CAAA,IAAA;AACA;AAZA,KAaA,QAAA,CAAA,CAAA,aAAA,CAAA,CAbA,CA1BA;AAyCA,EAAA,KAAA,EAAA;AACA,IAAA,WAAA,EAAA;AACA,MAAA,OAAA,EAAA,iBAAA,MAAA,EAAA;AACA,aAAA,YAAA,GAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,OAHA;AAIA,MAAA,IAAA,EAAA;AAJA,KADA;AAOA,IAAA,WAPA,yBAOA;AACA,WAAA,gBAAA;AACA;AATA,GAzCA;AAoDA,EAAA,OApDA,qBAoDA;AAAA;;AACA,SAAA,gBAAA;AACA,SAAA,KAAA,CAAA,GAAA,CAAA,oBAAA,EAAA,YAAA;AACA,MAAA,KAAA,CAAA,UAAA,GAAA,IAAA;AACA,KAFA;AAGA,SAAA,KAAA,CAAA,GAAA,CAAA,oBAAA,EAAA,YAAA;AACA,MAAA,KAAA,CAAA,UAAA,GAAA,KAAA;AACA,KAFA;AAGA,GA5DA;AA6DA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,kBACA,IADA,EACA,GADA,EACA;AACA,UAAA,WAAA,GAAA,KAAA,WAAA,CAAA,KAAA,CAAA,MAAA,CAAA,UAAA,IAAA,EAAA,OAAA,EAAA;AACA,YAAA,OAAA,KAAA,GAAA,EAAA,OAAA,IAAA;AACA,OAFA,CAAA;AAGA,WAAA,MAAA,CAAA,QAAA,CAAA,kBAAA,EAAA,IAAA;AACA,WAAA,gBAAA;AACA,WAAA,WAAA,CAAA,KAAA,GAAA,WAAA;AACA,WAAA,YAAA,GACA,KAAA,WAAA,CAAA,KAAA,CAAA,MAAA,GAAA,CAAA,GACA,KAAA,WAAA,CAAA,KAAA,CAAA,CAAA,CADA,GAEA,IAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAHA;AAIA,WAAA,KAAA,CAAA,YAAA,CAAA,CAAA,EAAA,aAAA;AACA,KAbA;AAcA,IAAA,gBAdA,8BAcA;AAAA;;AACA,UAAA,GAAA,GAAA,IAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AACA,eAAA,IAAA;AACA,OAFA,CAAA;AAGA,UAAA,aAAA,GAAA,MAAA,CAAA,IAAA,CAAA,KAAA,WAAA,CAAA;AACA,UAAA,SAAA,GAAA;AACA,QAAA,KAAA,EAAA,CACA;AACA,UAAA,KAAA,EAAA,mBADA;AAEA,UAAA,IAAA,EAAA,QAAA,CAAA,IAFA;AAGA,UAAA,OAAA,EAAA;AAHA,SADA,EAMA;AACA,UAAA,KAAA,EAAA,kBADA;AAEA,UAAA,IAAA,EAAA,QAFA;AAGA,UAAA,OAAA,EAAA;AAHA,SANA,CADA;AAaA,QAAA,OAAA,EAAA;AACA,UAAA,IAAA,EAAA,IADA;AAEA,UAAA,SAAA,EAAA,cAFA;AAGA,UAAA,IAAA,EAAA;AAHA;AAbA,OAAA;AAoBA,MAAA,aAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,QAAA,SAAA,CAAA,KAAA,CAAA,OAAA,CAAA,MAAA,CAAA,WAAA,CAAA,IAAA,CAAA;AACA,OAFA;AAIA,MAAA,GAAA,CAAA,IAAA,CAAA,SAAA;AAEA,WAAA,IAAA,GAAA,GAAA;AACA,KA9CA;AA+CA,IAAA,aA/CA,2BA+CA;AAAA;;AACA,UAAA,UAAA,GAAA,WAAA,CAAA,eAAA,CAAA,KAAA,UAAA,CAAA;;AACA,UAAA,UAAA,EAAA;AACA,aAAA,YAAA,GAAA;AACA,UAAA,IAAA,EAAA,UADA;AAEA,UAAA,KAAA,EAAA,KAAA;AAFA,SAAA;AAIA,aAAA,MAAA,CACA,QADA,CACA,eADA,EACA;AACA,UAAA,KAAA,EAAA,KAAA,WADA;AAEA,UAAA,IAAA,EAAA;AAFA,SADA,EAKA,IALA,CAKA,YAAA;AACA,UAAA,MAAA,CAAA,gBAAA;;AACA,UAAA,MAAA,CAAA,WAAA,CAAA,KAAA,CAAA,OAAA,CAAA,MAAA,CAAA,YAAA;AACA,SARA;AASA,OAdA,MAcA;AACA,QAAA,KAAA,CAAA,eAAA,CAAA,qBAAA,EAAA,KAAA,CAAA,KAAA;AACA;AACA,KAlEA;AAmEA,IAAA,MAnEA,oBAmEA;AACA,WAAA,WAAA,GAAA,EAAA;AACA,WAAA,UAAA,GAAA,EAAA;AACA,WAAA,YAAA,GACA,KAAA,WAAA,CAAA,KAAA,CAAA,MAAA,GAAA,CAAA,GACA,KAAA,WAAA,CAAA,KAAA,CAAA,CAAA,CADA,GAEA,IAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAHA;AAIA,KA1EA;AA2EA,IAAA,UA3EA,sBA2EA,GA3EA,EA2EA;AACA,WAAA,WAAA,GAAA,GAAA;AACA,KA7EA;AA8EA,IAAA,OA9EA,mBA8EA,IA9EA,EA8EA;AACA,WAAA,YAAA,GAAA,IAAA;AACA,KAhFA;AAiFA,IAAA,IAjFA,kBAiFA;AAAA;;AACA,WAAA,KAAA,CAAA,SAAA,CAAA,IAAA;AACA,MAAA,YAAA,CAAA,KAAA,YAAA,CAAA,IAAA,CAAA,CACA,IADA,CACA,UAAA,UAAA,EAAA;AACA,QAAA,MAAA,CAAA,KAAA,CAAA,oBAAA,EAAA,UAAA;AACA,OAHA,EAIA,KAJA,CAIA,UAAA,CAAA,EAAA;AACA,QAAA,YAAA,CAAA,YAAA,CAAA,CAAA;AACA,OANA;AAOA,KA1FA;AA2FA,IAAA,KA3FA,mBA2FA;AACA,WAAA,WAAA,GAAA,KAAA,IAAA,CAAA,CAAA,CAAA;AACA,WAAA,YAAA,GAAA,KAAA,IAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AACA;AA9FA;AA7DA,CAAA","sourcesContent":["<template>\n  <div>\n    <b-modal\n      ref=\"ledgerApp\"\n      title=\"Choose the App\"\n      hide-footer\n      class=\"bootstrap-modal\"\n      centered\n      static\n      lazy\n      @hidden=\"reset\"\n    >\n      <div class=\"ledger-app-selection-container\">\n        <h4>Please choose the App you have opened in Ledger</h4>\n        <div class=\"ledger-app-info\">\n          <div class=\"selected-app-icon\">\n            <img :src=\"selectedApp.network.icon\" alt />\n          </div>\n          <div class=\"toggle-apps\" @click=\"toggled = !toggled\">\n            <div>\n              <h2>{{ selectedApp.network.name_long }}</h2>\n            </div>\n            <div class=\"toggle-indicator-container\">\n              <i\n                :class=\"[toggled ? 'fa-chevron-up' : 'fa-chevron-down', 'fa']\"\n              />\n            </div>\n          </div>\n          <div\n            :class=\"[toggled ? 'shown' : 'hide-box', 'app-selection-container']\"\n          >\n            <div\n              v-for=\"app in apps\"\n              :key=\"app.network.name\"\n              :class=\"[\n                selectedApp.network.name_long === app.network.name_long\n                  ? 'selected'\n                  : '',\n                'item'\n              ]\"\n              @click=\"selectDapp(app)\"\n            >\n              <i class=\"fa fa-check-circle\"></i>\n              <span> {{ app.network.name_long }} </span>\n            </div>\n          </div>\n          <div\n            v-show=\"selectedPath.path === 'custom'\"\n            class=\"custom-path-inputs\"\n          >\n            <div class=\"path-input\">\n              <label for=\"custom-label\"> Alias </label>\n              <input\n                v-model=\"customLabel\"\n                name=\"custom-label\"\n                placeholder=\"my custom path\"\n              />\n            </div>\n            <div class=\"path-input\">\n              <label for=\"custom-path\"> Path </label>\n              <input\n                v-model=\"customPath\"\n                name=\"custom-path\"\n                placeholder=\"m/44'/1'/0'/0\"\n              />\n            </div>\n            <div class=\"custom-path-actions\">\n              <div class=\"cancel\" @click=\"cancel\">\n                Cancel\n              </div>\n              <div class=\"proceed\" @click=\"addCustomPath\">\n                Add Custom Path\n              </div>\n            </div>\n          </div>\n          <b-dropdown :no-caret=\"true\" class=\"dropdown-button-3\">\n            <template slot=\"button-content\">\n              <span> {{ dropDownDefaultText }} </span>\n              <i\n                :class=\"[\n                  flipButton ? 'fa-chevron-up' : 'fa-chevron-down',\n                  'fa'\n                ]\"\n              ></i>\n            </template>\n            <b-dropdown-item\n              v-for=\"(path, idx) in selectedApp.paths\"\n              ref=\"pathDropdown\"\n              :key=\"path.label\"\n              :active=\"path.path === selectedPath.path\"\n              @click=\"setPath(path, idx)\"\n            >\n              {{ path.label }} - {{ path.path }}\n              <i\n                v-show=\"\n                  selectedApp.network.name_long === 'Custom Paths' &&\n                    !path.hasOwnProperty('default')\n                \"\n                class=\"fa fa-times remove-custom\"\n                @click.stop=\"remove(path, idx)\"\n              />\n            </b-dropdown-item>\n          </b-dropdown>\n          <button\n            :class=\"[\n              selectedPath.path === 'custom' ? 'disabled' : '',\n              'mid-round-button-green-filled next-button'\n            ]\"\n            @click=\"next\"\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    </b-modal>\n  </div>\n</template>\n\n<script>\nimport apps from '@/wallets/hardware/ledger/appPaths.js';\nimport cust from '@/assets/images/icons/network.svg';\nimport { Toast, pathHelpers } from '@/helpers';\nimport { LedgerWallet } from '@/wallets';\nimport { mapState } from 'vuex';\nimport { ethereum } from '@/wallets/bip44/paths';\nexport default {\n  props: {\n    networks: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    }\n  },\n  data() {\n    return {\n      apps: apps,\n      selectedApp: {\n        network: {\n          name_long: apps[0].network.name_long,\n          icon: apps[0].network.icon\n        },\n        paths: apps[0].paths\n      },\n      toggled: false,\n      selectedPath: apps[0].paths[0],\n      flipButton: false,\n      customLabel: '',\n      customPath: ''\n    };\n  },\n  computed: {\n    fieldsFilled() {\n      const emptyApp = Object.keys(this.selectedApp).length;\n      return (\n        this.selected === '' &&\n        emptyApp === 0 &&\n        this.selectedPathText === 'Select Path' &&\n        this.selectedPath === ''\n      );\n    },\n    dropDownDefaultText() {\n      return `${this.selectedPath.label} - ${this.selectedPath.path}`;\n    },\n    ...mapState(['customPaths'])\n  },\n  watch: {\n    selectedApp: {\n      handler: function(newVal) {\n        this.selectedPath = newVal.paths[0];\n      },\n      deep: true\n    },\n    customPaths() {\n      this.setupCustomPaths();\n    }\n  },\n  mounted() {\n    this.setupCustomPaths();\n    this.$root.$on('bv::dropdown::show', () => {\n      this.flipButton = true;\n    });\n    this.$root.$on('bv::dropdown::hide', () => {\n      this.flipButton = false;\n    });\n  },\n  methods: {\n    remove(path, idx) {\n      const mappedPaths = this.selectedApp.paths.filter((item, itemIdx) => {\n        if (itemIdx !== idx) return item;\n      });\n      this.$store.dispatch('removeCustomPath', path);\n      this.setupCustomPaths();\n      this.selectedApp.paths = mappedPaths;\n      this.selectedPath =\n        this.selectedApp.paths.length > 1\n          ? this.selectedApp.paths[0]\n          : apps[0].paths[0];\n      this.$refs.pathDropdown[0].closeDropdown();\n    },\n    setupCustomPaths() {\n      const loc = apps.map(item => {\n        return item;\n      });\n      const customPathArr = Object.keys(this.customPaths);\n      const customApp = {\n        paths: [\n          {\n            label: 'Ethereum (Trezor)',\n            path: ethereum.path,\n            default: true\n          },\n          {\n            label: 'Add Custom Paths',\n            path: 'custom',\n            default: true\n          }\n        ],\n        network: {\n          icon: cust,\n          name_long: 'Custom Paths',\n          name: 'Custom'\n        }\n      };\n\n      customPathArr.forEach(item => {\n        customApp.paths.unshift(this.customPaths[item]);\n      });\n\n      loc.push(customApp);\n\n      this.apps = loc;\n    },\n    addCustomPath() {\n      const customPath = pathHelpers.checkCustomPath(this.customPath);\n      if (customPath) {\n        this.selectedPath = {\n          path: customPath,\n          label: this.customLabel\n        };\n        this.$store\n          .dispatch('addCustomPath', {\n            label: this.customLabel,\n            path: customPath\n          })\n          .then(() => {\n            this.setupCustomPaths();\n            this.selectedApp.paths.unshift(this.selectedPath);\n          });\n      } else {\n        Toast.responseHandler('Invalid Custom Path', Toast.ERROR);\n      }\n    },\n    cancel() {\n      this.customLabel = '';\n      this.customPath = '';\n      this.selectedPath =\n        this.selectedApp.paths.length > 1\n          ? this.selectedApp.paths[0]\n          : apps[0].paths[0];\n    },\n    selectDapp(app) {\n      this.selectedApp = app;\n    },\n    setPath(path) {\n      this.selectedPath = path;\n    },\n    next() {\n      this.$refs.ledgerApp.hide();\n      LedgerWallet(this.selectedPath.path)\n        .then(_newWallet => {\n          this.$emit('hardwareWalletOpen', _newWallet);\n        })\n        .catch(e => {\n          LedgerWallet.errorHandler(e);\n        });\n    },\n    reset() {\n      this.selectedApp = this.apps[0];\n      this.selectedPath = this.apps[0].paths[0];\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'LedgerAppModal.scss';\n</style>\n"],"sourceRoot":"src/layouts/AccessWalletLayout/components/LedgerAppModal"}]}