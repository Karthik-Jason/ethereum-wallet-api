{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/eslint-loader/index.js??ref--13-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/wallets/web3-provider/methods/eth_sendTransaction.js","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/wallets/web3-provider/methods/eth_sendTransaction.js","mtime":1573477612132},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport unit from 'ethjs-unit';\nimport utils from 'web3-utils';\nimport EthCalls from \"../web3Calls\";\nimport { WEB3_WALLET } from \"../../bip44/walletTypes\";\nimport EventNames from \"../events\";\nimport { toPayload } from \"../jsonrpc\";\nimport * as locStore from 'store';\nimport { getSanitizedTx } from \"./utils\";\nimport BigNumber from 'bignumber.js';\nimport { Misc } from '@/helpers';\n\nvar setEvents = function setEvents(promiObj, tx, dispatch) {\n  promiObj.once('transactionHash', function (hash) {\n    dispatch('addNotification', ['Hash', tx.from, tx, hash]);\n  }).once('receipt', function (res) {\n    dispatch('addNotification', ['Receipt', tx.from, tx, res]);\n  }).on('error', function (err) {\n    dispatch('addNotification', ['Error', tx.from, tx, err]);\n  });\n};\n\nexport default\n/*#__PURE__*/\n(function () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(_ref, res, next) {\n    var payload, store, requestManager, eventHub, tx, localTx, ethCalls;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            payload = _ref.payload, store = _ref.store, requestManager = _ref.requestManager, eventHub = _ref.eventHub;\n\n            if (!(payload.method !== 'eth_sendTransaction')) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", next());\n\n          case 3:\n            tx = Object.assign({}, payload.params[0]);\n            tx.gasPrice = unit.toWei(store.state.gasPrice, 'gwei').toString();\n            localTx = Object.assign({}, tx);\n            delete localTx['gas'];\n            delete localTx['nonce'];\n            ethCalls = new EthCalls(requestManager);\n            _context.prev = 9;\n\n            if (tx.nonce) {\n              _context.next = 16;\n              break;\n            }\n\n            _context.next = 13;\n            return store.state.web3.eth.getTransactionCount(store.state.wallet.getAddressString());\n\n          case 13:\n            _context.t0 = _context.sent;\n            _context.next = 17;\n            break;\n\n          case 16:\n            _context.t0 = tx.nonce;\n\n          case 17:\n            tx.nonce = _context.t0;\n\n            if (tx.gas) {\n              _context.next = 24;\n              break;\n            }\n\n            _context.next = 21;\n            return ethCalls.estimateGas(localTx);\n\n          case 21:\n            _context.t1 = _context.sent;\n            _context.next = 25;\n            break;\n\n          case 24:\n            _context.t1 = tx.gas;\n\n          case 25:\n            tx.gas = _context.t1;\n            _context.next = 32;\n            break;\n\n          case 28:\n            _context.prev = 28;\n            _context.t2 = _context[\"catch\"](9);\n            res(_context.t2);\n            return _context.abrupt(\"return\");\n\n          case 32:\n            tx.chainId = !tx.chainId ? store.state.network.type.chainID : tx.chainId;\n            getSanitizedTx(tx).then(function (_tx) {\n              if (store.state.wallet.identifier === WEB3_WALLET) {\n                eventHub.$emit(EventNames.SHOW_WEB3_CONFIRM_MODAL, _tx, function (_promiObj) {\n                  setEvents(_promiObj, _tx, store.dispatch);\n\n                  _promiObj.once('transactionHash', function (hash) {\n                    res(null, toPayload(payload.id, hash));\n                  }).on('error', function (err) {\n                    res(err);\n                  });\n                });\n              } else {\n                eventHub.$emit(EventNames.SHOW_TX_CONFIRM_MODAL, _tx, function (_response) {\n                  var _promiObj = store.state.web3.eth.sendSignedTransaction(_response.rawTransaction);\n\n                  _promiObj.once('transactionHash', function (hash) {\n                    if (store.state.wallet !== null) {\n                      var localStoredObj = locStore.get(utils.sha3(store.state.wallet.getChecksumAddressString()));\n                      locStore.set(utils.sha3(store.state.wallet.getChecksumAddressString()), {\n                        nonce: Misc.sanitizeHex(new BigNumber(localStoredObj.nonce).plus(1).toString(16)),\n                        timestamp: localStoredObj.timestamp\n                      });\n                    }\n\n                    res(null, toPayload(payload.id, hash));\n                  }).on('error', function (err) {\n                    res(err);\n                  });\n\n                  setEvents(_promiObj, _tx, store.dispatch);\n                });\n              }\n            }).catch(function (e) {\n              res(e);\n            });\n\n          case 34:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[9, 28]]);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n})();",{"version":3,"sources":["/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/wallets/web3-provider/methods/eth_sendTransaction.js"],"names":["unit","utils","EthCalls","WEB3_WALLET","EventNames","toPayload","locStore","getSanitizedTx","BigNumber","Misc","setEvents","promiObj","tx","dispatch","once","hash","from","res","on","err","next","payload","store","requestManager","eventHub","method","Object","assign","params","gasPrice","toWei","state","toString","localTx","ethCalls","nonce","web3","eth","getTransactionCount","wallet","getAddressString","gas","estimateGas","chainId","network","type","chainID","then","_tx","identifier","$emit","SHOW_WEB3_CONFIRM_MODAL","_promiObj","id","SHOW_TX_CONFIRM_MODAL","_response","sendSignedTransaction","rawTransaction","localStoredObj","get","sha3","getChecksumAddressString","set","sanitizeHex","plus","timestamp","catch","e"],"mappings":"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","sourcesContent":["import unit from 'ethjs-unit';\nimport utils from 'web3-utils';\nimport EthCalls from '../web3Calls';\nimport { WEB3_WALLET } from '../../bip44/walletTypes';\nimport EventNames from '../events';\nimport { toPayload } from '../jsonrpc';\nimport * as locStore from 'store';\nimport { getSanitizedTx } from './utils';\nimport BigNumber from 'bignumber.js';\nimport { Misc } from '@/helpers';\n\nconst setEvents = (promiObj, tx, dispatch) => {\n  promiObj\n    .once('transactionHash', hash => {\n      dispatch('addNotification', ['Hash', tx.from, tx, hash]);\n    })\n    .once('receipt', res => {\n      dispatch('addNotification', ['Receipt', tx.from, tx, res]);\n    })\n    .on('error', err => {\n      dispatch('addNotification', ['Error', tx.from, tx, err]);\n    });\n};\nexport default async (\n  { payload, store, requestManager, eventHub },\n  res,\n  next\n) => {\n  if (payload.method !== 'eth_sendTransaction') return next();\n  const tx = Object.assign({}, payload.params[0]);\n  tx.gasPrice = unit.toWei(store.state.gasPrice, 'gwei').toString();\n  const localTx = Object.assign({}, tx);\n  delete localTx['gas'];\n  delete localTx['nonce'];\n  const ethCalls = new EthCalls(requestManager);\n  try {\n    tx.nonce = !tx.nonce\n      ? await store.state.web3.eth.getTransactionCount(\n          store.state.wallet.getAddressString()\n        )\n      : tx.nonce;\n    tx.gas = !tx.gas ? await ethCalls.estimateGas(localTx) : tx.gas;\n  } catch (e) {\n    res(e);\n    return;\n  }\n  tx.chainId = !tx.chainId ? store.state.network.type.chainID : tx.chainId;\n  getSanitizedTx(tx)\n    .then(_tx => {\n      if (store.state.wallet.identifier === WEB3_WALLET) {\n        eventHub.$emit(EventNames.SHOW_WEB3_CONFIRM_MODAL, _tx, _promiObj => {\n          setEvents(_promiObj, _tx, store.dispatch);\n          _promiObj\n            .once('transactionHash', hash => {\n              res(null, toPayload(payload.id, hash));\n            })\n            .on('error', err => {\n              res(err);\n            });\n        });\n      } else {\n        eventHub.$emit(EventNames.SHOW_TX_CONFIRM_MODAL, _tx, _response => {\n          const _promiObj = store.state.web3.eth.sendSignedTransaction(\n            _response.rawTransaction\n          );\n\n          _promiObj\n            .once('transactionHash', hash => {\n              if (store.state.wallet !== null) {\n                const localStoredObj = locStore.get(\n                  utils.sha3(store.state.wallet.getChecksumAddressString())\n                );\n                locStore.set(\n                  utils.sha3(store.state.wallet.getChecksumAddressString()),\n                  {\n                    nonce: Misc.sanitizeHex(\n                      new BigNumber(localStoredObj.nonce).plus(1).toString(16)\n                    ),\n                    timestamp: localStoredObj.timestamp\n                  }\n                );\n              }\n              res(null, toPayload(payload.id, hash));\n            })\n            .on('error', err => {\n              res(err);\n            });\n          setEvents(_promiObj, _tx, store.dispatch);\n        });\n      }\n    })\n    .catch(e => {\n      res(e);\n    });\n};\n"]}]}