{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/layouts/InterfaceLayout/components/InterfaceTokensModal/InterfaceTokensModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/layouts/InterfaceLayout/components/InterfaceTokensModal/InterfaceTokensModal.vue","mtime":1574664278302},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/thread-loader/dist/cjs.js","mtime":1574664277654},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js","mtime":1574664275010},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js","mtime":1574664277774}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport InterfaceBottomText from '@/components/InterfaceBottomText';\nimport { mapState } from 'vuex';\nimport { isAddress } from '@/helpers/addressUtils';\nexport default {\n  components: {\n    'interface-bottom-text': InterfaceBottomText\n  },\n  props: {\n    addToken: {\n      type: Function,\n      default: function _default() {}\n    }\n  },\n  data: function data() {\n    return {\n      tokenAddress: '',\n      tokenSymbol: '',\n      tokenDecimal: '',\n      validAddress: false\n    };\n  },\n  computed: _objectSpread({}, mapState(['web3']), {\n    allFieldsValid: function allFieldsValid() {\n      if (!this.validAddress) return false;\n      if (this.tokenSymbol === '') return false;\n      if (this.tokenDecimal < 0 || this.tokenDecimal > 18 || this.tokenDecimal === '') return false;\n      if (this.errors.has('address') || this.errors.has('symbol') || this.errors.has('decimal')) return false;\n      return true;\n    }\n  }),\n  watch: {\n    tokenAddress: function tokenAddress(newVal) {\n      var strippedWhitespace = newVal.toLowerCase().trim();\n      var regTest = new RegExp(/[a-zA-Z0-9]/g);\n      this.validAddress = regTest.test(strippedWhitespace) && isAddress(strippedWhitespace);\n      this.toAddress = strippedWhitespace;\n      this.tokenAddress = strippedWhitespace;\n    },\n    tokenSymbol: function tokenSymbol(newVal) {\n      this.tokenSymbol = newVal.substr(0, 7);\n    }\n  },\n  methods: {\n    resetCompState: function resetCompState() {\n      this.tokenAddress = '';\n      this.tokenSymbol = '';\n      this.tokenDecimal = '';\n      this.validAddress = false;\n    }\n  }\n};",{"version":3,"sources":["InterfaceTokensModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA,OAAA,mBAAA,MAAA,kCAAA;AACA,SAAA,QAAA,QAAA,MAAA;AACA,SAAA,SAAA,QAAA,wBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,6BAAA;AADA,GADA;AAIA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,QADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA;AADA,GAJA;AAUA,EAAA,IAVA,kBAUA;AACA,WAAA;AACA,MAAA,YAAA,EAAA,EADA;AAEA,MAAA,WAAA,EAAA,EAFA;AAGA,MAAA,YAAA,EAAA,EAHA;AAIA,MAAA,YAAA,EAAA;AAJA,KAAA;AAMA,GAjBA;AAkBA,EAAA,QAAA,oBACA,QAAA,CAAA,CAAA,MAAA,CAAA,CADA;AAEA,IAAA,cAFA,4BAEA;AACA,UAAA,CAAA,KAAA,YAAA,EAAA,OAAA,KAAA;AACA,UAAA,KAAA,WAAA,KAAA,EAAA,EAAA,OAAA,KAAA;AACA,UACA,KAAA,YAAA,GAAA,CAAA,IACA,KAAA,YAAA,GAAA,EADA,IAEA,KAAA,YAAA,KAAA,EAHA,EAKA,OAAA,KAAA;AACA,UACA,KAAA,MAAA,CAAA,GAAA,CAAA,SAAA,KACA,KAAA,MAAA,CAAA,GAAA,CAAA,QAAA,CADA,IAEA,KAAA,MAAA,CAAA,GAAA,CAAA,SAAA,CAHA,EAKA,OAAA,KAAA;AACA,aAAA,IAAA;AACA;AAlBA,IAlBA;AAsCA,EAAA,KAAA,EAAA;AACA,IAAA,YADA,wBACA,MADA,EACA;AACA,UAAA,kBAAA,GAAA,MAAA,CAAA,WAAA,GAAA,IAAA,EAAA;AACA,UAAA,OAAA,GAAA,IAAA,MAAA,CAAA,cAAA,CAAA;AACA,WAAA,YAAA,GACA,OAAA,CAAA,IAAA,CAAA,kBAAA,KAAA,SAAA,CAAA,kBAAA,CADA;AAEA,WAAA,SAAA,GAAA,kBAAA;AACA,WAAA,YAAA,GAAA,kBAAA;AACA,KARA;AASA,IAAA,WATA,uBASA,MATA,EASA;AACA,WAAA,WAAA,GAAA,MAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA;AAXA,GAtCA;AAmDA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,4BACA;AACA,WAAA,YAAA,GAAA,EAAA;AACA,WAAA,WAAA,GAAA,EAAA;AACA,WAAA,YAAA,GAAA,EAAA;AACA,WAAA,YAAA,GAAA,KAAA;AACA;AANA;AAnDA,CAAA","sourcesContent":["<template lang=\"html\">\n  <b-modal\n    ref=\"tokenModal\"\n    hide-footer\n    class=\"bootstrap-modal nopadding max-height-1\"\n    centered\n    title=\"Add Custom Token\"\n    static\n    lazy\n    @hidden=\"resetCompState\"\n  >\n    <form class=\"tokens-modal-body\">\n      <div>\n        <input\n          v-validate=\"'required'\"\n          v-model=\"tokenAddress\"\n          :class=\"[\n            'custom-input-text-1',\n            tokenAddress !== '' && !validAddress ? 'invalid-address' : ''\n          ]\"\n          name=\"Address\"\n          type=\"text\"\n          placeholder=\"Token Contract Address\"\n        />\n        <span\n          v-show=\"tokenAddress !== '' && !validAddress\"\n          class=\"error-message\"\n        >\n          Invalid address given.\n        </span>\n        <input\n          v-validate=\"'required'\"\n          v-model=\"tokenSymbol\"\n          name=\"Symbol\"\n          type=\"text\"\n          placeholder=\"Token Symbol\"\n          class=\"custom-input-text-1\"\n        />\n        <input\n          v-validate=\"'required|numeric'\"\n          v-model=\"tokenDecimal\"\n          name=\"Decimal\"\n          type=\"number\"\n          min=\"0\"\n          max=\"18\"\n          placeholder=\"Decimals\"\n          class=\"custom-input-text-1\"\n        />\n        <span\n          v-show=\"tokenDecimal < 0 || tokenDecimal > 18\"\n          class=\"error-message\"\n        >\n          Invalid Decimal. Decimal can only be between 0 and 18.\n        </span>\n      </div>\n      <div class=\"button-block\">\n        <button\n          :class=\"[\n            allFieldsValid ? '' : 'disabled',\n            'save-button large-round-button-green-filled clickable'\n          ]\"\n          type=\"submit\"\n          @click.prevent=\"addToken(tokenAddress, tokenSymbol, tokenDecimal)\"\n        >\n          {{ $t('interface.save') }}\n        </button>\n        <interface-bottom-text\n          :link-text=\"$t('interface.helpCenter')\"\n          :question=\"$t('interface.dontKnow')\"\n          link=\"https://kb.myetherwallet.com\"\n        />\n      </div>\n    </form>\n  </b-modal>\n</template>\n\n<script>\nimport InterfaceBottomText from '@/components/InterfaceBottomText';\nimport { mapState } from 'vuex';\nimport { isAddress } from '@/helpers/addressUtils';\n\nexport default {\n  components: {\n    'interface-bottom-text': InterfaceBottomText\n  },\n  props: {\n    addToken: {\n      type: Function,\n      default: function() {}\n    }\n  },\n  data() {\n    return {\n      tokenAddress: '',\n      tokenSymbol: '',\n      tokenDecimal: '',\n      validAddress: false\n    };\n  },\n  computed: {\n    ...mapState(['web3']),\n    allFieldsValid() {\n      if (!this.validAddress) return false;\n      if (this.tokenSymbol === '') return false;\n      if (\n        this.tokenDecimal < 0 ||\n        this.tokenDecimal > 18 ||\n        this.tokenDecimal === ''\n      )\n        return false;\n      if (\n        this.errors.has('address') ||\n        this.errors.has('symbol') ||\n        this.errors.has('decimal')\n      )\n        return false;\n      return true;\n    }\n  },\n  watch: {\n    tokenAddress(newVal) {\n      const strippedWhitespace = newVal.toLowerCase().trim();\n      const regTest = new RegExp(/[a-zA-Z0-9]/g);\n      this.validAddress =\n        regTest.test(strippedWhitespace) && isAddress(strippedWhitespace);\n      this.toAddress = strippedWhitespace;\n      this.tokenAddress = strippedWhitespace;\n    },\n    tokenSymbol(newVal) {\n      this.tokenSymbol = newVal.substr(0, 7);\n    }\n  },\n  methods: {\n    resetCompState() {\n      this.tokenAddress = '';\n      this.tokenSymbol = '';\n      this.tokenDecimal = '';\n      this.validAddress = false;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'InterfaceTokensModal.scss';\n</style>\n"],"sourceRoot":"src/layouts/InterfaceLayout/components/InterfaceTokensModal"}]}