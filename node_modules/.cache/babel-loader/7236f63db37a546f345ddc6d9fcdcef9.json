{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/layouts/CreateWalletLayout/containers/ByMnemonicContainer/ByMnemonicContainer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/layouts/CreateWalletLayout/containers/ByMnemonicContainer/ByMnemonicContainer.vue","mtime":1573477611676},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CreateWalletInputFooter from '@/layouts/CreateWalletLayout/components/CreateWalletInputFooter';\nimport FinishModal from \"./components/FinishModal\";\nimport PrintModal from \"./components/PrintModal\";\nimport VerificationModal from \"./components/VerificationModal\";\nimport PasswordInput from '@/components/PasswordInput';\nimport ExpandingOption from '@/components/ExpandingOption';\nimport CreateWalletInput from \"../../components/CreateWalletInput\";\n\nvar bip39 = require('bip39');\n\nexport default {\n  components: {\n    'finish-modal': FinishModal,\n    'verification-modal': VerificationModal,\n    'print-modal': PrintModal,\n    'input-footer': CreateWalletInputFooter,\n    'password-input': PasswordInput,\n    'expanding-option': ExpandingOption,\n    'create-wallet-input': CreateWalletInput\n  },\n  data: function data() {\n    return {\n      password: '',\n      verificationValues: [],\n      mnemonicValues: [],\n      mnemonic24: false,\n      passwordInput: {\n        title: ''\n      }\n    };\n  },\n  mounted: function mounted() {\n    // Generate a random mnemonic\n    this.mnemonicValues = bip39.generateMnemonic(128).split(' ');\n  },\n  methods: {\n    passwordInputViewChange: function passwordInputViewChange() {\n      this.password = '';\n    },\n    unlockWallet: function unlockWallet() {\n      this.$router.push('/access-my-wallet');\n    },\n    mnemonicValueRefresh: function mnemonicValueRefresh() {\n      if (this.mnemonic24 === true) {\n        this.mnemonicValues = bip39.generateMnemonic(256).split(' ');\n      } else {\n        this.mnemonicValues = bip39.generateMnemonic(128).split(' ');\n      }\n    },\n    mnemonicValueBitSizeChange: function mnemonicValueBitSizeChange() {\n      var left = document.querySelector('.label-left');\n      var right = document.querySelector('.label-right');\n      this.mnemonic24 = !this.mnemonic24;\n\n      if (this.mnemonic24 === true) {\n        // Regenerate new 24 Mnemonic phrases\n        this.mnemonicValues = bip39.generateMnemonic(256).split(' ');\n        left.classList.remove('white');\n        right.classList.add('white');\n      } else {\n        // Regenerate new 12 Mnemonic phrases\n        this.mnemonicValues = bip39.generateMnemonic(128).split(' ');\n        left.classList.add('white');\n        right.classList.remove('white');\n      }\n    },\n    openFinish: function openFinish() {\n      this.$refs.verification.$refs.verification.hide();\n      this.$refs.finish.$refs.done.show();\n    },\n    mnemonicVerificationModalOpen: function mnemonicVerificationModalOpen() {\n      this.$refs.verification.$refs.verification.show();\n    },\n    openPrintModal: function openPrintModal() {\n      this.$refs.print.$refs.print.show();\n    }\n  }\n};",{"version":3,"sources":["ByMnemonicContainer.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"create-wallet-by-mnemonic\">\n    <finish-modal ref=\"finish\" :unlock=\"unlockWallet\" />\n    <print-modal\n      ref=\"print\"\n      :mnemonic=\"mnemonicValues\"\n      :is-twenty-four=\"mnemonic24\"\n    />\n    <verification-modal\n      ref=\"verification\"\n      :mnemonic-values=\"mnemonicValues\"\n      @verifiedMnemonic=\"openFinish\"\n    />\n    <div class=\"wrap\">\n      <div class=\"contents\">\n        <div class=\"tools\">\n          <div class=\"value-switch noselect\">\n            <div class=\"sliding-switch\">\n              <label class=\"switch\">\n                <input type=\"checkbox\" />\n                <span\n                  class=\"slider round\"\n                  @click=\"mnemonicValueBitSizeChange\"\n                />\n              </label>\n              <div class=\"labels\">\n                <span class=\"label-left white\">12</span>\n                <span class=\"label-right\">24</span>\n              </div>\n            </div>\n            <span class=\"text__base link switch-label\">{{\n              $t('createWallet.byMnemonicValue')\n            }}</span>\n          </div>\n\n          <div\n            class=\"random-button color-green noselect\"\n            @click=\"mnemonicValueRefresh\"\n          >\n            <i class=\"fa fa-refresh\" aria-hidden=\"true\" />\n            <span>{{ $t('createWallet.byMnemonicRandom') }}</span>\n          </div>\n        </div>\n        <div class=\"phrases\">\n          <ul>\n            <li v-for=\"(value, index) in mnemonicValues\" :key=\"index\">\n              {{ index + 1 }}.<span>{{ value }}</span>\n            </li>\n          </ul>\n        </div>\n      </div>\n\n      <div class=\"option-container-block\">\n        <expanding-option\n          title=\"Password\"\n          button-text=\"Optional\"\n          @expanded=\"passwordInputViewChange\"\n        >\n          <div class=\"option-container\">\n            <create-wallet-input\n              v-model=\"password\"\n              :show-button=\"false\"\n              :full-width=\"true\"\n            />\n            <div class=\"password-warning\">\n              <p>\n                {{ $t('createWallet.mnemonicPasswordWarning') }}\n              </p>\n              <div class=\"read\">\n                > {{ $t('common.read') }}:\n                <a\n                  href=\"https://kb.myetherwallet.com/posts/security-and-privacy/mnemonic-phrase-password/\"\n                  target=\"_blank\"\n                  >Mnemonic Phrase: Should I Include a Password?</a\n                >\n              </div>\n            </div>\n          </div>\n        </expanding-option>\n      </div>\n\n      <div class=\"user-input\">\n        <div\n          class=\"next-button large-round-button-green-filled clickable\"\n          @click=\"mnemonicVerificationModalOpen\"\n        >\n          {{ $t('createWallet.byMnemonicAlreadyWritten') }}\n        </div>\n        <div @click=\"openPrintModal\">\n          <img alt class=\"icon\" src=\"~@/assets/images/icons/printer.svg\" />\n        </div>\n      </div>\n      <input-footer />\n    </div>\n  </div>\n</template>\n\n<script>\nimport CreateWalletInputFooter from '@/layouts/CreateWalletLayout/components/CreateWalletInputFooter';\nimport FinishModal from './components/FinishModal';\nimport PrintModal from './components/PrintModal';\nimport VerificationModal from './components/VerificationModal';\nimport PasswordInput from '@/components/PasswordInput';\nimport ExpandingOption from '@/components/ExpandingOption';\nimport CreateWalletInput from '../../components/CreateWalletInput';\n\nconst bip39 = require('bip39');\n\nexport default {\n  components: {\n    'finish-modal': FinishModal,\n    'verification-modal': VerificationModal,\n    'print-modal': PrintModal,\n    'input-footer': CreateWalletInputFooter,\n    'password-input': PasswordInput,\n    'expanding-option': ExpandingOption,\n    'create-wallet-input': CreateWalletInput\n  },\n  data() {\n    return {\n      password: '',\n      verificationValues: [],\n      mnemonicValues: [],\n      mnemonic24: false,\n      passwordInput: {\n        title: ''\n      }\n    };\n  },\n  mounted() {\n    // Generate a random mnemonic\n    this.mnemonicValues = bip39.generateMnemonic(128).split(' ');\n  },\n  methods: {\n    passwordInputViewChange() {\n      this.password = '';\n    },\n    unlockWallet() {\n      this.$router.push('/access-my-wallet');\n    },\n    mnemonicValueRefresh() {\n      if (this.mnemonic24 === true) {\n        this.mnemonicValues = bip39.generateMnemonic(256).split(' ');\n      } else {\n        this.mnemonicValues = bip39.generateMnemonic(128).split(' ');\n      }\n    },\n    mnemonicValueBitSizeChange() {\n      const left = document.querySelector('.label-left');\n      const right = document.querySelector('.label-right');\n\n      this.mnemonic24 = !this.mnemonic24;\n\n      if (this.mnemonic24 === true) {\n        // Regenerate new 24 Mnemonic phrases\n        this.mnemonicValues = bip39.generateMnemonic(256).split(' ');\n        left.classList.remove('white');\n        right.classList.add('white');\n      } else {\n        // Regenerate new 12 Mnemonic phrases\n        this.mnemonicValues = bip39.generateMnemonic(128).split(' ');\n        left.classList.add('white');\n        right.classList.remove('white');\n      }\n    },\n    openFinish() {\n      this.$refs.verification.$refs.verification.hide();\n      this.$refs.finish.$refs.done.show();\n    },\n    mnemonicVerificationModalOpen() {\n      this.$refs.verification.$refs.verification.show();\n    },\n    openPrintModal() {\n      this.$refs.print.$refs.print.show();\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'ByMnemonicContainer.scss';\n</style>\n"],"sourceRoot":"src/layouts/CreateWalletLayout/containers/ByMnemonicContainer"}]}