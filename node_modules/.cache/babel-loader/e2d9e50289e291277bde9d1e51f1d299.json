{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/layouts/SendOfflineHelper/components/AddressBlock/AddressBlock.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/layouts/SendOfflineHelper/components/AddressBlock/AddressBlock.vue","mtime":1573477612088},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { isAddress, toChecksumAddress } from '@/helpers/addressUtils';\nimport web3 from 'web3';\nexport default {\n  props: {\n    address: {\n      type: String,\n      default: ''\n    },\n    direction: {\n      type: String,\n      default: ''\n    },\n    value: {\n      type: Number,\n      default: 0\n    },\n    currency: {\n      type: String,\n      default: 'eth'\n    },\n    tokenTransferTo: {\n      type: String,\n      default: ''\n    },\n    tokenTransferVal: {\n      type: String,\n      default: ''\n    },\n    tokenSymbol: {\n      type: String,\n      default: ''\n    }\n  },\n  computed: {\n    lowerCaseCurrency: function lowerCaseCurrency() {\n      return this.currency.toLowerCase();\n    },\n    checksumAddress: function checksumAddress() {\n      if (isAddress(this.tokenTransferTo)) return toChecksumAddress(this.tokenTransferTo);\n      if (isAddress(this.address)) return toChecksumAddress(this.address);\n      return '';\n    }\n  },\n  methods: {\n    converter: function converter(num) {\n      return web3.utils.fromWei(num.toString(), 'ether');\n    }\n  }\n};",{"version":3,"sources":["AddressBlock.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,SAAA,SAAA,EAAA,iBAAA,QAAA,wBAAA;AACA,OAAA,IAAA,MAAA,MAAA;AACA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KATA;AAaA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAbA;AAiBA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAjBA;AAqBA,IAAA,gBAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KArBA;AAyBA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAzBA,GADA;AA+BA,EAAA,QAAA,EAAA;AACA,IAAA,iBADA,+BACA;AACA,aAAA,KAAA,QAAA,CAAA,WAAA,EAAA;AACA,KAHA;AAIA,IAAA,eAJA,6BAIA;AACA,UAAA,SAAA,CAAA,KAAA,eAAA,CAAA,EACA,OAAA,iBAAA,CAAA,KAAA,eAAA,CAAA;AACA,UAAA,SAAA,CAAA,KAAA,OAAA,CAAA,EAAA,OAAA,iBAAA,CAAA,KAAA,OAAA,CAAA;AACA,aAAA,EAAA;AACA;AATA,GA/BA;AA0CA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,qBACA,GADA,EACA;AACA,aAAA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA,GAAA,CAAA,QAAA,EAAA,EAAA,OAAA,CAAA;AACA;AAHA;AA1CA,CAAA","sourcesContent":["<template lang=\"html\">\n  <div class=\"address-container\">\n    <div class=\"currency-container\">\n      <img\n        :src=\"require(`@/assets/images/currency/${lowerCaseCurrency}.svg`)\"\n        alt\n      />\n      <p>\n        <span class=\"currency-amt\">\n          {{ direction === 'from' ? '-' : '+' }}\n          {{ tokenTransferVal !== '' ? tokenTransferVal : converter(value) }}\n        </span>\n        <span class=\"currency-type\"\n          >{{ tokenSymbol !== '' ? tokenSymbol : currency.toUpperCase() }}\n        </span>\n      </p>\n    </div>\n    <div class=\"identicon-container\">\n      <p>{{ direction | capitalize }} Address</p>\n    </div>\n    <div class=\"address\">{{ checksumAddress }}</div>\n  </div>\n</template>\n\n<script>\nimport { isAddress, toChecksumAddress } from '@/helpers/addressUtils';\nimport web3 from 'web3';\nexport default {\n  props: {\n    address: {\n      type: String,\n      default: ''\n    },\n    direction: {\n      type: String,\n      default: ''\n    },\n    value: {\n      type: Number,\n      default: 0\n    },\n    currency: {\n      type: String,\n      default: 'eth'\n    },\n    tokenTransferTo: {\n      type: String,\n      default: ''\n    },\n    tokenTransferVal: {\n      type: String,\n      default: ''\n    },\n    tokenSymbol: {\n      type: String,\n      default: ''\n    }\n  },\n  computed: {\n    lowerCaseCurrency() {\n      return this.currency.toLowerCase();\n    },\n    checksumAddress() {\n      if (isAddress(this.tokenTransferTo))\n        return toChecksumAddress(this.tokenTransferTo);\n      if (isAddress(this.address)) return toChecksumAddress(this.address);\n      return '';\n    }\n  },\n  methods: {\n    converter(num) {\n      return web3.utils.fromWei(num.toString(), 'ether');\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import 'AddressBlock.scss';\n</style>\n"],"sourceRoot":"src/layouts/SendOfflineHelper/components/AddressBlock"}]}