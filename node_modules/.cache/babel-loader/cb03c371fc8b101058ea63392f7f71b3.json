{"remainingRequest":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/layouts/AccessWalletLayout/components/XwalletModal/XwalletModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/layouts/AccessWalletLayout/components/XwalletModal/XwalletModal.vue","mtime":1573477611668},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CustomerSupport from '@/components/CustomerSupport';\nimport { MewConnectWallet } from '@/wallets';\nimport { Toast } from '@/helpers';\nimport platform from 'platform';\nimport { mapState } from 'vuex';\nimport IpadModal from '@/components/IpadModal';\nexport default {\n  components: {\n    'customer-support': CustomerSupport,\n    'ipad-modal': IpadModal\n  },\n  data: function data() {\n    return {\n      QrCode: '',\n      canDownloadApple: true\n    };\n  },\n  computed: _objectSpread({}, mapState(['path', 'web3'])),\n  mounted: function mounted() {\n    var _this = this;\n\n    this.canDownloadApple = platform.product !== null ? platform.product.toLowerCase() !== 'ipad' : true;\n    this.$refs.xwalletModal.$on('show', function () {\n      new MewConnectWallet(_this.codeDisplay).then(function (wallet) {\n        if (!_this.web3.eth) _this.$store.dispatch('setWeb3Instance');\n\n        _this.$store.dispatch('decryptWallet', [wallet]).then(function () {\n          _this.$router.push({\n            path: 'interface'\n          });\n        });\n      }).catch(function (e) {\n        Toast.responseHandler(e, false);\n      });\n    });\n    this.$refs.xwalletModal.$on('hidden', function () {// disconnect socket if not connected (the socket should disconnect eventually in all cases)\n    });\n  },\n  methods: {\n    codeDisplay: function codeDisplay(qrCode) {\n      this.QrCode = qrCode;\n    },\n    openIpadModal: function openIpadModal() {\n      this.$refs.ipadModal.$refs.ipadModal.show();\n    }\n  }\n};",{"version":3,"sources":["XwalletModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA,OAAA,eAAA,MAAA,8BAAA;AACA,SAAA,gBAAA,QAAA,WAAA;AACA,SAAA,KAAA,QAAA,WAAA;AACA,OAAA,QAAA,MAAA,UAAA;AACA,SAAA,QAAA,QAAA,MAAA;AACA,OAAA,SAAA,MAAA,wBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,wBAAA,eADA;AAEA,kBAAA;AAFA,GADA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,EADA;AAEA,MAAA,gBAAA,EAAA;AAFA,KAAA;AAIA,GAVA;AAWA,EAAA,QAAA,oBACA,QAAA,CAAA,CAAA,MAAA,EAAA,MAAA,CAAA,CADA,CAXA;AAcA,EAAA,OAdA,qBAcA;AAAA;;AACA,SAAA,gBAAA,GACA,QAAA,CAAA,OAAA,KAAA,IAAA,GACA,QAAA,CAAA,OAAA,CAAA,WAAA,OAAA,MADA,GAEA,IAHA;AAIA,SAAA,KAAA,CAAA,YAAA,CAAA,GAAA,CAAA,MAAA,EAAA,YAAA;AACA,UAAA,gBAAA,CAAA,KAAA,CAAA,WAAA,EACA,IADA,CACA,UAAA,MAAA,EAAA;AACA,YAAA,CAAA,KAAA,CAAA,IAAA,CAAA,GAAA,EAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,iBAAA;;AACA,QAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,eAAA,EAAA,CAAA,MAAA,CAAA,EAAA,IAAA,CAAA,YAAA;AACA,UAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,YAAA,IAAA,EAAA;AADA,WAAA;AAGA,SAJA;AAKA,OARA,EASA,KATA,CASA,UAAA,CAAA,EAAA;AACA,QAAA,KAAA,CAAA,eAAA,CAAA,CAAA,EAAA,KAAA;AACA,OAXA;AAYA,KAbA;AAcA,SAAA,KAAA,CAAA,YAAA,CAAA,GAAA,CAAA,QAAA,EAAA,YAAA,CACA;AACA,KAFA;AAGA,GApCA;AAqCA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,MADA,EACA;AACA,WAAA,MAAA,GAAA,MAAA;AACA,KAHA;AAIA,IAAA,aAJA,2BAIA;AACA,WAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,SAAA,CAAA,IAAA;AACA;AANA;AArCA,CAAA","sourcesContent":["<template>\n  <b-modal\n    ref=\"xwalletModal\"\n    :title=\"$t('accessWallet.xwallettTitle')\"\n    hide-footer\n    class=\"bootstrap-modal nopadding modal-mew-connect\"\n    centered\n  >\n    <div class=\"modal-container\">\n      <ipad-modal ref=\"ipadModal\" />\n      <div class=\"modal-icon\">\n        <qrcode :value=\"QrCode\" :options=\"{ size: 200 }\" />\n      </div>\n      <div class=\"d-block content-container text-center\">\n        <h3 class=\"modal-large-text\">\n          {{ $t('accessWallet.xwalletDesc') }}\n        </h3>\n      </div>\n      <div class=\"appstore-button-container\">\n        <div class=\"links-container\">\n          <a\n            v-if=\"canDownloadApple\"\n            href=\"https://itunes.apple.com/tt/app/xwallet-by-pundi-x/id1321754661\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <img src=\"~@/assets/images/icons/appstore.svg\" height=\"35\" />\n          </a>\n          <div v-else @click=\"openIpadModal\">\n            <img src=\"~@/assets/images/icons/appstore.svg\" height=\"35\" />\n          </div>\n          <a\n            href=\"https://play.google.com/store/apps/details?id=com.pundix.xwallet\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <img src=\"~@/assets/images/icons/google-play.svg\" height=\"35\" />\n          </a>\n        </div>\n        <p class=\"download-now\">{{ $t('accessWallet.mewConnectDesc2') }}</p>\n      </div>\n      <customer-support />\n    </div>\n    <!-- .modal-container -->\n  </b-modal>\n</template>\n\n<script>\nimport CustomerSupport from '@/components/CustomerSupport';\nimport { MewConnectWallet } from '@/wallets';\nimport { Toast } from '@/helpers';\nimport platform from 'platform';\nimport { mapState } from 'vuex';\nimport IpadModal from '@/components/IpadModal';\n\nexport default {\n  components: {\n    'customer-support': CustomerSupport,\n    'ipad-modal': IpadModal\n  },\n  data() {\n    return {\n      QrCode: '',\n      canDownloadApple: true\n    };\n  },\n  computed: {\n    ...mapState(['path', 'web3'])\n  },\n  mounted() {\n    this.canDownloadApple =\n      platform.product !== null\n        ? platform.product.toLowerCase() !== 'ipad'\n        : true;\n    this.$refs.xwalletModal.$on('show', () => {\n      new MewConnectWallet(this.codeDisplay)\n        .then(wallet => {\n          if (!this.web3.eth) this.$store.dispatch('setWeb3Instance');\n          this.$store.dispatch('decryptWallet', [wallet]).then(() => {\n            this.$router.push({\n              path: 'interface'\n            });\n          });\n        })\n        .catch(e => {\n          Toast.responseHandler(e, false);\n        });\n    });\n    this.$refs.xwalletModal.$on('hidden', () => {\n      // disconnect socket if not connected (the socket should disconnect eventually in all cases)\n    });\n  },\n  methods: {\n    codeDisplay(qrCode) {\n      this.QrCode = qrCode;\n    },\n    openIpadModal() {\n      this.$refs.ipadModal.$refs.ipadModal.show();\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'XwalletModal-desktop.scss';\n@import 'XwalletModal-tablet.scss';\n@import 'XwalletModal-mobile.scss';\n</style>\n"],"sourceRoot":"src/layouts/AccessWalletLayout/components/XwalletModal"}]}