{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/eslint-loader/index.js??ref--13-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/dapps/MakerDai/MakerCDP.js","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/dapps/MakerDai/MakerCDP.js","mtime":1574664278274},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/thread-loader/dist/cjs.js","mtime":1574664277654},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js","mtime":1574664275010},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/eslint-loader/index.js","mtime":1574664275986}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport Maker from '@makerdao/dai';\nimport BigNumber from 'bignumber.js';\nimport { calcLiquidationPrice as _calcLiquidationPrice, calcCollatRatio as _calcCollatRatio, maxPethDraw, maxEthDraw, maxDai } from \"./helpers\";\nvar MKR = Maker.MKR,\n    DAI = Maker.DAI;\n\nvar toBigNumber = function toBigNumber(num) {\n  return new BigNumber(num);\n};\n\nvar MakerCDP =\n/*#__PURE__*/\nfunction () {\n  function MakerCDP(cdpId, web3, services, sysVars) {\n    _classCallCheck(this, MakerCDP);\n\n    this.cdpId = cdpId;\n    this.cdp = {};\n    this.web3 = web3 || {};\n    this.ready = false;\n    this.doUpdate = 0;\n    this.cdps = [];\n    this.noProxy = sysVars.noProxy || false;\n    this.services = services || null;\n    this.needsUpdate = false;\n    this.closing = false;\n    this.opening = false;\n    this.migrated = false;\n    this.migrateCdpActive = false;\n    this.migrateCdpStage = 0;\n    this._liqPrice = toBigNumber(0);\n    this.isSafe = false;\n    this.debtValue = toBigNumber(0);\n    this._collatRatio = 0;\n    this.ethCollateral = toBigNumber(0);\n    this.pethCollateral = toBigNumber(0);\n    this._usdCollateral = toBigNumber(0);\n    this._governanceFee = toBigNumber(0);\n  } // Getters\n\n\n  _createClass(MakerCDP, [{\n    key: \"init\",\n    // Methods\n    value: function () {\n      var _init = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var cdpId,\n            _args = arguments;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                cdpId = _args.length > 0 && _args[0] !== undefined ? _args[0] : this.cdpId;\n                _context.next = 3;\n                return this.updateValues(cdpId);\n\n              case 3:\n                _context.next = 5;\n                return this.cdpService.getGovernanceFee(this.cdpId, MKR);\n\n              case 5:\n                this._governanceFee = _context.sent.toBigNumber();\n                this.ready = true;\n                return _context.abrupt(\"return\", this);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"updateValues\",\n    value: function () {\n      var _updateValues = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var cdpId,\n            liqPrice,\n            _args2 = arguments;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                cdpId = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : this.cdpId;\n                _context2.next = 3;\n                return this.services.getProxy();\n\n              case 3:\n                this._proxyAddress = _context2.sent;\n                this.noProxy = this._proxyAddress === null;\n\n                if (!this._proxyAddress) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                _context2.next = 8;\n                return this.services.getCdp(cdpId, this._proxyAddress);\n\n              case 8:\n                this.cdp = _context2.sent;\n                _context2.next = 14;\n                break;\n\n              case 11:\n                _context2.next = 13;\n                return this.services.getCdp(cdpId, false);\n\n              case 13:\n                this.cdp = _context2.sent;\n\n              case 14:\n                _context2.next = 16;\n                return this.cdp.getLiquidationPrice();\n\n              case 16:\n                liqPrice = _context2.sent;\n                this._liqPrice = liqPrice.toBigNumber().toFixed(2);\n                _context2.next = 20;\n                return this.cdp.isSafe();\n\n              case 20:\n                this.isSafe = _context2.sent;\n                _context2.next = 23;\n                return this.cdp.getDebtValue();\n\n              case 23:\n                this.debtValue = _context2.sent.toBigNumber();\n                _context2.next = 26;\n                return this.cdp.getCollateralizationRatio();\n\n              case 26:\n                this._collatRatio = _context2.sent;\n                _context2.next = 29;\n                return this.cdp.getCollateralValue();\n\n              case 29:\n                this.ethCollateral = _context2.sent.toBigNumber();\n                _context2.next = 32;\n                return this.cdp.getCollateralValue(Maker.PETH);\n\n              case 32:\n                this.pethCollateral = _context2.sent.toBigNumber();\n                _context2.next = 35;\n                return this.cdp.getCollateralValue(Maker.USD);\n\n              case 35:\n                this._usdCollateral = _context2.sent.toBigNumber();\n\n              case 36:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function updateValues() {\n        return _updateValues.apply(this, arguments);\n      }\n\n      return updateValues;\n    }()\n  }, {\n    key: \"update\",\n    value: function () {\n      var _update = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var currentProxy;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!this.migrated) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                _context3.next = 3;\n                return this.proxyService.currentProxy();\n\n              case 3:\n                currentProxy = _context3.sent;\n\n                if (!currentProxy) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                this.migrated = false;\n                _context3.next = 8;\n                return this.cdpService.give(this.cdpId, this._proxyAddress);\n\n              case 8:\n                if (!this.needsUpdate) {\n                  _context3.next = 15;\n                  break;\n                }\n\n                this.opening = false;\n                this.needsUpdate = false;\n                _context3.next = 13;\n                return this.updateValues(this.cdpId);\n\n              case 13:\n                this.doUpdate++;\n                return _context3.abrupt(\"return\", this);\n\n              case 15:\n                return _context3.abrupt(\"return\", this);\n\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function update() {\n        return _update.apply(this, arguments);\n      }\n\n      return update;\n    }()\n  }, {\n    key: \"getProxy\",\n    value: function () {\n      var _getProxy = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.services.getProxy();\n\n              case 2:\n                this._proxyAddress = _context4.sent;\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getProxy() {\n        return _getProxy.apply(this, arguments);\n      }\n\n      return getProxy;\n    }()\n  }, {\n    key: \"migrateCdp\",\n    value: function () {\n      var _migrateCdp = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5() {\n        var currentProxy;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.getProxy();\n\n              case 2:\n                currentProxy = _context5.sent;\n\n                if (currentProxy) {\n                  _context5.next = 10;\n                  break;\n                }\n\n                this.needsUpdate = true;\n                _context5.next = 7;\n                return this.proxyService.ensureProxy();\n\n              case 7:\n                return _context5.abrupt(\"return\", _context5.sent);\n\n              case 10:\n                if (!this.needToFinishMigrating) {\n                  _context5.next = 14;\n                  break;\n                }\n\n                this.needsUpdate = true;\n                _context5.next = 14;\n                return this.cdpService.give(this.cdpId, this._proxyAddress);\n\n              case 14:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function migrateCdp() {\n        return _migrateCdp.apply(this, arguments);\n      }\n\n      return migrateCdp;\n    }()\n  }, {\n    key: \"openCdp\",\n    value: function () {\n      var _openCdp = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6(ethQty, daiQty) {\n        var newCdp;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (!(ethQty <= 0)) {\n                  _context6.next = 2;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", 0);\n\n              case 2:\n                if (this.hasProxy) {\n                  _context6.next = 10;\n                  break;\n                }\n\n                this.opening = true;\n                this.needsUpdate = true;\n                _context6.next = 7;\n                return this.cdpService.openProxyCdpLockEthAndDrawDai(ethQty, daiQty, null);\n\n              case 7:\n                newCdp = _context6.sent;\n                _context6.next = 15;\n                break;\n\n              case 10:\n                this.opening = true;\n                this.needsUpdate = true;\n                _context6.next = 14;\n                return this.cdpService.openProxyCdpLockEthAndDrawDai(ethQty, daiQty, this.proxyAddress);\n\n              case 14:\n                newCdp = _context6.sent;\n\n              case 15:\n                return _context6.abrupt(\"return\", newCdp.id);\n\n              case 16:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function openCdp(_x, _x2) {\n        return _openCdp.apply(this, arguments);\n      }\n\n      return openCdp;\n    }()\n  }, {\n    key: \"lockEth\",\n    value: function () {\n      var _lockEth = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7(amount) {\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.prev = 0;\n\n                if (!this.noProxy) {\n                  _context7.next = 3;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\");\n\n              case 3:\n                this.needsUpdate = true;\n                _context7.next = 6;\n                return this.cdpService.lockEthProxy(this._proxyAddress, this.cdpId, amount);\n\n              case 6:\n                _context7.next = 11;\n                break;\n\n              case 8:\n                _context7.prev = 8;\n                _context7.t0 = _context7[\"catch\"](0);\n                // eslint-disable-next-line\n                console.error(_context7.t0);\n\n              case 11:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[0, 8]]);\n      }));\n\n      function lockEth(_x3) {\n        return _lockEth.apply(this, arguments);\n      }\n\n      return lockEth;\n    }()\n  }, {\n    key: \"drawDai\",\n    value: function drawDai(amount) {\n      var acknowledgeBypass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (this.calcCollatRatio(this.ethCollateral, this.debtValue.plus(amount)).gt(2) || acknowledgeBypass) {\n        try {\n          if (this.noProxy) {\n            return;\n          }\n\n          this.needsUpdate = true;\n          this.cdpService.drawDaiProxy(this._proxyAddress, this.cdpId, amount);\n        } catch (e) {\n          // eslint-disable-next-line\n          console.error(e);\n        }\n      }\n    } // This should also have a acknowledgeBypass\n\n  }, {\n    key: \"freeEth\",\n    value: function () {\n      var _freeEth = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee8(amount) {\n        var acknowledgeBypass,\n            _args8 = arguments;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                acknowledgeBypass = _args8.length > 1 && _args8[1] !== undefined ? _args8[1] : false;\n\n                if (!(this.debtValue.eq(0) || this.calcCollatRatio(this.ethCollateral.minus(amount), this.debtValue).gt(1.5) || acknowledgeBypass)) {\n                  _context8.next = 13;\n                  break;\n                }\n\n                _context8.prev = 2;\n\n                if (!this.noProxy) {\n                  _context8.next = 5;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\");\n\n              case 5:\n                this.needsUpdate = true;\n                _context8.next = 8;\n                return this.cdpService.freeEthProxy(this._proxyAddress, this.cdpId, amount);\n\n              case 8:\n                _context8.next = 13;\n                break;\n\n              case 10:\n                _context8.prev = 10;\n                _context8.t0 = _context8[\"catch\"](2);\n                // eslint-disable-next-line\n                console.error(_context8.t0);\n\n              case 13:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this, [[2, 10]]);\n      }));\n\n      function freeEth(_x4) {\n        return _freeEth.apply(this, arguments);\n      }\n\n      return freeEth;\n    }()\n  }, {\n    key: \"wipeDai\",\n    value: function () {\n      var _wipeDai = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee9(amount) {\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.prev = 0;\n\n                if (!this.noProxy) {\n                  _context9.next = 3;\n                  break;\n                }\n\n                return _context9.abrupt(\"return\");\n\n              case 3:\n                this.needsUpdate = true;\n                _context9.next = 6;\n                return this.cdpService.wipeDaiProxy(this._proxyAddress, this.cdpId, amount);\n\n              case 6:\n                _context9.next = 11;\n                break;\n\n              case 8:\n                _context9.prev = 8;\n                _context9.t0 = _context9[\"catch\"](0);\n                // eslint-disable-next-line\n                console.error(_context9.t0);\n\n              case 11:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this, [[0, 8]]);\n      }));\n\n      function wipeDai(_x5) {\n        return _wipeDai.apply(this, arguments);\n      }\n\n      return wipeDai;\n    }()\n  }, {\n    key: \"canCloseCdp\",\n    value: function () {\n      var _canCloseCdp = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee10() {\n        var value;\n        return regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                value = this.debtValue.toNumber();\n                _context10.next = 3;\n                return this.cdpService.enoughMkrToWipe(this.cdpId, value);\n\n              case 3:\n                return _context10.abrupt(\"return\", _context10.sent);\n\n              case 4:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function canCloseCdp() {\n        return _canCloseCdp.apply(this, arguments);\n      }\n\n      return canCloseCdp;\n    }()\n  }, {\n    key: \"closeCdp\",\n    value: function () {\n      var _closeCdp = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee11() {\n        return regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.prev = 0;\n                this.needsUpdate = true;\n                this.closing = true;\n\n                if (!this.hasProxy) {\n                  _context11.next = 6;\n                  break;\n                }\n\n                _context11.next = 6;\n                return this.cdpService.shutProxy(this._proxyAddress, this.cdpId);\n\n              case 6:\n                _context11.next = 12;\n                break;\n\n              case 8:\n                _context11.prev = 8;\n                _context11.t0 = _context11[\"catch\"](0);\n                // eslint-disable-next-line\n                console.log('closeCdp Error:'); // eslint-disable-next-line\n\n                console.error(_context11.t0);\n\n              case 12:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this, [[0, 8]]);\n      }));\n\n      function closeCdp() {\n        return _closeCdp.apply(this, arguments);\n      }\n\n      return closeCdp;\n    }()\n  }, {\n    key: \"checkIfDestAddressHasProxy\",\n    value: function () {\n      var _checkIfDestAddressHasProxy = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee12(address) {\n        var proxy;\n        return regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.next = 2;\n                return this.getProxy();\n\n              case 2:\n                _context12.next = 4;\n                return this.proxyService.getProxyAddress(address);\n\n              case 4:\n                proxy = _context12.sent;\n                return _context12.abrupt(\"return\", proxy);\n\n              case 6:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function checkIfDestAddressHasProxy(_x6) {\n        return _checkIfDestAddressHasProxy.apply(this, arguments);\n      }\n\n      return checkIfDestAddressHasProxy;\n    }()\n  }, {\n    key: \"moveCdp\",\n    value: function () {\n      var _moveCdp = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee13(address) {\n        var proxy;\n        return regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.next = 2;\n                return this.getProxy();\n\n              case 2:\n                _context13.next = 4;\n                return this.proxyService.getProxyAddress(address);\n\n              case 4:\n                proxy = _context13.sent;\n\n                if (!proxy) {\n                  _context13.next = 12;\n                  break;\n                }\n\n                this.needsUpdate = true;\n                this.closing = true; // for the purpose of displaying to the user closing and moving are the same\n\n                _context13.next = 10;\n                return this.cdpService.giveProxy(this._proxyAddress, this.cdpId, proxy);\n\n              case 10:\n                _context13.next = 23;\n                break;\n\n              case 12:\n                if (this.noProxy) {\n                  _context13.next = 19;\n                  break;\n                }\n\n                this.needsUpdate = true;\n                this.closing = true;\n                _context13.next = 17;\n                return this.cdpService.giveProxy(this._proxyAddress, this.cdpId, address);\n\n              case 17:\n                _context13.next = 23;\n                break;\n\n              case 19:\n                this.needsUpdate = true;\n                this.closing = true;\n                _context13.next = 23;\n                return this.cdpService.give(this.cdpId, address);\n\n              case 23:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function moveCdp(_x7) {\n        return _moveCdp.apply(this, arguments);\n      }\n\n      return moveCdp;\n    }()\n  }, {\n    key: \"enoughMkrToWipe\",\n    value: function enoughMkrToWipe(amount) {\n      return this.cdpService.enoughMkrToWipe(amount, DAI.wei);\n    } // Calculations\n\n  }, {\n    key: \"toUSD\",\n    value: function toUSD(eth) {\n      var toUsd = this.services.toUSD(eth);\n\n      if (toUsd.lt(0)) {\n        return toBigNumber(0);\n      }\n\n      return toUsd;\n    }\n  }, {\n    key: \"toPeth\",\n    value: function toPeth(eth) {\n      return this.services.toPeth(eth);\n    }\n  }, {\n    key: \"maxDaiDraw\",\n    value: function maxDaiDraw() {\n      var tl = toBigNumber(this.ethPrice).times(toBigNumber(this.ethCollateral));\n      var tr = toBigNumber(this.debtValue).times(toBigNumber(this.liquidationRatio));\n      return tl.minus(tr).div(toBigNumber(this.ethPrice));\n    }\n  }, {\n    key: \"calcCollatRatio\",\n    value: function calcCollatRatio(ethQty, daiQty) {\n      if (ethQty <= 0 || daiQty <= 0) return toBigNumber(0);\n      return _calcCollatRatio(this.ethPrice, ethQty, daiQty);\n    }\n  }, {\n    key: \"calcLiquidationPrice\",\n    value: function calcLiquidationPrice(ethQty, daiQty) {\n      if (ethQty <= 0 || daiQty <= 0) return toBigNumber(0);\n      return _calcLiquidationPrice(ethQty, daiQty, this.ethPrice, this.liquidationRatio);\n    } // Helpers\n\n  }, {\n    key: \"approveDai\",\n    value: function () {\n      var _approveDai = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee14() {\n        return regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                _context14.next = 2;\n                return this.daiToken.approveUnlimited(this.proxyAddress);\n\n              case 2:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function approveDai() {\n        return _approveDai.apply(this, arguments);\n      }\n\n      return approveDai;\n    }()\n  }, {\n    key: \"approveMkr\",\n    value: function () {\n      var _approveMkr = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee15() {\n        return regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                _context15.next = 2;\n                return this.mkrToken.approveUnlimited(this.proxyAddress);\n\n              case 2:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function approveMkr() {\n        return _approveMkr.apply(this, arguments);\n      }\n\n      return approveMkr;\n    }()\n  }, {\n    key: \"getDaiBalances\",\n    value: function () {\n      var _getDaiBalances = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee16() {\n        return regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                _context16.next = 2;\n                return this.services.daiToken.balance();\n\n              case 2:\n                this.daiBalance = _context16.sent;\n                return _context16.abrupt(\"return\", this.daiBalance);\n\n              case 4:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function getDaiBalances() {\n        return _getDaiBalances.apply(this, arguments);\n      }\n\n      return getDaiBalances;\n    }() // Static Helpers\n\n  }, {\n    key: \"currentAddress\",\n    get: function get() {\n      return this.services.account.address;\n    }\n  }, {\n    key: \"liquidationPenalty\",\n    get: function get() {\n      return this.services.liquidationPenalty;\n    }\n  }, {\n    key: \"stabilityFee\",\n    get: function get() {\n      return this.services.stabilityFee;\n    }\n  }, {\n    key: \"ethPrice\",\n    get: function get() {\n      return this.services.ethPrice;\n    }\n  }, {\n    key: \"pethPrice\",\n    get: function get() {\n      return this.services._pethPrice;\n    }\n  }, {\n    key: \"wethToPethRatio\",\n    get: function get() {\n      return this.services.wethToPethRatio;\n    }\n  }, {\n    key: \"liquidationRatio\",\n    get: function get() {\n      return this.services.liquidationRatio;\n    }\n  }, {\n    key: \"proxyAddress\",\n    get: function get() {\n      return this.services._proxyAddress;\n    }\n  }, {\n    key: \"hasProxy\",\n    get: function get() {\n      return this.services.hasProxy;\n    }\n  }, {\n    key: \"proxyAllowanceDai\",\n    get: function get() {\n      return this.services.proxyAllowanceDai;\n    }\n  }, {\n    key: \"proxyAllowanceMkr\",\n    get: function get() {\n      return this.services.proxyAllowanceMkr;\n    }\n  }, {\n    key: \"daiToken\",\n    get: function get() {\n      return this.services._daiToken;\n    }\n  }, {\n    key: \"daiBalance\",\n    get: function get() {\n      return this.services.daiBalance;\n    }\n  }, {\n    key: \"mkrToken\",\n    get: function get() {\n      return this.services._mkrToken;\n    }\n  }, {\n    key: \"mkrBalance\",\n    get: function get() {\n      return this.services.mkrBalance;\n    }\n  }, {\n    key: \"proxyService\",\n    get: function get() {\n      return this.services._proxyService;\n    }\n  }, {\n    key: \"cdpService\",\n    get: function get() {\n      return this.services._cdpService;\n    }\n  }, {\n    key: \"minEth\",\n    get: function get() {\n      return this.services.minEth();\n    }\n  }, {\n    key: \"pethMin\",\n    get: function get() {\n      return this.services.pethMin;\n    } // CDP Instance/item values\n\n  }, {\n    key: \"zeroDebt\",\n    get: function get() {\n      return toBigNumber(this.debtValue).eq(0);\n    }\n  }, {\n    key: \"usdCollateral\",\n    get: function get() {\n      return this.toUSD(this.ethCollateral);\n    }\n  }, {\n    key: \"ethCollateralNum\",\n    get: function get() {\n      return this.ethCollateral.toNumber();\n    }\n  }, {\n    key: \"collatRatio\",\n    get: function get() {\n      return this._collatRatio;\n    }\n  }, {\n    key: \"liquidationPrice\",\n    get: function get() {\n      return this._liqPrice;\n    }\n  }, {\n    key: \"governanceFeeOwed\",\n    get: function get() {\n      return this._governanceFee;\n    }\n  }, {\n    key: \"maxDai\",\n    get: function get() {\n      if (this.ethPrice && this.ethCollateral && this.liquidationRatio && this.debtValue) {\n        return maxDai(this.ethPrice, this.ethCollateral, this.liquidationRatio.plus(0.001), this.debtValue);\n      }\n\n      return toBigNumber(0);\n    }\n  }, {\n    key: \"maxEthDraw\",\n    get: function get() {\n      if (this.ethPrice && this.debtValue && this.liquidationRatio) {\n        if (this.zeroDebt) {\n          return maxEthDraw(this.ethCollateral, this.liquidationRatio, this.debtValue, this.ethPrice, this.minEth.times(0));\n        }\n\n        return maxEthDraw(this.ethCollateral, this.liquidationRatio, this.debtValue, this.ethPrice);\n      }\n\n      return toBigNumber(0);\n    }\n  }, {\n    key: \"maxPethDraw\",\n    get: function get() {\n      if (this.pethPrice && this.pethCollateral && this.liquidationRatio) {\n        if (this.zeroDebt) {\n          return maxPethDraw(this.pethCollateral, this.liquidationRatio, this.debtValue, this.pethPrice, this.pethMin.times(0));\n        }\n\n        return maxPethDraw(this.pethCollateral, this.liquidationRatio, this.debtValue, this.pethPrice);\n      }\n\n      return toBigNumber(0);\n    }\n  }, {\n    key: \"maxUsdDraw\",\n    get: function get() {\n      if (this.pethPrice && this.pethCollateral && this.liquidationRatio) {\n        return this.toUSD(this.maxEthDraw);\n      }\n\n      return toBigNumber(0);\n    }\n  }, {\n    key: \"needToFinishMigrating\",\n    get: function get() {\n      return this._proxyAddress && this.noProxy;\n    }\n  }], [{\n    key: \"toNumber\",\n    value: function toNumber(val) {\n      if (BigNumber.isBigNumber(val)) {\n        return val.toNumber();\n      }\n\n      return toBigNumber(val).toNumber();\n    }\n  }, {\n    key: \"displayPercentValue\",\n    value: function displayPercentValue(raw) {\n      if (!BigNumber.isBigNumber(raw)) raw = new BigNumber(raw);\n      return raw.times(100).toString();\n    }\n  }, {\n    key: \"displayFixedValue\",\n    value: function displayFixedValue(raw) {\n      var decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n      var round = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      if (!BigNumber.isBigNumber(raw)) raw = new BigNumber(raw);\n      if (round) return raw.toFixed(decimals, BigNumber.ROUND_DOWN).toString();\n      return raw.toFixed(decimals).toString();\n    }\n  }]);\n\n  return MakerCDP;\n}();\n\nexport { MakerCDP as default };",{"version":3,"sources":["/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/dapps/MakerDai/MakerCDP.js"],"names":["Maker","BigNumber","calcLiquidationPrice","calcCollatRatio","maxPethDraw","maxEthDraw","maxDai","MKR","DAI","toBigNumber","num","MakerCDP","cdpId","web3","services","sysVars","cdp","ready","doUpdate","cdps","noProxy","needsUpdate","closing","opening","migrated","migrateCdpActive","migrateCdpStage","_liqPrice","isSafe","debtValue","_collatRatio","ethCollateral","pethCollateral","_usdCollateral","_governanceFee","updateValues","cdpService","getGovernanceFee","getProxy","_proxyAddress","getCdp","getLiquidationPrice","liqPrice","toFixed","getDebtValue","getCollateralizationRatio","getCollateralValue","PETH","USD","proxyService","currentProxy","give","ensureProxy","needToFinishMigrating","ethQty","daiQty","hasProxy","openProxyCdpLockEthAndDrawDai","newCdp","proxyAddress","id","amount","lockEthProxy","console","error","acknowledgeBypass","plus","gt","drawDaiProxy","e","eq","minus","freeEthProxy","wipeDaiProxy","value","toNumber","enoughMkrToWipe","shutProxy","log","address","getProxyAddress","proxy","giveProxy","wei","eth","toUsd","toUSD","lt","toPeth","tl","ethPrice","times","tr","liquidationRatio","div","daiToken","approveUnlimited","mkrToken","balance","daiBalance","account","liquidationPenalty","stabilityFee","_pethPrice","wethToPethRatio","proxyAllowanceDai","proxyAllowanceMkr","_daiToken","_mkrToken","mkrBalance","_proxyService","_cdpService","minEth","pethMin","zeroDebt","pethPrice","val","isBigNumber","raw","toString","decimals","round","ROUND_DOWN"],"mappings":"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","sourcesContent":["import Maker from '@makerdao/dai';\nimport BigNumber from 'bignumber.js';\nimport {\n  calcLiquidationPrice,\n  calcCollatRatio,\n  maxPethDraw,\n  maxEthDraw,\n  maxDai\n} from './helpers';\nconst { MKR, DAI } = Maker;\n\nconst toBigNumber = num => {\n  return new BigNumber(num);\n};\n\nexport default class MakerCDP {\n  constructor(cdpId, web3, services, sysVars) {\n    this.cdpId = cdpId;\n    this.cdp = {};\n    this.web3 = web3 || {};\n    this.ready = false;\n    this.doUpdate = 0;\n    this.cdps = [];\n    this.noProxy = sysVars.noProxy || false;\n    this.services = services || null;\n    this.needsUpdate = false;\n    this.closing = false;\n    this.opening = false;\n    this.migrated = false;\n    this.migrateCdpActive = false;\n    this.migrateCdpStage = 0;\n\n    this._liqPrice = toBigNumber(0);\n    this.isSafe = false;\n    this.debtValue = toBigNumber(0);\n    this._collatRatio = 0;\n    this.ethCollateral = toBigNumber(0);\n    this.pethCollateral = toBigNumber(0);\n    this._usdCollateral = toBigNumber(0);\n    this._governanceFee = toBigNumber(0);\n  }\n\n  // Getters\n  get currentAddress() {\n    return this.services.account.address;\n  }\n\n  get liquidationPenalty() {\n    return this.services.liquidationPenalty;\n  }\n\n  get stabilityFee() {\n    return this.services.stabilityFee;\n  }\n\n  get ethPrice() {\n    return this.services.ethPrice;\n  }\n\n  get pethPrice() {\n    return this.services._pethPrice;\n  }\n\n  get wethToPethRatio() {\n    return this.services.wethToPethRatio;\n  }\n\n  get liquidationRatio() {\n    return this.services.liquidationRatio;\n  }\n\n  get proxyAddress() {\n    return this.services._proxyAddress;\n  }\n\n  get hasProxy() {\n    return this.services.hasProxy;\n  }\n\n  get proxyAllowanceDai() {\n    return this.services.proxyAllowanceDai;\n  }\n\n  get proxyAllowanceMkr() {\n    return this.services.proxyAllowanceMkr;\n  }\n\n  get daiToken() {\n    return this.services._daiToken;\n  }\n\n  get daiBalance() {\n    return this.services.daiBalance;\n  }\n\n  get mkrToken() {\n    return this.services._mkrToken;\n  }\n\n  get mkrBalance() {\n    return this.services.mkrBalance;\n  }\n\n  get proxyService() {\n    return this.services._proxyService;\n  }\n\n  get cdpService() {\n    return this.services._cdpService;\n  }\n\n  get minEth() {\n    return this.services.minEth();\n  }\n\n  get pethMin() {\n    return this.services.pethMin;\n  }\n\n  // CDP Instance/item values\n\n  get zeroDebt() {\n    return toBigNumber(this.debtValue).eq(0);\n  }\n\n  get usdCollateral() {\n    return this.toUSD(this.ethCollateral);\n  }\n\n  get ethCollateralNum() {\n    return this.ethCollateral.toNumber();\n  }\n\n  get collatRatio() {\n    return this._collatRatio;\n  }\n\n  get liquidationPrice() {\n    return this._liqPrice;\n  }\n\n  get governanceFeeOwed() {\n    return this._governanceFee;\n  }\n\n  get maxDai() {\n    if (\n      this.ethPrice &&\n      this.ethCollateral &&\n      this.liquidationRatio &&\n      this.debtValue\n    ) {\n      return maxDai(\n        this.ethPrice,\n        this.ethCollateral,\n        this.liquidationRatio.plus(0.001),\n        this.debtValue\n      );\n    }\n    return toBigNumber(0);\n  }\n\n  get maxEthDraw() {\n    if (this.ethPrice && this.debtValue && this.liquidationRatio) {\n      if (this.zeroDebt) {\n        return maxEthDraw(\n          this.ethCollateral,\n          this.liquidationRatio,\n          this.debtValue,\n          this.ethPrice,\n          this.minEth.times(0)\n        );\n      }\n      return maxEthDraw(\n        this.ethCollateral,\n        this.liquidationRatio,\n        this.debtValue,\n        this.ethPrice\n      );\n    }\n    return toBigNumber(0);\n  }\n\n  get maxPethDraw() {\n    if (this.pethPrice && this.pethCollateral && this.liquidationRatio) {\n      if (this.zeroDebt) {\n        return maxPethDraw(\n          this.pethCollateral,\n          this.liquidationRatio,\n          this.debtValue,\n          this.pethPrice,\n          this.pethMin.times(0)\n        );\n      }\n      return maxPethDraw(\n        this.pethCollateral,\n        this.liquidationRatio,\n        this.debtValue,\n        this.pethPrice\n      );\n    }\n    return toBigNumber(0);\n  }\n\n  get maxUsdDraw() {\n    if (this.pethPrice && this.pethCollateral && this.liquidationRatio) {\n      return this.toUSD(this.maxEthDraw);\n    }\n    return toBigNumber(0);\n  }\n\n  get needToFinishMigrating() {\n    return this._proxyAddress && this.noProxy;\n  }\n\n  // Methods\n  async init(cdpId = this.cdpId) {\n    await this.updateValues(cdpId);\n    this._governanceFee = (await this.cdpService.getGovernanceFee(\n      this.cdpId,\n      MKR\n    )).toBigNumber();\n\n    this.ready = true;\n    return this;\n  }\n\n  async updateValues(cdpId = this.cdpId) {\n    this._proxyAddress = await this.services.getProxy();\n    this.noProxy = this._proxyAddress === null;\n    if (this._proxyAddress) {\n      this.cdp = await this.services.getCdp(cdpId, this._proxyAddress);\n    } else {\n      this.cdp = await this.services.getCdp(cdpId, false);\n    }\n    const liqPrice = await this.cdp.getLiquidationPrice();\n    this._liqPrice = liqPrice.toBigNumber().toFixed(2);\n    this.isSafe = await this.cdp.isSafe();\n    this.debtValue = (await this.cdp.getDebtValue()).toBigNumber();\n    this._collatRatio = await this.cdp.getCollateralizationRatio();\n    this.ethCollateral = (await this.cdp.getCollateralValue()).toBigNumber();\n    this.pethCollateral = (await this.cdp.getCollateralValue(\n      Maker.PETH\n    )).toBigNumber();\n    this._usdCollateral = (await this.cdp.getCollateralValue(\n      Maker.USD\n    )).toBigNumber();\n  }\n\n  async update() {\n    if (this.migrated) {\n      const currentProxy = await this.proxyService.currentProxy();\n      if (currentProxy) {\n        this.migrated = false;\n        await this.cdpService.give(this.cdpId, this._proxyAddress);\n      }\n    }\n    if (this.needsUpdate) {\n      this.opening = false;\n      this.needsUpdate = false;\n      await this.updateValues(this.cdpId);\n      this.doUpdate++;\n      return this;\n    }\n    return this;\n  }\n\n  async getProxy() {\n    this._proxyAddress = await this.services.getProxy();\n  }\n\n  async migrateCdp() {\n    const currentProxy = await this.getProxy();\n    if (!currentProxy) {\n      this.needsUpdate = true;\n      return await this.proxyService.ensureProxy();\n    } else if (this.needToFinishMigrating) {\n      this.needsUpdate = true;\n      await this.cdpService.give(this.cdpId, this._proxyAddress);\n    }\n  }\n\n  async openCdp(ethQty, daiQty) {\n    if (ethQty <= 0) return 0;\n    let newCdp;\n    if (!this.hasProxy) {\n      this.opening = true;\n      this.needsUpdate = true;\n      newCdp = await this.cdpService.openProxyCdpLockEthAndDrawDai(\n        ethQty,\n        daiQty,\n        null\n      );\n    } else {\n      this.opening = true;\n      this.needsUpdate = true;\n      newCdp = await this.cdpService.openProxyCdpLockEthAndDrawDai(\n        ethQty,\n        daiQty,\n        this.proxyAddress\n      );\n    }\n\n    return newCdp.id;\n  }\n\n  async lockEth(amount) {\n    try {\n      if (this.noProxy) {\n        return;\n      }\n      this.needsUpdate = true;\n      await this.cdpService.lockEthProxy(\n        this._proxyAddress,\n        this.cdpId,\n        amount\n      );\n    } catch (e) {\n      // eslint-disable-next-line\n      console.error(e);\n    }\n  }\n\n  drawDai(amount, acknowledgeBypass = false) {\n    if (\n      this.calcCollatRatio(this.ethCollateral, this.debtValue.plus(amount)).gt(\n        2\n      ) ||\n      acknowledgeBypass\n    ) {\n      try {\n        if (this.noProxy) {\n          return;\n        }\n        this.needsUpdate = true;\n        this.cdpService.drawDaiProxy(this._proxyAddress, this.cdpId, amount);\n      } catch (e) {\n        // eslint-disable-next-line\n        console.error(e);\n      }\n    }\n  }\n\n  // This should also have a acknowledgeBypass\n  async freeEth(amount, acknowledgeBypass = false) {\n    if (\n      this.debtValue.eq(0) ||\n      this.calcCollatRatio(this.ethCollateral.minus(amount), this.debtValue).gt(\n        1.5\n      ) ||\n      acknowledgeBypass\n    ) {\n      try {\n        if (this.noProxy) {\n          return;\n        }\n        this.needsUpdate = true;\n        await this.cdpService.freeEthProxy(\n          this._proxyAddress,\n          this.cdpId,\n          amount\n        );\n      } catch (e) {\n        // eslint-disable-next-line\n        console.error(e);\n      }\n    }\n  }\n\n  async wipeDai(amount) {\n    try {\n      if (this.noProxy) {\n        return;\n      }\n      this.needsUpdate = true;\n      await this.cdpService.wipeDaiProxy(\n        this._proxyAddress,\n        this.cdpId,\n        amount\n      );\n    } catch (e) {\n      // eslint-disable-next-line\n      console.error(e);\n    }\n  }\n\n  async canCloseCdp() {\n    const value = this.debtValue.toNumber();\n    return await this.cdpService.enoughMkrToWipe(this.cdpId, value);\n  }\n\n  async closeCdp() {\n    try {\n      this.needsUpdate = true;\n      this.closing = true;\n\n      if (this.hasProxy) {\n        await this.cdpService.shutProxy(this._proxyAddress, this.cdpId);\n      }\n    } catch (e) {\n      // eslint-disable-next-line\n      console.log('closeCdp Error:');\n      // eslint-disable-next-line\n      console.error(e);\n    }\n    // }\n  }\n\n  async checkIfDestAddressHasProxy(address) {\n    await this.getProxy();\n    const proxy = await this.proxyService.getProxyAddress(address);\n    return proxy;\n  }\n\n  async moveCdp(address) {\n    await this.getProxy();\n    const proxy = await this.proxyService.getProxyAddress(address);\n    if (proxy) {\n      this.needsUpdate = true;\n      this.closing = true; // for the purpose of displaying to the user closing and moving are the same\n      await this.cdpService.giveProxy(this._proxyAddress, this.cdpId, proxy);\n    } else if (!this.noProxy) {\n      this.needsUpdate = true;\n      this.closing = true;\n      await this.cdpService.giveProxy(this._proxyAddress, this.cdpId, address);\n    } else {\n      this.needsUpdate = true;\n      this.closing = true;\n      await this.cdpService.give(this.cdpId, address);\n    }\n  }\n\n  enoughMkrToWipe(amount) {\n    return this.cdpService.enoughMkrToWipe(amount, DAI.wei);\n  }\n\n  // Calculations\n  toUSD(eth) {\n    const toUsd = this.services.toUSD(eth);\n    if (toUsd.lt(0)) {\n      return toBigNumber(0);\n    }\n    return toUsd;\n  }\n\n  toPeth(eth) {\n    return this.services.toPeth(eth);\n  }\n\n  maxDaiDraw() {\n    const tl = toBigNumber(this.ethPrice).times(\n      toBigNumber(this.ethCollateral)\n    );\n    const tr = toBigNumber(this.debtValue).times(\n      toBigNumber(this.liquidationRatio)\n    );\n    return tl.minus(tr).div(toBigNumber(this.ethPrice));\n  }\n\n  calcCollatRatio(ethQty, daiQty) {\n    if (ethQty <= 0 || daiQty <= 0) return toBigNumber(0);\n    return calcCollatRatio(this.ethPrice, ethQty, daiQty);\n  }\n\n  calcLiquidationPrice(ethQty, daiQty) {\n    if (ethQty <= 0 || daiQty <= 0) return toBigNumber(0);\n    return calcLiquidationPrice(\n      ethQty,\n      daiQty,\n      this.ethPrice,\n      this.liquidationRatio\n    );\n  }\n\n  // Helpers\n  async approveDai() {\n    await this.daiToken.approveUnlimited(this.proxyAddress);\n  }\n\n  async approveMkr() {\n    await this.mkrToken.approveUnlimited(this.proxyAddress);\n  }\n\n  async getDaiBalances() {\n    this.daiBalance = await this.services.daiToken.balance();\n    return this.daiBalance;\n  }\n\n  // Static Helpers\n  static toNumber(val) {\n    if (BigNumber.isBigNumber(val)) {\n      return val.toNumber();\n    }\n    return toBigNumber(val).toNumber();\n  }\n\n  static displayPercentValue(raw) {\n    if (!BigNumber.isBigNumber(raw)) raw = new BigNumber(raw);\n    return raw.times(100).toString();\n  }\n\n  static displayFixedValue(raw, decimals = 3, round = true) {\n    if (!BigNumber.isBigNumber(raw)) raw = new BigNumber(raw);\n    if (round) return raw.toFixed(decimals, BigNumber.ROUND_DOWN).toString();\n    return raw.toFixed(decimals).toString();\n  }\n}\n"]}]}