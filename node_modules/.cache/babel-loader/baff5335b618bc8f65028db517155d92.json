{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/layouts/AccessWalletLayout/components/FinneyModal/FinneyModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/layouts/AccessWalletLayout/components/FinneyModal/FinneyModal.vue","mtime":1573477611664},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { MewConnectWallet } from '@/wallets';\nimport { Toast } from '@/helpers';\nimport { mapState } from 'vuex';\nexport default {\n  data: function data() {\n    return {\n      qrcode: ''\n    };\n  },\n  computed: _objectSpread({}, mapState(['web3'])),\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$refs.finneyModal.$on('show', function () {\n      new MewConnectWallet(_this.generateQr).then(function (wallet) {\n        if (!_this.web3.eth) _this.$store.dispatch('setWeb3Instance');\n\n        _this.$store.dispatch('decryptWallet', [wallet]).then(function () {\n          _this.$router.push({\n            path: 'interface'\n          });\n        });\n      }).catch(function (e) {\n        Toast.responseHandler(e, false);\n      });\n    });\n  },\n  methods: {\n    generateQr: function generateQr(code) {\n      this.qrcode = code;\n    }\n  }\n};",{"version":3,"sources":["FinneyModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA,SAAA,gBAAA,QAAA,WAAA;AACA,SAAA,KAAA,QAAA,WAAA;AACA,SAAA,QAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,MAAA,EAAA;AADA,KAAA;AAGA,GALA;AAMA,EAAA,QAAA,oBACA,QAAA,CAAA,CAAA,MAAA,CAAA,CADA,CANA;AASA,EAAA,OATA,qBASA;AAAA;;AACA,SAAA,KAAA,CAAA,WAAA,CAAA,GAAA,CAAA,MAAA,EAAA,YAAA;AACA,UAAA,gBAAA,CAAA,KAAA,CAAA,UAAA,EACA,IADA,CACA,UAAA,MAAA,EAAA;AACA,YAAA,CAAA,KAAA,CAAA,IAAA,CAAA,GAAA,EAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,iBAAA;;AACA,QAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,eAAA,EAAA,CAAA,MAAA,CAAA,EAAA,IAAA,CAAA,YAAA;AACA,UAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,YAAA,IAAA,EAAA;AADA,WAAA;AAGA,SAJA;AAKA,OARA,EASA,KATA,CASA,UAAA,CAAA,EAAA;AACA,QAAA,KAAA,CAAA,eAAA,CAAA,CAAA,EAAA,KAAA;AACA,OAXA;AAYA,KAbA;AAcA,GAxBA;AAyBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,IADA,EACA;AACA,WAAA,MAAA,GAAA,IAAA;AACA;AAHA;AAzBA,CAAA","sourcesContent":["<template>\n  <b-modal\n    ref=\"finneyModal\"\n    title=\"FINNEY Connect\"\n    hide-footer\n    class=\"bootstrap-modal nopadding\"\n    centered\n    static\n    lazy\n  >\n    <div class=\"finney-desktop\">\n      <div class=\"modal-content-right\">\n        <p>\n          To connect, scan the QR code from <b>FinneyWallet</b> app on your\n          <b>FINNEY™ BLOCKCHAIN SMARTPHONE</b>\n        </p>\n        <qrcode\n          :value=\"qrcode\"\n          :options=\"{ size: 186 }\"\n          class=\"qrcode-container\"\n        />\n        <div class=\"text-container\">\n          <a\n            href=\"http://shop.sirinlabs.com?rfsn=2397639.54fdf&utm_source=refersion&utm_medium=affiliate&utm_campaign=2397639.54fdf\"\n            target=\"blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <p>\n              Get your\n            </p>\n            <h3>\n              FINNEY™\n            </h3>\n            <p>\n              now\n            </p>\n          </a>\n        </div>\n      </div>\n    </div>\n    <div v-if=\"false\" class=\"finney-mobile\">\n      mobile\n    </div>\n  </b-modal>\n</template>\n\n<script>\nimport { MewConnectWallet } from '@/wallets';\nimport { Toast } from '@/helpers';\nimport { mapState } from 'vuex';\n\nexport default {\n  data() {\n    return {\n      qrcode: ''\n    };\n  },\n  computed: {\n    ...mapState(['web3'])\n  },\n  mounted() {\n    this.$refs.finneyModal.$on('show', () => {\n      new MewConnectWallet(this.generateQr)\n        .then(wallet => {\n          if (!this.web3.eth) this.$store.dispatch('setWeb3Instance');\n          this.$store.dispatch('decryptWallet', [wallet]).then(() => {\n            this.$router.push({\n              path: 'interface'\n            });\n          });\n        })\n        .catch(e => {\n          Toast.responseHandler(e, false);\n        });\n    });\n  },\n  methods: {\n    generateQr(code) {\n      this.qrcode = code;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'FinneyModal.scss';\n</style>\n"],"sourceRoot":"src/layouts/AccessWalletLayout/components/FinneyModal"}]}