{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/containers/ConfirmationContainer/components/SuccessModal/SuccessModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/containers/ConfirmationContainer/components/SuccessModal/SuccessModal.vue","mtime":1574664278270},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/thread-loader/dist/cjs.js","mtime":1574664277654},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js","mtime":1574664275010},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js","mtime":1574664277774}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport StandardButton from '@/components/Buttons/StandardButton';\nimport { mapState } from 'vuex';\nimport { Misc } from '@/helpers';\nexport default {\n  components: {\n    'standard-button': StandardButton\n  },\n  props: {\n    message: {\n      type: String,\n      default: ''\n    },\n    linkMessage: {\n      type: String,\n      default: ''\n    },\n    linkTo: {\n      type: String,\n      default: '/'\n    },\n    etherscanLink: {\n      type: String,\n      default: null\n    },\n    successTitle: {\n      type: String,\n      default: null\n    }\n  },\n  computed: _objectSpread({}, mapState(['network']), {\n    buttonCheckEtherscan: function buttonCheckEtherscan() {\n      return {\n        // eslint-disable-next-line\n        title: \"Check Status on \".concat(this.explorrerName),\n        buttonStyle: 'green-border',\n        fullWidth: true\n      };\n    },\n    buttonOk: function buttonOk() {\n      return {\n        title: this.linkMessage === '' ? 'Ok' : this.linkMessage,\n        buttonStyle: 'green',\n        fullWidth: true\n      };\n    },\n    explorrerName: function explorrerName() {\n      return Misc.getService(this.network.type.blockExplorerTX);\n    }\n  }),\n  methods: {\n    hideModal: function hideModal() {\n      if (this.linkTo !== '/') {\n        this.$router.push({\n          path: this.linkTo\n        });\n      } else if (this.linkTo === '/' && this.successTitle === 'Congratulations') {\n        this.$router.push({\n          path: '/'\n        });\n      }\n\n      this.$refs.success.hide();\n    }\n  }\n};",{"version":3,"sources":["SuccessModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,OAAA,cAAA,MAAA,qCAAA;AACA,SAAA,QAAA,QAAA,MAAA;AACA,SAAA,IAAA,QAAA,WAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,uBAAA;AADA,GADA;AAIA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KATA;AAaA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAbA;AAiBA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAjBA,GAJA;AA0BA,EAAA,QAAA,oBACA,QAAA,CAAA,CAAA,SAAA,CAAA,CADA;AAEA,IAAA,oBAFA,kCAEA;AACA,aAAA;AACA;AACA,QAAA,KAAA,4BAAA,KAAA,aAAA,CAFA;AAGA,QAAA,WAAA,EAAA,cAHA;AAIA,QAAA,SAAA,EAAA;AAJA,OAAA;AAMA,KATA;AAUA,IAAA,QAVA,sBAUA;AACA,aAAA;AACA,QAAA,KAAA,EAAA,KAAA,WAAA,KAAA,EAAA,GAAA,IAAA,GAAA,KAAA,WADA;AAEA,QAAA,WAAA,EAAA,OAFA;AAGA,QAAA,SAAA,EAAA;AAHA,OAAA;AAKA,KAhBA;AAiBA,IAAA,aAjBA,2BAiBA;AACA,aAAA,IAAA,CAAA,UAAA,CAAA,KAAA,OAAA,CAAA,IAAA,CAAA,eAAA,CAAA;AACA;AAnBA,IA1BA;AA+CA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,UAAA,KAAA,MAAA,KAAA,GAAA,EAAA;AACA,aAAA,OAAA,CAAA,IAAA,CAAA;AAAA,UAAA,IAAA,EAAA,KAAA;AAAA,SAAA;AACA,OAFA,MAEA,IACA,KAAA,MAAA,KAAA,GAAA,IACA,KAAA,YAAA,KAAA,iBAFA,EAGA;AACA,aAAA,OAAA,CAAA,IAAA,CAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA;AACA;;AACA,WAAA,KAAA,CAAA,OAAA,CAAA,IAAA;AACA;AAXA;AA/CA,CAAA","sourcesContent":["<template>\n  <b-modal\n    ref=\"success\"\n    centered\n    hide-footer\n    hide-header\n    class=\"bootstrap-modal no-padding\"\n    static\n    lazy\n  >\n    <div class=\"modal-content-block\">\n      <img src=\"@/assets/images/modal/garlands.png\" />\n      <div class=\"d-block text-center\">\n        <i class=\"check-icon fa fa-check\" aria-hidden=\"true\" />\n        <h2 class=\"title\">\n          {{ successTitle ? successTitle : $t('confirmation.success') }}\n        </h2>\n        <p>{{ message }}</p>\n      </div>\n\n      <div class=\"buttons\">\n        <a\n          v-if=\"etherscanLink\"\n          :href=\"etherscanLink\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <standard-button :options=\"buttonCheckEtherscan\" />\n        </a>\n        <standard-button :options=\"buttonOk\" @click.native=\"hideModal\" />\n      </div>\n    </div>\n    <!-- .modal-content-block -->\n  </b-modal>\n</template>\n\n<script>\nimport StandardButton from '@/components/Buttons/StandardButton';\nimport { mapState } from 'vuex';\nimport { Misc } from '@/helpers';\n\nexport default {\n  components: {\n    'standard-button': StandardButton\n  },\n  props: {\n    message: {\n      type: String,\n      default: ''\n    },\n    linkMessage: {\n      type: String,\n      default: ''\n    },\n    linkTo: {\n      type: String,\n      default: '/'\n    },\n    etherscanLink: {\n      type: String,\n      default: null\n    },\n    successTitle: {\n      type: String,\n      default: null\n    }\n  },\n  computed: {\n    ...mapState(['network']),\n    buttonCheckEtherscan() {\n      return {\n        // eslint-disable-next-line\n        title: `Check Status on ${this.explorrerName}`,\n        buttonStyle: 'green-border',\n        fullWidth: true\n      };\n    },\n    buttonOk() {\n      return {\n        title: this.linkMessage === '' ? 'Ok' : this.linkMessage,\n        buttonStyle: 'green',\n        fullWidth: true\n      };\n    },\n    explorrerName() {\n      return Misc.getService(this.network.type.blockExplorerTX);\n    }\n  },\n  methods: {\n    hideModal() {\n      if (this.linkTo !== '/') {\n        this.$router.push({ path: this.linkTo });\n      } else if (\n        this.linkTo === '/' &&\n        this.successTitle === 'Congratulations'\n      ) {\n        this.$router.push({ path: '/' });\n      }\n      this.$refs.success.hide();\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'SuccessModal';\n</style>\n"],"sourceRoot":"src/containers/ConfirmationContainer/components/SuccessModal"}]}