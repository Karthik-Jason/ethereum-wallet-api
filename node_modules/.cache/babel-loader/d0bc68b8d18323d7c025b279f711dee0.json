{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/eslint-loader/index.js??ref--13-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/partners/helpers/qrCodeBuilder.js","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/partners/helpers/qrCodeBuilder.js","mtime":1574664278314},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/thread-loader/dist/cjs.js","mtime":1574664277654},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js","mtime":1574664275010},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/eslint-loader/index.js","mtime":1574664275986}],"contextDependencies":[],"result":["var BTC = function BTC(addr) {\n  return \"bitcoin:\".concat(addr);\n};\n\nvar BCH = function BCH(addr) {\n  return \"bitcoincash:\".concat(addr);\n};\n\nexport default (function (address, coin) {\n  switch (coin) {\n    case 'BTC':\n      return BTC(address);\n\n    case 'BCH':\n      return BCH(address);\n\n    default:\n      return address;\n  }\n});",{"version":3,"sources":["/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/partners/helpers/qrCodeBuilder.js"],"names":["BTC","addr","BCH","address","coin"],"mappings":"AAAA,IAAMA,GAAG,GAAG,SAANA,GAAM,CAAAC,IAAI,EAAI;AAClB,2BAAkBA,IAAlB;AACD,CAFD;;AAIA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAAAD,IAAI,EAAI;AAClB,+BAAsBA,IAAtB;AACD,CAFD;;AAIA,gBAAe,UAACE,OAAD,EAAUC,IAAV,EAAmB;AAChC,UAAQA,IAAR;AACE,SAAK,KAAL;AACE,aAAOJ,GAAG,CAACG,OAAD,CAAV;;AACF,SAAK,KAAL;AACE,aAAOD,GAAG,CAACC,OAAD,CAAV;;AACF;AACE,aAAOA,OAAP;AANJ;AAQD,CATD","sourcesContent":["const BTC = addr => {\n  return `bitcoin:${addr}`;\n};\n\nconst BCH = addr => {\n  return `bitcoincash:${addr}`;\n};\n\nexport default (address, coin) => {\n  switch (coin) {\n    case 'BTC':\n      return BTC(address);\n    case 'BCH':\n      return BCH(address);\n    default:\n      return address;\n  }\n};\n"]}]}