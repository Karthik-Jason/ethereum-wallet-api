{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/eslint-loader/index.js??ref--13-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/partners/index.js","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/partners/index.js","mtime":1573477612092},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.values\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.map\";\nimport { BitySwap, BityCurrencies, PROVIDER_NAME as bity } from \"./bity\";\nimport { KyberCurrencies, KyberSwap, PROVIDER_NAME as kybernetwork } from \"./kyber\";\nimport { ChangellyCurrencies, ChangellySwap, PROVIDER_NAME as changelly } from \"./changelly\";\nimport { Simplex, SimplexCurrencies, PROVIDER_NAME as simplex } from \"./simplex\";\nimport SwapProviders from \"./partners\";\nimport { ERC20, networkSymbols, chainCurrencies, fiat, EthereumTokens, OtherCoins, BASE_CURRENCY, MIN_SWAP_AMOUNT } from \"./partnersConfig\";\nimport { utils, bestRateForQuantity, bestProviderForQuantity, isValidEntry, checkInvalidOrMissingValue, dynamicSortMultiple, qrcodeBuilder, hasIcon } from \"./helpers\"; // Array of currently supported providers\n\nvar providers = [BitySwap, KyberSwap, ChangellySwap, Simplex];\nvar providerMap = providers.reduce(function (accumulator, currentValue) {\n  return accumulator.set(currentValue.getName(), currentValue);\n}, new Map());\nvar providerNames = {\n  simplex: simplex,\n  kyber: kybernetwork,\n  changelly: changelly,\n  bity: bity\n};\nvar supportedProviders = Object.values(providerNames);\nexport { SwapProviders, providers, providerMap, supportedProviders, providerNames, BASE_CURRENCY, MIN_SWAP_AMOUNT, BitySwap, BityCurrencies, KyberSwap, KyberCurrencies, Simplex, SimplexCurrencies, ChangellySwap, ChangellyCurrencies, networkSymbols, chainCurrencies, fiat, EthereumTokens, OtherCoins, ERC20, utils, bestRateForQuantity, bestProviderForQuantity, isValidEntry, dynamicSortMultiple, checkInvalidOrMissingValue, qrcodeBuilder, hasIcon };",{"version":3,"sources":["/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/partners/index.js"],"names":["BitySwap","BityCurrencies","PROVIDER_NAME","bity","KyberCurrencies","KyberSwap","kybernetwork","ChangellyCurrencies","ChangellySwap","changelly","Simplex","SimplexCurrencies","simplex","SwapProviders","ERC20","networkSymbols","chainCurrencies","fiat","EthereumTokens","OtherCoins","BASE_CURRENCY","MIN_SWAP_AMOUNT","utils","bestRateForQuantity","bestProviderForQuantity","isValidEntry","checkInvalidOrMissingValue","dynamicSortMultiple","qrcodeBuilder","hasIcon","providers","providerMap","reduce","accumulator","currentValue","set","getName","Map","providerNames","kyber","supportedProviders","Object","values"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,cAAnB,EAAmCC,aAAa,IAAIC,IAApD;AACA,SACEC,eADF,EAEEC,SAFF,EAGEH,aAAa,IAAII,YAHnB;AAKA,SACEC,mBADF,EAEEC,aAFF,EAGEN,aAAa,IAAIO,SAHnB;AAKA,SACEC,OADF,EAEEC,iBAFF,EAGET,aAAa,IAAIU,OAHnB;AAKA,OAAOC,aAAP;AACA,SACEC,KADF,EAEEC,cAFF,EAGEC,eAHF,EAIEC,IAJF,EAKEC,cALF,EAMEC,UANF,EAOEC,aAPF,EAQEC,eARF;AAUA,SACEC,KADF,EAEEC,mBAFF,EAGEC,uBAHF,EAIEC,YAJF,EAKEC,0BALF,EAMEC,mBANF,EAOEC,aAPF,EAQEC,OARF,oB,CAWA;;AACA,IAAMC,SAAS,GAAG,CAAC9B,QAAD,EAAWK,SAAX,EAAsBG,aAAtB,EAAqCE,OAArC,CAAlB;AAEA,IAAMqB,WAAW,GAAGD,SAAS,CAACE,MAAV,CAClB,UAACC,WAAD,EAAcC,YAAd;AAAA,SACED,WAAW,CAACE,GAAZ,CAAgBD,YAAY,CAACE,OAAb,EAAhB,EAAwCF,YAAxC,CADF;AAAA,CADkB,EAGlB,IAAIG,GAAJ,EAHkB,CAApB;AAMA,IAAMC,aAAa,GAAG;AACpB1B,EAAAA,OAAO,EAAEA,OADW;AAEpB2B,EAAAA,KAAK,EAAEjC,YAFa;AAGpBG,EAAAA,SAAS,EAAEA,SAHS;AAIpBN,EAAAA,IAAI,EAAEA;AAJc,CAAtB;AAOA,IAAMqC,kBAAkB,GAAGC,MAAM,CAACC,MAAP,CAAcJ,aAAd,CAA3B;AAEA,SACEzB,aADF,EAEEiB,SAFF,EAGEC,WAHF,EAIES,kBAJF,EAKEF,aALF,EAMElB,aANF,EAOEC,eAPF,EAQErB,QARF,EASEC,cATF,EAUEI,SAVF,EAWED,eAXF,EAYEM,OAZF,EAaEC,iBAbF,EAcEH,aAdF,EAeED,mBAfF,EAgBEQ,cAhBF,EAiBEC,eAjBF,EAkBEC,IAlBF,EAmBEC,cAnBF,EAoBEC,UApBF,EAqBEL,KArBF,EAsBEQ,KAtBF,EAuBEC,mBAvBF,EAwBEC,uBAxBF,EAyBEC,YAzBF,EA0BEE,mBA1BF,EA2BED,0BA3BF,EA4BEE,aA5BF,EA6BEC,OA7BF","sourcesContent":["import { BitySwap, BityCurrencies, PROVIDER_NAME as bity } from './bity';\nimport {\n  KyberCurrencies,\n  KyberSwap,\n  PROVIDER_NAME as kybernetwork\n} from './kyber';\nimport {\n  ChangellyCurrencies,\n  ChangellySwap,\n  PROVIDER_NAME as changelly\n} from './changelly';\nimport {\n  Simplex,\n  SimplexCurrencies,\n  PROVIDER_NAME as simplex\n} from './simplex';\nimport SwapProviders from './partners';\nimport {\n  ERC20,\n  networkSymbols,\n  chainCurrencies,\n  fiat,\n  EthereumTokens,\n  OtherCoins,\n  BASE_CURRENCY,\n  MIN_SWAP_AMOUNT\n} from './partnersConfig';\nimport {\n  utils,\n  bestRateForQuantity,\n  bestProviderForQuantity,\n  isValidEntry,\n  checkInvalidOrMissingValue,\n  dynamicSortMultiple,\n  qrcodeBuilder,\n  hasIcon\n} from './helpers';\n\n// Array of currently supported providers\nconst providers = [BitySwap, KyberSwap, ChangellySwap, Simplex];\n\nconst providerMap = providers.reduce(\n  (accumulator, currentValue) =>\n    accumulator.set(currentValue.getName(), currentValue),\n  new Map()\n);\n\nconst providerNames = {\n  simplex: simplex,\n  kyber: kybernetwork,\n  changelly: changelly,\n  bity: bity\n};\n\nconst supportedProviders = Object.values(providerNames);\n\nexport {\n  SwapProviders,\n  providers,\n  providerMap,\n  supportedProviders,\n  providerNames,\n  BASE_CURRENCY,\n  MIN_SWAP_AMOUNT,\n  BitySwap,\n  BityCurrencies,\n  KyberSwap,\n  KyberCurrencies,\n  Simplex,\n  SimplexCurrencies,\n  ChangellySwap,\n  ChangellyCurrencies,\n  networkSymbols,\n  chainCurrencies,\n  fiat,\n  EthereumTokens,\n  OtherCoins,\n  ERC20,\n  utils,\n  bestRateForQuantity,\n  bestProviderForQuantity,\n  isValidEntry,\n  dynamicSortMultiple,\n  checkInvalidOrMissingValue,\n  qrcodeBuilder,\n  hasIcon\n};\n"]}]}