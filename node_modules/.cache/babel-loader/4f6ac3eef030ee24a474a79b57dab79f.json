{"remainingRequest":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/dapps/Ambrpay/components/ManageFundsModal/ManageFundsModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/dapps/Ambrpay/components/ManageFundsModal/ManageFundsModal.vue","mtime":1573477611644},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport BigNumber from 'bignumber.js';\nexport default {\n  props: {\n    manageFundsText: {\n      type: String,\n      default: ''\n    },\n    availableBalanceEth: {\n      type: String,\n      default: ''\n    },\n    availableBalanceUsd: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      actionStep: true,\n      ethAmount: 0,\n      errMsg: ''\n    };\n  },\n  computed: _objectSpread({}, mapState(['web3', 'account'])),\n  watch: {\n    manageFundsText: function manageFundsText(newVal, oldVal) {\n      if (newVal !== oldVal) {\n        this.ethAmount = 0;\n        this.errMsg = '';\n      }\n    },\n    ethAmount: function ethAmount(newVal) {\n      var value = new BigNumber(newVal);\n      var accountBalance = this.web3.utils.fromWei(new BigNumber(this.account.balance).toFixed(), 'ether');\n      var subAccountBalance = new BigNumber(this.availableBalanceEth);\n\n      if (newVal <= 0) {\n        this.errMsg = 'Amount must be higher than 0';\n      } else if (this.manageFundsText === 'Add' && value.gt(accountBalance)) {\n        this.errMsg = 'Amount higher than balance';\n      } else if (this.manageFundsText === 'Withdraw' && value.gt(subAccountBalance)) {\n        this.errMsg = 'Amount higher than subscription balance';\n      } else {\n        this.errMsg = '';\n      }\n    }\n  },\n  methods: {\n    onClick: function onClick() {\n      if (this.manageFundsText === 'Add' && this.actionStep === true) {\n        this.$emit('addFunds', this.ethAmount);\n        this.actionStep = false;\n      } else if (this.manageFundsText === 'Withdraw' && this.actionStep === true) {\n        this.$emit('withdrawFunds', this.ethAmount);\n        this.actionStep = false;\n      } else {\n        this.$refs['manageFundsModal'].hide();\n        this.actionStep = true;\n        this.ethAmount = '';\n      }\n    }\n  }\n};",{"version":3,"sources":["ManageFundsModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA,SAAA,QAAA,QAAA,MAAA;AACA,OAAA,SAAA,MAAA,cAAA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,mBAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,mBAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AATA,GADA;AAeA,EAAA,IAfA,kBAeA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,IADA;AAEA,MAAA,SAAA,EAAA,CAFA;AAGA,MAAA,MAAA,EAAA;AAHA,KAAA;AAKA,GArBA;AAsBA,EAAA,QAAA,oBACA,QAAA,CAAA,CAAA,MAAA,EAAA,SAAA,CAAA,CADA,CAtBA;AAyBA,EAAA,KAAA,EAAA;AACA,IAAA,eADA,2BACA,MADA,EACA,MADA,EACA;AACA,UAAA,MAAA,KAAA,MAAA,EAAA;AACA,aAAA,SAAA,GAAA,CAAA;AACA,aAAA,MAAA,GAAA,EAAA;AACA;AACA,KANA;AAOA,IAAA,SAPA,qBAOA,MAPA,EAOA;AACA,UAAA,KAAA,GAAA,IAAA,SAAA,CAAA,MAAA,CAAA;AACA,UAAA,cAAA,GAAA,KAAA,IAAA,CAAA,KAAA,CAAA,OAAA,CACA,IAAA,SAAA,CAAA,KAAA,OAAA,CAAA,OAAA,EAAA,OAAA,EADA,EAEA,OAFA,CAAA;AAIA,UAAA,iBAAA,GAAA,IAAA,SAAA,CAAA,KAAA,mBAAA,CAAA;;AAEA,UAAA,MAAA,IAAA,CAAA,EAAA;AACA,aAAA,MAAA,GAAA,8BAAA;AACA,OAFA,MAEA,IAAA,KAAA,eAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,cAAA,CAAA,EAAA;AACA,aAAA,MAAA,GAAA,4BAAA;AACA,OAFA,MAEA,IACA,KAAA,eAAA,KAAA,UAAA,IACA,KAAA,CAAA,EAAA,CAAA,iBAAA,CAFA,EAGA;AACA,aAAA,MAAA,GAAA,yCAAA;AACA,OALA,MAKA;AACA,aAAA,MAAA,GAAA,EAAA;AACA;AACA;AA3BA,GAzBA;AAsDA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,UAAA,KAAA,eAAA,KAAA,KAAA,IAAA,KAAA,UAAA,KAAA,IAAA,EAAA;AACA,aAAA,KAAA,CAAA,UAAA,EAAA,KAAA,SAAA;AACA,aAAA,UAAA,GAAA,KAAA;AACA,OAHA,MAGA,IACA,KAAA,eAAA,KAAA,UAAA,IACA,KAAA,UAAA,KAAA,IAFA,EAGA;AACA,aAAA,KAAA,CAAA,eAAA,EAAA,KAAA,SAAA;AACA,aAAA,UAAA,GAAA,KAAA;AACA,OANA,MAMA;AACA,aAAA,KAAA,CAAA,kBAAA,EAAA,IAAA;AACA,aAAA,UAAA,GAAA,IAAA;AACA,aAAA,SAAA,GAAA,EAAA;AACA;AACA;AAhBA;AAtDA,CAAA","sourcesContent":["<template>\n  <div class=\"modal-container\">\n    <b-modal\n      ref=\"manageFundsModal\"\n      :title=\"`${manageFundsText} ${$t('dappsAmbrpay.manage-funds.funds')}`\"\n      centered\n      hide-footer\n      static\n      lazy\n    >\n      <div class=\"modal-contents\">\n        <div class=\"balance-container\">\n          <span class=\"funds-txt\">{{\n            $t('dappsAmbrpay.manage-funds.avail-balance')\n          }}</span>\n          <div>\n            <p class=\"funds-txt\">\n              {{ availableBalanceEth }} {{ $t('dappsAmbrpay.eth') }}\n            </p>\n            <p class=\"text-right\">${{ availableBalanceUsd }}</p>\n          </div>\n        </div>\n        <hr />\n        <div v-if=\"actionStep\" class=\"action-container\">\n          <p class=\"funds-txt\">\n            {{ $t('dappsAmbrpay.manage-funds.how-much-eth') }}\n            <span class=\"action-txt\"> {{ manageFundsText }}? </span>\n          </p>\n          <span class=\"eth-text\">{{ $t('dappsAmbrpay.eth') }}</span>\n          <input v-model=\"ethAmount\" class=\"mt-3\" type=\"number\" />\n          <p v-show=\"errMsg\" class=\"err-msg pl-2\">{{ errMsg }}</p>\n        </div>\n        <div v-if=\"!actionStep\" class=\"confirmation-container\">\n          <i class=\"check-icon fa fa-check\" aria-hidden=\"true\" />\n          <p v-if=\"manageFundsText === 'Add'\" class=\"mr-5 ml-5 mt-3 mb-1\">\n            {{ $t('dappsAmbrpay.manage-funds.subscription-fund') }}\n            <span class=\"mew-txt\">{{ ethAmount }}</span>\n            {{ $t('dappsAmbrpay.manage-funds.should-update') }}\n          </p>\n          <p v-if=\"manageFundsText === 'Withdraw'\" class=\"mr-5 ml-5 mt-2\">\n            {{ $t('dappsAmbrpay.manage-funds.withdraw-fund') }}\n            <span class=\"mew-txt\">{{ ethAmount }}</span>\n            {{ $t('dappsAmbrpay.manage-funds.should-update') }}\n          </p>\n        </div>\n        <div class=\"btn-container\">\n          <button\n            :class=\"errMsg || !ethAmount ? 'disabled' : ''\"\n            class=\"mew-btn mt-4 mb-4\"\n            @click=\"onClick()\"\n          >\n            {{\n              actionStep ? manageFundsText : $t('dappsAmbrpay.manage-funds.ok')\n            }}\n          </button>\n        </div>\n      </div>\n    </b-modal>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport BigNumber from 'bignumber.js';\n\nexport default {\n  props: {\n    manageFundsText: {\n      type: String,\n      default: ''\n    },\n    availableBalanceEth: {\n      type: String,\n      default: ''\n    },\n    availableBalanceUsd: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      actionStep: true,\n      ethAmount: 0,\n      errMsg: ''\n    };\n  },\n  computed: {\n    ...mapState(['web3', 'account'])\n  },\n  watch: {\n    manageFundsText(newVal, oldVal) {\n      if (newVal !== oldVal) {\n        this.ethAmount = 0;\n        this.errMsg = '';\n      }\n    },\n    ethAmount(newVal) {\n      const value = new BigNumber(newVal);\n      const accountBalance = this.web3.utils.fromWei(\n        new BigNumber(this.account.balance).toFixed(),\n        'ether'\n      );\n      const subAccountBalance = new BigNumber(this.availableBalanceEth);\n\n      if (newVal <= 0) {\n        this.errMsg = 'Amount must be higher than 0';\n      } else if (this.manageFundsText === 'Add' && value.gt(accountBalance)) {\n        this.errMsg = 'Amount higher than balance';\n      } else if (\n        this.manageFundsText === 'Withdraw' &&\n        value.gt(subAccountBalance)\n      ) {\n        this.errMsg = 'Amount higher than subscription balance';\n      } else {\n        this.errMsg = '';\n      }\n    }\n  },\n  methods: {\n    onClick() {\n      if (this.manageFundsText === 'Add' && this.actionStep === true) {\n        this.$emit('addFunds', this.ethAmount);\n        this.actionStep = false;\n      } else if (\n        this.manageFundsText === 'Withdraw' &&\n        this.actionStep === true\n      ) {\n        this.$emit('withdrawFunds', this.ethAmount);\n        this.actionStep = false;\n      } else {\n        this.$refs['manageFundsModal'].hide();\n        this.actionStep = true;\n        this.ethAmount = '';\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'ManageFundsModal.scss';\n@import '../../AmbrpayGlobal.scss';\n</style>\n\n<style lang=\"scss\">\n.modal-body {\n  padding: 0;\n}\n</style>\n"],"sourceRoot":"src/dapps/Ambrpay/components/ManageFundsModal"}]}