{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/eslint-loader/index.js??ref--13-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/wallets/web3-provider/index.js","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/wallets/web3-provider/index.js","mtime":1574664278326},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js","mtime":1574664275010},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/eslint-loader/index.js","mtime":1574664275986}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _classCallCheck from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport HttpProvider from \"./providers/http-provider\";\nimport GivenProvider from \"./providers/given-provider\";\nimport WSProvider from \"./providers/ws-provider\";\nimport EtherscanProvider from \"./providers/etherscan-provider\";\nimport PocketProvider from \"./providers/pocket-provider\";\nimport { WEB3_WALLET } from \"../bip44/walletTypes\";\n\nvar MEWProvider = function MEWProvider(host, options, store, eventHub) {\n  _classCallCheck(this, MEWProvider);\n\n  if (store.state.wallet && store.state.wallet.identifier == WEB3_WALLET) {\n    return new GivenProvider(host, options, store, eventHub);\n  } else if (host && typeof host === 'string') {\n    if (host.includes('etherscan')) {\n      return new EtherscanProvider(host, options, store, eventHub);\n    } else if (host.includes('pokt')) {\n      return new PocketProvider(host, options, store, eventHub);\n    } else if (/^http(s)?:\\/\\//i.test(host)) {\n      return new HttpProvider(host, options, store, eventHub);\n    } else if (/^ws(s)?:\\/\\//i.test(host)) {\n      return new WSProvider(host, options, store, eventHub);\n    } else if (host) {\n      throw new Error('Can\\'t autodetect provider for \"' + host + '\"');\n    }\n  }\n};\n\nexport default MEWProvider;",{"version":3,"sources":["/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/wallets/web3-provider/index.js"],"names":["HttpProvider","GivenProvider","WSProvider","EtherscanProvider","PocketProvider","WEB3_WALLET","MEWProvider","host","options","store","eventHub","state","wallet","identifier","includes","test","Error"],"mappings":";;;AAAA,OAAOA,YAAP;AACA,OAAOC,aAAP;AACA,OAAOC,UAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,cAAP;AACA,SAASC,WAAT;;IACMC,W,GACJ,qBAAYC,IAAZ,EAAkBC,OAAlB,EAA2BC,KAA3B,EAAkCC,QAAlC,EAA4C;AAAA;;AAC1C,MAAID,KAAK,CAACE,KAAN,CAAYC,MAAZ,IAAsBH,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,UAAnB,IAAiCR,WAA3D,EAAwE;AACtE,WAAO,IAAIJ,aAAJ,CAAkBM,IAAlB,EAAwBC,OAAxB,EAAiCC,KAAjC,EAAwCC,QAAxC,CAAP;AACD,GAFD,MAEO,IAAIH,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAA5B,EAAsC;AAC3C,QAAIA,IAAI,CAACO,QAAL,CAAc,WAAd,CAAJ,EAAgC;AAC9B,aAAO,IAAIX,iBAAJ,CAAsBI,IAAtB,EAA4BC,OAA5B,EAAqCC,KAArC,EAA4CC,QAA5C,CAAP;AACD,KAFD,MAEO,IAAIH,IAAI,CAACO,QAAL,CAAc,MAAd,CAAJ,EAA2B;AAChC,aAAO,IAAIV,cAAJ,CAAmBG,IAAnB,EAAyBC,OAAzB,EAAkCC,KAAlC,EAAyCC,QAAzC,CAAP;AACD,KAFM,MAEA,IAAI,kBAAkBK,IAAlB,CAAuBR,IAAvB,CAAJ,EAAkC;AACvC,aAAO,IAAIP,YAAJ,CAAiBO,IAAjB,EAAuBC,OAAvB,EAAgCC,KAAhC,EAAuCC,QAAvC,CAAP;AACD,KAFM,MAEA,IAAI,gBAAgBK,IAAhB,CAAqBR,IAArB,CAAJ,EAAgC;AACrC,aAAO,IAAIL,UAAJ,CAAeK,IAAf,EAAqBC,OAArB,EAA8BC,KAA9B,EAAqCC,QAArC,CAAP;AACD,KAFM,MAEA,IAAIH,IAAJ,EAAU;AACf,YAAM,IAAIS,KAAJ,CAAU,qCAAqCT,IAArC,GAA4C,GAAtD,CAAN;AACD;AACF;AACF,C;;AAEH,eAAeD,WAAf","sourcesContent":["import HttpProvider from './providers/http-provider';\nimport GivenProvider from './providers/given-provider';\nimport WSProvider from './providers/ws-provider';\nimport EtherscanProvider from './providers/etherscan-provider';\nimport PocketProvider from './providers/pocket-provider';\nimport { WEB3_WALLET } from '../bip44/walletTypes';\nclass MEWProvider {\n  constructor(host, options, store, eventHub) {\n    if (store.state.wallet && store.state.wallet.identifier == WEB3_WALLET) {\n      return new GivenProvider(host, options, store, eventHub);\n    } else if (host && typeof host === 'string') {\n      if (host.includes('etherscan')) {\n        return new EtherscanProvider(host, options, store, eventHub);\n      } else if (host.includes('pokt')) {\n        return new PocketProvider(host, options, store, eventHub);\n      } else if (/^http(s)?:\\/\\//i.test(host)) {\n        return new HttpProvider(host, options, store, eventHub);\n      } else if (/^ws(s)?:\\/\\//i.test(host)) {\n        return new WSProvider(host, options, store, eventHub);\n      } else if (host) {\n        throw new Error('Can\\'t autodetect provider for \"' + host + '\"');\n      }\n    }\n  }\n}\nexport default MEWProvider;\n"]}]}