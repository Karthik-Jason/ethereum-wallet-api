{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/dapps/MakerDai/containers/CreateCDP/CreateCDP.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/dapps/MakerDai/containers/CreateCDP/CreateCDP.vue","mtime":1573477611656},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport ethUnit from 'ethjs-unit';\nimport InterfaceContainerTitle from '@/layouts/InterfaceLayout/components/InterfaceContainerTitle';\nimport InterfaceBottomText from '@/components/InterfaceBottomText';\nimport Blockie from '@/components/Blockie';\nimport DaiConfirmationModal from \"../../components/DaiConfirmationModal\";\nimport LoadingOverlay from '@/components/LoadingOverlay';\nimport { displayFixedValue, displayPercentValue, displayFixedPercent } from \"../../helpers\";\nimport BigNumber from 'bignumber.js';\nimport Arrow from '@/assets/images/etc/single-arrow.svg';\n\nvar toBigNumber = function toBigNumber(num) {\n  return new BigNumber(num);\n};\n\nvar bnOver = function bnOver(one, two, three) {\n  return toBigNumber(one).times(toBigNumber(two)).div(toBigNumber(three));\n};\n\nexport default {\n  components: {\n    'interface-container-title': InterfaceContainerTitle,\n    'interface-bottom-text': InterfaceBottomText,\n    blockie: Blockie,\n    'dai-confirmation-modal': DaiConfirmationModal,\n    'loading-overlay': LoadingOverlay\n  },\n  props: {\n    tokensWithBalance: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    getBalance: {\n      type: Function,\n      default: function _default() {}\n    },\n    highestGas: {\n      type: String,\n      default: '0'\n    },\n    ethPrice: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    pethPrice: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    liquidationPenalty: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    stabilityFee: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    liquidationRatio: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    wethToPethRatio: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    pethMin: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    priceService: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    cdpService: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    proxyService: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    buildEmpty: {\n      type: Function,\n      default: function _default() {}\n    },\n    values: {\n      type: Object,\n      default: function _default() {\n        return {\n          maxPethDraw: '',\n          maxEthDraw: '',\n          maxUsdDraw: '',\n          ethCollateral: '',\n          pethCollateral: '',\n          usdCollateral: '',\n          debtValue: '',\n          maxDai: '',\n          collateralRatio: '',\n          cdpId: '',\n          stabilityFee: '',\n          minEth: '',\n          liquidationRatio: '',\n          wethToPethRatio: '',\n          liquidationPenalty: '',\n          targetPrice: '',\n          pethPrice: ''\n        };\n      }\n    }\n  },\n  data: function data() {\n    return {\n      arrowImage: Arrow,\n      daiPrice: 0,\n      priceFloor: 0,\n      ethQty: 0,\n      daiQty: 0,\n      txInfo: {},\n      loading: false\n    };\n  },\n  computed: _objectSpread({}, mapState(['account', 'gasPrice', 'web3', 'network', 'ens']), {\n    validInputs: function validInputs() {\n      if (toBigNumber(this.ethQty).isNaN() || toBigNumber(this.daiQty).isNaN()) return false;\n\n      if (toBigNumber(this.ethQty).gt(0)) {\n        if (toBigNumber(this.ethQty).lte(this.values.minEth)) return false;\n        if (toBigNumber(this.maxDaiDraw).lte(toBigNumber(this.daiQty))) return false;\n        if (toBigNumber(this.collatRatio).lte(1.501)) return false;\n        return toBigNumber(ethUnit.toWei(this.ethQty, 'ether').toString()).lte(this.account.balance);\n      }\n\n      return false;\n    },\n    hasEnoughEth: function hasEnoughEth() {\n      if (toBigNumber(this.ethQty).isNaN()) return false;\n      return toBigNumber(ethUnit.toWei(this.ethQty, 'ether').toString()).lte(this.account.balance);\n    },\n    atSetFloor: function atSetFloor() {\n      if (this.priceFloor <= 0) return 0;\n      return bnOver(this.ethPrice, this.liquidationRatio, this.priceFloor);\n    },\n    collatRatio: function collatRatio() {\n      if (this.daiQty <= 0 || this.ethQty <= 0) return 0;\n      return this.calcCollatRatio(this.ethQty, this.daiQty);\n    },\n    liquidationPrice: function liquidationPrice() {\n      if (this.daiQty <= 0 || this.ethQty <= 0) return 0;\n      return this.calcLiquidationPrice(this.ethQty, this.daiQty);\n    },\n    maxDaiDraw: function maxDaiDraw() {\n      if (this.ethQty <= 0) return 0;\n      var bufferVal = this.calcDaiDraw(this.ethQty).times(0.01);\n      return toBigNumber(this.calcDaiDraw(this.ethQty)).minus(bufferVal);\n    },\n    minEthDeposit: function minEthDeposit() {\n      if (this.daiQty <= 0) return 0;\n      return this.calcMinEthDeposit(this.daiQty);\n    },\n    risky: function risky() {\n      var collRatio = this.collatRatio;\n\n      if (toBigNumber(collRatio).gt(0)) {\n        return toBigNumber(collRatio).lte(2);\n      }\n\n      return false;\n    },\n    veryRisky: function veryRisky() {\n      var collRatio = this.collatRatio;\n\n      if (toBigNumber(collRatio).gt(0)) {\n        return toBigNumber(collRatio).lte(1.75);\n      }\n\n      return false;\n    },\n    depositInPeth: function depositInPeth() {\n      if (this.ethQty <= 0) return 0;\n      return this.toPeth(this.ethQty);\n    },\n    minEth: function minEth() {\n      if (this.wethToPethRatio) {\n        return toBigNumber(this.pethMin).times(this.wethToPethRatio);\n      }\n\n      return '--';\n    }\n  }),\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.buildEmptyInstance();\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: {\n    buildEmptyInstance: function () {\n      var _buildEmptyInstance = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.buildEmpty();\n\n              case 2:\n                this.makerCDP = _context2.sent;\n                this.$forceUpdate();\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function buildEmptyInstance() {\n        return _buildEmptyInstance.apply(this, arguments);\n      }\n\n      return buildEmptyInstance;\n    }(),\n    displayPercentValue: displayPercentValue,\n    displayFixedValue: displayFixedValue,\n    displayFixedPercent: displayFixedPercent,\n    openCdp: function () {\n      var _openCdp = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.loading = true;\n\n                if (!(this.ethQty <= 0)) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", 0);\n\n              case 3:\n                setTimeout(function () {\n                  _this.loading = false;\n                }, 5000); // [Note from David to Steve] This should be implemented on TX core.\n                // Close DAI confirmation modal\n\n                this.$eventHub.$on('showTxConfirmModal', function () {\n                  _this.$emit('cdpOpened');\n\n                  if (_this.loading) {\n                    _this.$refs.daiconfirmation.$refs.modal.hide();\n\n                    _this.loading = false;\n                  }\n                });\n                _context3.next = 7;\n                return this.makerCDP.openCdp(this.ethQty, this.daiQty);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function openCdp() {\n        return _openCdp.apply(this, arguments);\n      }\n\n      return openCdp;\n    }(),\n    openDaiConfirmation: function openDaiConfirmation() {\n      this.$refs.daiconfirmation.$refs.modal.show();\n    },\n    toUSD: function toUSD(eth) {\n      if (eth === undefined || eth === null) return toBigNumber(0);\n      var toUsd = this.ethPrice.times(toBigNumber(eth));\n\n      if (toUsd.lt(0)) {\n        return toBigNumber(0);\n      }\n\n      return toUsd;\n    },\n    toPeth: function toPeth(eth) {\n      if (!toBigNumber(eth).eq(0)) {\n        return toBigNumber(eth).div(this.wethToPethRatio);\n      }\n\n      return toBigNumber(0);\n    },\n    fromPeth: function fromPeth(peth) {\n      if (!toBigNumber(peth).eq(0)) {\n        return toBigNumber(peth).times(this.wethToPethRatio);\n      }\n\n      return toBigNumber(0);\n    },\n    calcMinCollatRatio: function calcMinCollatRatio(priceFloor) {\n      return bnOver(this.ethPrice, this.liquidationRatio, priceFloor);\n    },\n    calcDaiDraw: function calcDaiDraw(ethQty) {\n      var ethPrice = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.ethPrice;\n      var liquidationRatio = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.liquidationRatio;\n      if (ethQty <= 0) return 0;\n      return bnOver(ethPrice, toBigNumber(ethQty), liquidationRatio);\n    },\n    calcMinEthDeposit: function calcMinEthDeposit(daiQty) {\n      var ethPrice = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.ethPrice;\n      var liquidationRatio = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.liquidationRatio;\n      if (daiQty <= 0) return 0;\n      return bnOver(liquidationRatio, daiQty, ethPrice);\n    },\n    calcCollatRatio: function calcCollatRatio(ethQty, daiQty) {\n      if (ethQty <= 0 || daiQty <= 0) return 0;\n      return bnOver(this.ethPrice, ethQty, daiQty);\n    },\n    calcLiquidationPrice: function calcLiquidationPrice(ethQty, daiQty) {\n      if (ethQty <= 0 || daiQty <= 0) return 0;\n      var getInt = parseInt(this.ethPrice);\n\n      for (var i = getInt; i > 0; i--) {\n        var atValue = bnOver(i, ethQty, daiQty).lte(this.liquidationRatio);\n\n        if (atValue) {\n          return i;\n        }\n      }\n\n      for (var _i = 100; _i > 0; _i--) {\n        var _atValue = bnOver(_i / 100, ethQty, daiQty).lte(this.liquidationRatio);\n\n        if (_atValue) {\n          return _i / 100;\n        }\n      }\n\n      return 0;\n    }\n  }\n};",{"version":3,"sources":["CreateCDP.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container-maker\">\n    <dai-confirmation-modal\n      ref=\"daiconfirmation\"\n      :opencdp=\"openCdp\"\n      :txinfo=\"txInfo\"\n      :liquidation-price=\"liquidationPrice\"\n      :collat-ratio=\"displayFixedPercent(collatRatio)\"\n      :liquidation-penalty=\"displayPercentValue(liquidationPenalty)\"\n      :min-ratio=\"displayPercentValue(liquidationRatio)\"\n      :current-price=\"displayFixedValue(ethPrice, 2)\"\n      :collateral=\"ethQty.toString()\"\n      :generate=\"daiQty.toString()\"\n    />\n    <loading-overlay\n      v-if=\"loading\"\n      :loadingmessage=\"$t('dappsMaker.creatingMessage')\"\n    />\n    <div class=\"manage-container\">\n      <p class=\"top-title\">\n        {{ $t('dappsMaker.maker_title') }}\n      </p>\n      <p class=\"top-title-sub\">\n        {{ $t('dappsMaker.createInstruct') }}\n      </p>\n\n      <div class=\"currency-ops-new\">\n        <div class=\"currency-picker-container\">\n          <div class=\"interface__block-title\">\n            {{ $t('dappsMaker.collateral') }}\n          </div>\n          <div class=\"dropdown-text-container dropdown-container\">\n            <p>\n              <span class=\"cc ETH cc-icon currency-symbol\" />\n              ETH\n              <span class=\"subname\">- Ethereum </span>\n            </p>\n          </div>\n          <input\n            v-model=\"ethQty\"\n            :class=\"[\n              !hasEnoughEth ? 'red-border' : '',\n              'currency-picker-container',\n              'dropdown-text-container',\n              'dropdown-container'\n            ]\"\n          />\n          <div class=\"input-block-message\">\n            <p v-if=\"!hasEnoughEth\" class=\"red-text\">Not enough ETH</p>\n            <p>\n              {{ $t('dappsMaker.minCollat') }}\n              <b>{{ displayFixedValue(minEth, 6) }}</b> ETH\n            </p>\n            <p>{{ displayFixedValue(depositInPeth, 6) }} PETH</p>\n          </div>\n        </div>\n        <div class=\"arrow\"><img :src=\"arrowImage\" alt /></div>\n        <div>\n          <div class=\"interface__block-title\">\n            {{ $t('dappsMaker.generate') }}\n          </div>\n          <div class=\"dropdown-text-container dropdown-container\">\n            <p>\n              <span class=\"cc DAI cc-icon cc-icon-dai currency-symbol\" />\n              DAI\n              <span class=\"subname\">- Maker DAI </span>\n            </p>\n          </div>\n          <input\n            v-model=\"daiQty\"\n            :class=\"[\n              veryRisky ? 'red-border' : '',\n              risky && !veryRisky ? 'orange-border' : '',\n              'currency-picker-container',\n              'dropdown-text-container',\n              'dropdown-container'\n            ]\"\n          />\n          <div class=\"input-block-message\">\n            <p>\n              {{ $t('dappsMaker.maxGenerate') }}\n              <b>{{ displayFixedValue(maxDaiDraw, 6) }}</b> DAI\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"cdp-info-block cdp-info-entry\">\n        <ul>\n          <li>\n            <p>{{ $t('dappsMaker.minEthReq') }}</p>\n            <p>{{ displayFixedValue(minEth, 6) }} ETH</p>\n          </li>\n          <li>\n            <p>{{ $t('dappsMaker.liquidPrice') }}</p>\n            <p>\n              <b>{{ liquidationPrice }}</b> USD\n            </p>\n          </li>\n          <li>\n            <p>{{ $t('dappsMaker.currentPriceInfo') }}</p>\n            <p>{{ displayFixedValue(ethPrice, 2) }} USD</p>\n          </li>\n          <li>\n            <p>{{ $t('dappsMaker.liquidationPenalty') }}</p>\n            <p>{{ displayPercentValue(liquidationPenalty) }}%</p>\n          </li>\n          <li>\n            <p>{{ $t('dappsMaker.collateralRatio') }}</p>\n            <p\n              :class=\"[\n                veryRisky ? 'red-text' : '',\n                risky && !veryRisky ? 'orange-text' : ''\n              ]\"\n            >\n              <b>{{ displayFixedPercent(collatRatio) }}%</b>\n            </p>\n          </li>\n          <li>\n            <p>{{ $t('dappsMaker.minimumRatio') }}</p>\n            <p>{{ displayPercentValue(liquidationRatio) }}%</p>\n          </li>\n        </ul>\n      </div>\n      <div class=\"cdp-info-block cdp-info-entry\">\n        <ul>\n          <li>\n            <p>\n              {{\n                $t('dappsMaker.stabilityFeeInMkr', {\n                  value: displayFixedPercent(stabilityFee).toString()\n                })\n              }}\n            </p>\n          </li>\n        </ul>\n      </div>\n\n      <div class=\"buttons-container\">\n        <div\n          :class=\"[\n            validInputs ? '' : 'disabled',\n            'submit-button large-round-button-green-filled'\n          ]\"\n          @click=\"openDaiConfirmation\"\n        >\n          {{ $t('dappsMaker.collatAndGenerate') }}\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport ethUnit from 'ethjs-unit';\nimport InterfaceContainerTitle from '@/layouts/InterfaceLayout/components/InterfaceContainerTitle';\nimport InterfaceBottomText from '@/components/InterfaceBottomText';\nimport Blockie from '@/components/Blockie';\nimport DaiConfirmationModal from '../../components/DaiConfirmationModal';\nimport LoadingOverlay from '@/components/LoadingOverlay';\nimport {\n  displayFixedValue,\n  displayPercentValue,\n  displayFixedPercent\n} from '../../helpers';\n\nimport BigNumber from 'bignumber.js';\nimport Arrow from '@/assets/images/etc/single-arrow.svg';\n\nconst toBigNumber = num => {\n  return new BigNumber(num);\n};\n\nconst bnOver = (one, two, three) => {\n  return toBigNumber(one)\n    .times(toBigNumber(two))\n    .div(toBigNumber(three));\n};\n\nexport default {\n  components: {\n    'interface-container-title': InterfaceContainerTitle,\n    'interface-bottom-text': InterfaceBottomText,\n    blockie: Blockie,\n    'dai-confirmation-modal': DaiConfirmationModal,\n    'loading-overlay': LoadingOverlay\n  },\n  props: {\n    tokensWithBalance: {\n      type: Array,\n      default: function() {\n        return [];\n      }\n    },\n    getBalance: {\n      type: Function,\n      default: function() {}\n    },\n    highestGas: {\n      type: String,\n      default: '0'\n    },\n    ethPrice: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    pethPrice: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    liquidationPenalty: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    stabilityFee: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    liquidationRatio: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    wethToPethRatio: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    pethMin: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    priceService: {\n      type: Object,\n      default: function() {\n        return {};\n      }\n    },\n    cdpService: {\n      type: Object,\n      default: function() {\n        return {};\n      }\n    },\n    proxyService: {\n      type: Object,\n      default: function() {\n        return {};\n      }\n    },\n    buildEmpty: {\n      type: Function,\n      default: function() {}\n    },\n    values: {\n      type: Object,\n      default: function() {\n        return {\n          maxPethDraw: '',\n          maxEthDraw: '',\n          maxUsdDraw: '',\n          ethCollateral: '',\n          pethCollateral: '',\n          usdCollateral: '',\n          debtValue: '',\n          maxDai: '',\n          collateralRatio: '',\n          cdpId: '',\n          stabilityFee: '',\n          minEth: '',\n          liquidationRatio: '',\n          wethToPethRatio: '',\n          liquidationPenalty: '',\n          targetPrice: '',\n          pethPrice: ''\n        };\n      }\n    }\n  },\n  data() {\n    return {\n      arrowImage: Arrow,\n      daiPrice: 0,\n      priceFloor: 0,\n      ethQty: 0,\n      daiQty: 0,\n      txInfo: {},\n      loading: false\n    };\n  },\n  computed: {\n    ...mapState(['account', 'gasPrice', 'web3', 'network', 'ens']),\n    validInputs() {\n      if (toBigNumber(this.ethQty).isNaN() || toBigNumber(this.daiQty).isNaN())\n        return false;\n      if (toBigNumber(this.ethQty).gt(0)) {\n        if (toBigNumber(this.ethQty).lte(this.values.minEth)) return false;\n        if (toBigNumber(this.maxDaiDraw).lte(toBigNumber(this.daiQty)))\n          return false;\n        if (toBigNumber(this.collatRatio).lte(1.501)) return false;\n        return toBigNumber(ethUnit.toWei(this.ethQty, 'ether').toString()).lte(\n          this.account.balance\n        );\n      }\n      return false;\n    },\n    hasEnoughEth() {\n      if (toBigNumber(this.ethQty).isNaN()) return false;\n      return toBigNumber(ethUnit.toWei(this.ethQty, 'ether').toString()).lte(\n        this.account.balance\n      );\n    },\n    atSetFloor() {\n      if (this.priceFloor <= 0) return 0;\n      return bnOver(this.ethPrice, this.liquidationRatio, this.priceFloor);\n    },\n    collatRatio() {\n      if (this.daiQty <= 0 || this.ethQty <= 0) return 0;\n      return this.calcCollatRatio(this.ethQty, this.daiQty);\n    },\n    liquidationPrice() {\n      if (this.daiQty <= 0 || this.ethQty <= 0) return 0;\n      return this.calcLiquidationPrice(this.ethQty, this.daiQty);\n    },\n    maxDaiDraw() {\n      if (this.ethQty <= 0) return 0;\n      const bufferVal = this.calcDaiDraw(this.ethQty).times(0.01);\n      return toBigNumber(this.calcDaiDraw(this.ethQty)).minus(bufferVal);\n    },\n    minEthDeposit() {\n      if (this.daiQty <= 0) return 0;\n      return this.calcMinEthDeposit(this.daiQty);\n    },\n    risky() {\n      const collRatio = this.collatRatio;\n      if (toBigNumber(collRatio).gt(0)) {\n        return toBigNumber(collRatio).lte(2);\n      }\n      return false;\n    },\n    veryRisky() {\n      const collRatio = this.collatRatio;\n      if (toBigNumber(collRatio).gt(0)) {\n        return toBigNumber(collRatio).lte(1.75);\n      }\n      return false;\n    },\n    depositInPeth() {\n      if (this.ethQty <= 0) return 0;\n      return this.toPeth(this.ethQty);\n    },\n    minEth() {\n      if (this.wethToPethRatio) {\n        return toBigNumber(this.pethMin).times(this.wethToPethRatio);\n      }\n      return '--';\n    }\n  },\n  async mounted() {\n    this.buildEmptyInstance();\n  },\n  methods: {\n    async buildEmptyInstance() {\n      this.makerCDP = await this.buildEmpty();\n      this.$forceUpdate();\n    },\n    displayPercentValue,\n    displayFixedValue,\n    displayFixedPercent,\n    async openCdp() {\n      this.loading = true;\n\n      if (this.ethQty <= 0) return 0;\n      setTimeout(() => {\n        this.loading = false;\n      }, 5000);\n\n      // [Note from David to Steve] This should be implemented on TX core.\n      // Close DAI confirmation modal\n      this.$eventHub.$on('showTxConfirmModal', () => {\n        this.$emit('cdpOpened');\n        if (this.loading) {\n          this.$refs.daiconfirmation.$refs.modal.hide();\n          this.loading = false;\n        }\n      });\n\n      await this.makerCDP.openCdp(this.ethQty, this.daiQty);\n    },\n    openDaiConfirmation() {\n      this.$refs.daiconfirmation.$refs.modal.show();\n    },\n    toUSD(eth) {\n      if (eth === undefined || eth === null) return toBigNumber(0);\n      const toUsd = this.ethPrice.times(toBigNumber(eth));\n      if (toUsd.lt(0)) {\n        return toBigNumber(0);\n      }\n      return toUsd;\n    },\n\n    toPeth(eth) {\n      if (!toBigNumber(eth).eq(0)) {\n        return toBigNumber(eth).div(this.wethToPethRatio);\n      }\n      return toBigNumber(0);\n    },\n    fromPeth(peth) {\n      if (!toBigNumber(peth).eq(0)) {\n        return toBigNumber(peth).times(this.wethToPethRatio);\n      }\n      return toBigNumber(0);\n    },\n    calcMinCollatRatio(priceFloor) {\n      return bnOver(this.ethPrice, this.liquidationRatio, priceFloor);\n    },\n    calcDaiDraw(\n      ethQty,\n      ethPrice = this.ethPrice,\n      liquidationRatio = this.liquidationRatio\n    ) {\n      if (ethQty <= 0) return 0;\n      return bnOver(ethPrice, toBigNumber(ethQty), liquidationRatio);\n    },\n\n    calcMinEthDeposit(\n      daiQty,\n      ethPrice = this.ethPrice,\n      liquidationRatio = this.liquidationRatio\n    ) {\n      if (daiQty <= 0) return 0;\n      return bnOver(liquidationRatio, daiQty, ethPrice);\n    },\n\n    calcCollatRatio(ethQty, daiQty) {\n      if (ethQty <= 0 || daiQty <= 0) return 0;\n      return bnOver(this.ethPrice, ethQty, daiQty);\n    },\n\n    calcLiquidationPrice(ethQty, daiQty) {\n      if (ethQty <= 0 || daiQty <= 0) return 0;\n      const getInt = parseInt(this.ethPrice);\n      for (let i = getInt; i > 0; i--) {\n        const atValue = bnOver(i, ethQty, daiQty).lte(this.liquidationRatio);\n        if (atValue) {\n          return i;\n        }\n      }\n      for (let i = 100; i > 0; i--) {\n        const atValue = bnOver(i / 100, ethQty, daiQty).lte(\n          this.liquidationRatio\n        );\n        if (atValue) {\n          return i / 100;\n        }\n      }\n      return 0;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'CreateCDP';\n</style>\n"],"sourceRoot":"src/dapps/MakerDai/containers/CreateCDP"}]}