{"remainingRequest":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/dapps/MakerDai/components/SelectCdpEntry/SelectCdpEntry.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/dapps/MakerDai/components/SelectCdpEntry/SelectCdpEntry.vue","mtime":1573477611656},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport InterfaceContainerTitle from '@/layouts/InterfaceLayout/components/InterfaceContainerTitle';\nimport InterfaceBottomText from '@/components/InterfaceBottomText';\nimport Blockie from '@/components/Blockie';\nimport BigNumber from 'bignumber.js/bignumber.js';\n\nvar toBigNumber = function toBigNumber(num) {\n  return new BigNumber(num);\n};\n\nexport default {\n  components: {\n    'interface-container-title': InterfaceContainerTitle,\n    'interface-bottom-text': InterfaceBottomText,\n    blockie: Blockie\n  },\n  props: {\n    cdpId: {\n      type: String,\n      default: '0'\n    },\n    aCdp: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    return {};\n  },\n  computed: _objectSpread({}, mapState(['account', 'gasPrice', 'web3', 'network', 'ens']), {\n    hasProxy: function hasProxy() {\n      if (this.aCdp) {\n        return !this.aCdp.noProxy;\n      }\n\n      return true;\n    }\n  }),\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: {\n    openManage: function openManage() {\n      if (this.$route.path.includes('maker-dai')) {\n        this.$router.push({\n          name: 'manage',\n          params: {\n            cdpId: this.cdpId\n          }\n        });\n      }\n    },\n    openMigrate: function openMigrate() {\n      if (this.$route.path.includes('maker-dai')) {\n        this.$router.push({\n          name: 'migrate',\n          params: {\n            cdpId: this.cdpId\n          }\n        });\n      }\n    },\n    displayPercentValue: function displayPercentValue(raw) {\n      if (!BigNumber.isBigNumber(raw)) raw = new BigNumber(raw);\n      return raw.times(100).toString();\n    },\n    displayFixedValue: function displayFixedValue(raw) {\n      var decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n      if (!BigNumber.isBigNumber(raw)) raw = new BigNumber(raw);\n\n      if (raw.isFinite()) {\n        return raw.toFixed(decimals).toString();\n      }\n\n      return '--';\n    },\n    safeRank: function safeRank(val) {\n      if (toBigNumber(val).gte(2)) {\n        return 'green';\n      }\n\n      if (toBigNumber(val).lt(1.6)) {\n        return 'red';\n      }\n\n      return 'orange';\n    }\n  }\n};",{"version":3,"sources":["SelectCdpEntry.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6FA,SAAA,QAAA,QAAA,MAAA;AACA,OAAA,uBAAA,MAAA,8DAAA;AACA,OAAA,mBAAA,MAAA,kCAAA;AACA,OAAA,OAAA,MAAA,sBAAA;AACA,OAAA,SAAA,MAAA,2BAAA;;AAEA,IAAA,WAAA,GAAA,SAAA,WAAA,CAAA,GAAA,EAAA;AACA,SAAA,IAAA,SAAA,CAAA,GAAA,CAAA;AACA,CAFA;;AAIA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,iCAAA,uBADA;AAEA,6BAAA,mBAFA;AAGA,IAAA,OAAA,EAAA;AAHA,GADA;AAMA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA;AACA,eAAA,EAAA;AACA;AAJA;AALA,GANA;AAkBA,EAAA,IAlBA,kBAkBA;AACA,WAAA,EAAA;AACA,GApBA;AAqBA,EAAA,QAAA,oBACA,QAAA,CAAA,CAAA,SAAA,EAAA,UAAA,EAAA,MAAA,EAAA,SAAA,EAAA,KAAA,CAAA,CADA;AAEA,IAAA,QAFA,sBAEA;AACA,UAAA,KAAA,IAAA,EAAA;AACA,eAAA,CAAA,KAAA,IAAA,CAAA,OAAA;AACA;;AACA,aAAA,IAAA;AACA;AAPA,IArBA;AA8BA,EAAA,OA9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA+BA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,UAAA,KAAA,MAAA,CAAA,IAAA,CAAA,QAAA,CAAA,WAAA,CAAA,EAAA;AACA,aAAA,OAAA,CAAA,IAAA,CAAA;AACA,UAAA,IAAA,EAAA,QADA;AAEA,UAAA,MAAA,EAAA;AACA,YAAA,KAAA,EAAA,KAAA;AADA;AAFA,SAAA;AAMA;AACA,KAVA;AAWA,IAAA,WAXA,yBAWA;AACA,UAAA,KAAA,MAAA,CAAA,IAAA,CAAA,QAAA,CAAA,WAAA,CAAA,EAAA;AACA,aAAA,OAAA,CAAA,IAAA,CAAA;AACA,UAAA,IAAA,EAAA,SADA;AAEA,UAAA,MAAA,EAAA;AACA,YAAA,KAAA,EAAA,KAAA;AADA;AAFA,SAAA;AAMA;AACA,KApBA;AAqBA,IAAA,mBArBA,+BAqBA,GArBA,EAqBA;AACA,UAAA,CAAA,SAAA,CAAA,WAAA,CAAA,GAAA,CAAA,EAAA,GAAA,GAAA,IAAA,SAAA,CAAA,GAAA,CAAA;AACA,aAAA,GAAA,CAAA,KAAA,CAAA,GAAA,EAAA,QAAA,EAAA;AACA,KAxBA;AAyBA,IAAA,iBAzBA,6BAyBA,GAzBA,EAyBA;AAAA,UAAA,QAAA,uEAAA,CAAA;AACA,UAAA,CAAA,SAAA,CAAA,WAAA,CAAA,GAAA,CAAA,EAAA,GAAA,GAAA,IAAA,SAAA,CAAA,GAAA,CAAA;;AACA,UAAA,GAAA,CAAA,QAAA,EAAA,EAAA;AACA,eAAA,GAAA,CAAA,OAAA,CAAA,QAAA,EAAA,QAAA,EAAA;AACA;;AACA,aAAA,IAAA;AACA,KA/BA;AAgCA,IAAA,QAhCA,oBAgCA,GAhCA,EAgCA;AACA,UAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,EAAA;AACA,eAAA,OAAA;AACA;;AACA,UAAA,WAAA,CAAA,GAAA,CAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAA;AACA,eAAA,KAAA;AACA;;AACA,aAAA,QAAA;AACA;AAxCA;AA/BA,CAAA","sourcesContent":["<template>\n  <div>\n    <div class=\"container-maker\">\n      <div class=\"manage-container\">\n        <div class=\"manage-container-blocks\">\n          <div class=\"information-single-block\">\n            <div class=\"block-item\">\n              <div class=\"block-title\">\n                <div class=\"select-label\">\n                  <p>{{ $t('dappsMaker.positionLabel', { value: cdpId }) }}</p>\n\n                  <p>\n                    <span class=\"standard-button__green-border\">\n                      <button\n                        v-if=\"hasProxy\"\n                        class=\"the-button-box\"\n                        @click=\"openManage(cdpId)\"\n                      >\n                        {{ $t('dappsMaker.manage') }}\n                      </button>\n                      <button\n                        v-if=\"!hasProxy\"\n                        class=\"the-button-box\"\n                        @click=\"openMigrate(cdpId)\"\n                      >\n                        {{ $t('dappsMaker.view') }}\n                      </button>\n                    </span>\n                  </p>\n                </div>\n              </div>\n\n              <div class=\"block-content-container\">\n                <div class=\"block-content\">\n                  <div class=\"item\">\n                    <div>\n                      <p>{{ $t('dappsMaker.deposited') }}</p>\n                    </div>\n                    <div>\n                      {{ displayFixedValue(aCdp.ethCollateral, 5, false) }}\n                      <span>ETH</span>\n                    </div>\n                    <div>\n                      {{ displayFixedValue(aCdp.pethCollateral, 5, true) }}\n                      <span>PETH</span> /\n                      {{ displayFixedValue(aCdp.usdCollateral, 2) }}\n                      <span>USD</span>\n                    </div>\n                    <div>\n                      <br />\n                      <div>{{ $t('dappsMaker.liquidPrice') }} (ETH/USD)</div>\n                      <span :class=\"safeRank(aCdp.collatRatio)\">{{\n                        aCdp ? displayFixedValue(aCdp.liquidationPrice, 2) : 0\n                      }}</span>\n                      <span class=\"liq-usd\"> USD</span>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"block-content\">\n                  <div class=\"item\">\n                    <div>\n                      <p>{{ $t('dappsMaker.generated') }}</p>\n                    </div>\n                    <div>{{ aCdp.debtValue }} <span>DAI</span></div>\n                    <div>\n                      {{ displayFixedValue(aCdp.debtValue, 2) }}\n                      <span>USD</span>\n                    </div>\n                    <div>\n                      <br />\n                      <div>{{ $t('dappsMaker.collateralRatio') }}</div>\n                      <span :class=\"safeRank(aCdp.collatRatio)\">\n                        {{\n                          aCdp\n                            ? displayFixedValue(\n                                displayPercentValue(aCdp.collatRatio)\n                              )\n                            : 0\n                        }}%\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport InterfaceContainerTitle from '@/layouts/InterfaceLayout/components/InterfaceContainerTitle';\nimport InterfaceBottomText from '@/components/InterfaceBottomText';\nimport Blockie from '@/components/Blockie';\nimport BigNumber from 'bignumber.js/bignumber.js';\n\nconst toBigNumber = num => {\n  return new BigNumber(num);\n};\n\nexport default {\n  components: {\n    'interface-container-title': InterfaceContainerTitle,\n    'interface-bottom-text': InterfaceBottomText,\n    blockie: Blockie\n  },\n  props: {\n    cdpId: {\n      type: String,\n      default: '0'\n    },\n    aCdp: {\n      type: Object,\n      default: function() {\n        return {};\n      }\n    }\n  },\n  data() {\n    return {};\n  },\n  computed: {\n    ...mapState(['account', 'gasPrice', 'web3', 'network', 'ens']),\n    hasProxy() {\n      if (this.aCdp) {\n        return !this.aCdp.noProxy;\n      }\n      return true;\n    }\n  },\n  async mounted() {},\n  methods: {\n    openManage() {\n      if (this.$route.path.includes('maker-dai')) {\n        this.$router.push({\n          name: 'manage',\n          params: {\n            cdpId: this.cdpId\n          }\n        });\n      }\n    },\n    openMigrate() {\n      if (this.$route.path.includes('maker-dai')) {\n        this.$router.push({\n          name: 'migrate',\n          params: {\n            cdpId: this.cdpId\n          }\n        });\n      }\n    },\n    displayPercentValue(raw) {\n      if (!BigNumber.isBigNumber(raw)) raw = new BigNumber(raw);\n      return raw.times(100).toString();\n    },\n    displayFixedValue(raw, decimals = 3) {\n      if (!BigNumber.isBigNumber(raw)) raw = new BigNumber(raw);\n      if (raw.isFinite()) {\n        return raw.toFixed(decimals).toString();\n      }\n      return '--';\n    },\n    safeRank(val) {\n      if (toBigNumber(val).gte(2)) {\n        return 'green';\n      }\n      if (toBigNumber(val).lt(1.6)) {\n        return 'red';\n      }\n      return 'orange';\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'SelectCdpEntry';\n</style>\n"],"sourceRoot":"src/dapps/MakerDai/components/SelectCdpEntry"}]}