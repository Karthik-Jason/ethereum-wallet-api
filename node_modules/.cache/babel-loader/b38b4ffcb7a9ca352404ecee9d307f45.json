{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/layouts/InterfaceLayout/components/InterfaceTokens/InterfaceTokens.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/layouts/InterfaceLayout/components/InterfaceTokens/InterfaceTokens.vue","mtime":1573477611976},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.search\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport store from 'store';\nimport { mapState } from 'vuex';\nimport { Toast } from '@/helpers';\nimport { toChecksumAddress } from '@/helpers/addressUtils';\nimport InterfaceTokensModal from \"../InterfaceTokensModal\";\nimport InterfaceAds from \"../InterfaceAds\";\nimport sortByBalance from '@/helpers/sortByBalance.js';\nimport utils from 'web3-utils';\nimport * as networkTypes from '@/networks/types';\nexport default {\n  components: {\n    'interface-tokens-modal': InterfaceTokensModal,\n    'interface-ads': InterfaceAds\n  },\n  props: {\n    tokens: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    receivedTokens: {\n      type: Boolean,\n      default: false\n    },\n    getTokenBalance: {\n      type: Function,\n      default: function _default() {}\n    },\n    fetchTokens: {\n      type: Function,\n      default: function _default() {}\n    },\n    resetTokenSelection: {\n      type: Function,\n      default: function _default() {}\n    },\n    ads: {\n      type: Boolean,\n      default: true\n    },\n    address: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      search: '',\n      localTokens: [],\n      customTokens: [],\n      util: utils,\n      tokenExists: false\n    };\n  },\n  computed: _objectSpread({}, mapState(['network', 'web3', 'online'])),\n  watch: {\n    receivedTokens: function receivedTokens() {\n      this.getCustomTokens();\n    },\n    tokens: function tokens(newVal) {\n      this.assignTokens(newVal, this.search);\n      this.getCustomTokens();\n    },\n    search: function search(newVal) {\n      this.assignTokens(this.tokens, newVal);\n    }\n  },\n  methods: {\n    getV3Tokens: function getV3Tokens() {\n      var _this = this;\n\n      var v3Tokens = store.get('localTokens');\n      var v5CustomTokens = store.get('customTokens');\n      v3Tokens.forEach(function (token) {\n        var newObj = {\n          address: token.contractAddress,\n          decimals: token.decimal,\n          email: '',\n          name: token.symbol,\n          symbol: token.symbol,\n          website: '',\n          type: 'custom'\n        };\n        Object.keys(networkTypes).forEach(function (network) {\n          if (token.network && (networkTypes[network].name.toLowerCase() === token.network.toLowerCase() || networkTypes[network].name_long.toLowerCase() === token.network.toLowerCase())) {\n            if (_this.tokenError(newObj.address, newObj.symbol, '')) {\n              v5CustomTokens[networkTypes[network].name].push(newObj);\n            }\n          }\n        });\n      });\n      store.set('customTokens', v5CustomTokens);\n      store.remove('localTokens');\n    },\n    getCustomTokens: function getCustomTokens() {\n      if (store.get('localTokens') !== undefined) {\n        this.getV3Tokens();\n      }\n\n      var storedTokens = store.get('customTokens') || {};\n      this.customTokens = storedTokens.hasOwnProperty(this.network.type.name) ? storedTokens[this.network.type.name] : [];\n      this.localCustomTokens = storedTokens.hasOwnProperty(this.network.type.name) ? storedTokens[this.network.type.name] : [];\n    },\n    getSpecificTokenBalance: function () {\n      var _getSpecificTokenBalance = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(token) {\n        var i;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                i = 0;\n\n              case 1:\n                if (!(i < this.tokens.length)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                if (!(toChecksumAddress(this.tokens[i].address) === toChecksumAddress(token.address))) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 5;\n                return this.getTokenBalance(token);\n\n              case 5:\n                this.tokens[i].balance = _context.sent;\n\n              case 6:\n                i++;\n                _context.next = 1;\n                break;\n\n              case 9:\n                this.tokens.sort(sortByBalance);\n                this.resetTokenSelection();\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getSpecificTokenBalance(_x) {\n        return _getSpecificTokenBalance.apply(this, arguments);\n      }\n\n      return getSpecificTokenBalance;\n    }(),\n    addTokenModal: function addTokenModal() {\n      this.$refs.tokenModal.$refs.tokenModal.show();\n    },\n    removeToken: function removeToken(idx) {\n      var storedTokens = store.get('customTokens');\n      this.customTokens.splice(idx, 1);\n      this.localCustomTokens = this.customTokens.splice();\n      storedTokens[this.network.type.name] = this.customTokens;\n      store.set('customTokens', storedTokens);\n      this.fetchTokens();\n    },\n    searchBySymbol: function searchBySymbol(symbol) {\n      var searchNetwork = this.localTokens.find(function (item) {\n        return item.symbol.toLowerCase() === symbol.toLowerCase();\n      });\n      var searchCustom = this.customTokens.find(function (item) {\n        return item.symbol.toLowerCase() === symbol.toLowerCase();\n      });\n\n      if (searchNetwork !== undefined || searchCustom !== undefined) {\n        return false;\n      }\n\n      return true;\n    },\n    searchByAddr: function searchByAddr(addr) {\n      var searchNetwork = this.localTokens.find(function (item) {\n        return utils.toChecksumAddress(item.address) === utils.toChecksumAddress(addr);\n      });\n      var searchCustom = this.customTokens.find(function (item) {\n        return utils.toChecksumAddress(item.address) === utils.toChecksumAddress(addr);\n      });\n\n      if (searchNetwork !== undefined || searchCustom !== undefined) {\n        return false;\n      }\n\n      return true;\n    },\n    tokenError: function tokenError(address, symbol, addType) {\n      var findTokenBySymbol = this.searchBySymbol(symbol);\n      var findTokenByAddr = this.searchByAddr(address);\n\n      if (!findTokenByAddr && addType !== '') {\n        this.$refs.tokenModal.$refs.tokenModal.hide();\n        Toast.responseHandler('A default or custom token with this contract address already exists!', Toast.ERROR);\n        return false;\n      } else if (!findTokenBySymbol && addType !== '') {\n        this.$refs.tokenModal.$refs.tokenModal.hide();\n        Toast.responseHandler(\"A default or custom token with this symbol already exists! The token in our list may have the same symbol but a different contract address, try adding it again with a '2' after the symbol!\", Toast.ERROR);\n        return false;\n      }\n\n      return findTokenByAddr || findTokenBySymbol;\n    },\n    addToken: function () {\n      var _addToken = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(address, symbol, decimal) {\n        var token, currentCustomToken;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this.tokenError(address, symbol, 'manual')) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                token = {\n                  address: address,\n                  decimals: decimal,\n                  email: '',\n                  name: symbol,\n                  symbol: symbol,\n                  website: '',\n                  type: 'custom'\n                };\n                currentCustomToken = store.get('customTokens');\n                this.customTokens = this.customTokens.length > 0 ? this.customTokens : [];\n                this.customTokens.push(token);\n                this.localCustomTokens = this.customTokens.splice();\n                currentCustomToken[this.network.type.name] = this.customTokens;\n                store.set('customTokens', currentCustomToken);\n                this.$refs.tokenModal.$refs.tokenModal.hide();\n                _context2.next = 11;\n                return this.fetchTokens();\n\n              case 11:\n                Toast.responseHandler('Successfully added token!', Toast.SUCCESS);\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function addToken(_x2, _x3, _x4) {\n        return _addToken.apply(this, arguments);\n      }\n\n      return addToken;\n    }(),\n    tokenListExpend: function tokenListExpend() {\n      this.$refs.tokenTableContainer.classList.toggle('expanded');\n      this.$refs.expendDown.classList.toggle('hidden');\n      this.$refs.expendUp.classList.toggle('hidden');\n    },\n    assignTokens: function () {\n      var _assignTokens = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(arr, query) {\n        var localCustomTok;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                localCustomTok = this.customTokens.length > 0 ? this.customTokens.slice() : [];\n\n                if (query !== '') {\n                  this.customTokens = localCustomTok.filter(function (token) {\n                    if (token.name.toLowerCase().includes(query.toLowerCase())) {\n                      return token;\n                    }\n                  }).sort(sortByBalance);\n                  this.localTokens = this.tokens.filter(function (token) {\n                    if (token.name.toLowerCase().includes(query.toLowerCase())) {\n                      return token;\n                    }\n                  }).sort(sortByBalance);\n                } else {\n                  this.localTokens = arr;\n                  this.customTokens = this.localCustomTokens;\n                }\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function assignTokens(_x5, _x6) {\n        return _assignTokens.apply(this, arguments);\n      }\n\n      return assignTokens;\n    }()\n  }\n};",{"version":3,"sources":["InterfaceTokens.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"transaction-tokens\">\n    <interface-tokens-modal ref=\"tokenModal\" :add-token=\"addToken\" />\n    <div class=\"wrap\">\n      <div class=\"tokens-container\">\n        <div class=\"token-search\">\n          <div class=\"block-title\">\n            <div class=\"title-container\">\n              <h4>{{ $t('interface.tokens') }}</h4>\n              <img\n                alt\n                src=\"~@/assets/images/icons/change.svg\"\n                @click=\"fetchTokens\"\n              />\n            </div>\n            <p @click=\"addTokenModal\">+ {{ $t('interface.customToken') }}</p>\n          </div>\n          <div class=\"search-block\">\n            <input v-model=\"search\" placeholder=\"Search\" autocomplete=\"off\" />\n            <i class=\"fa fa-search\" aria-hidden=\"true\" />\n          </div>\n        </div>\n        <div v-show=\"!online\" class=\"cant-load\">\n          Can't load balances on offline mode\n        </div>\n        <div ref=\"tokenTableContainer\" class=\"token-table-container\">\n          <table v-show=\"customTokens.length > 0 && receivedTokens\">\n            <tr\n              v-for=\"(token, index) in customTokens\"\n              :key=\"token.name + index\"\n            >\n              <td>{{ token.name }}</td>\n              <td>\n                {{ token.balance }}\n                <i\n                  class=\"fa fa-times-circle clickable\"\n                  @click=\"removeToken(index)\"\n                />\n              </td>\n            </tr>\n          </table>\n\n          <table v-show=\"localTokens.length > 0 && receivedTokens\">\n            <tr v-for=\"(token, index) in localTokens\" :key=\"token.name + index\">\n              <td>{{ token.name }}</td>\n              <td\n                v-if=\"token.balance === 'Load' && online\"\n                class=\"load-token\"\n                @click=\"online ? getSpecificTokenBalance(token) : () => {}\"\n              >\n                {{ token.balance }}\n              </td>\n              <td v-else>{{ token.balance }}</td>\n            </tr>\n          </table>\n\n          <div\n            v-show=\"\n              search === '' && localTokens.length === 0 && !receivedTokens\n            \"\n            class=\"spinner-container\"\n          >\n            <i class=\"fa fa-spinner fa-spin\" />\n          </div>\n          <div\n            v-show=\"\n              search !== '' &&\n                localTokens.length === 0 &&\n                customTokens.length === 0\n            \"\n            class=\"spinner-container\"\n          >\n            No tokens found :(\n          </div>\n        </div>\n        <div\n          v-if=\"customTokens.length + localTokens.length > 15\"\n          class=\"expend-bar\"\n          @click=\"tokenListExpend\"\n        >\n          <p ref=\"expendDown\" class=\"down\">\n            <i class=\"fa fa-angle-double-down\" aria-hidden=\"true\" />\n          </p>\n          <p ref=\"expendUp\" class=\"up hidden\">\n            <i class=\"fa fa-angle-double-up\" aria-hidden=\"true\" />\n          </p>\n        </div>\n      </div>\n      <interface-ads></interface-ads>\n    </div>\n  </div>\n</template>\n\n<script>\nimport store from 'store';\nimport { mapState } from 'vuex';\nimport { Toast } from '@/helpers';\nimport { toChecksumAddress } from '@/helpers/addressUtils';\nimport InterfaceTokensModal from '../InterfaceTokensModal';\nimport InterfaceAds from '../InterfaceAds';\nimport sortByBalance from '@/helpers/sortByBalance.js';\nimport utils from 'web3-utils';\nimport * as networkTypes from '@/networks/types';\n\nexport default {\n  components: {\n    'interface-tokens-modal': InterfaceTokensModal,\n    'interface-ads': InterfaceAds\n  },\n  props: {\n    tokens: {\n      type: Array,\n      default: function() {\n        return [];\n      }\n    },\n    receivedTokens: {\n      type: Boolean,\n      default: false\n    },\n    getTokenBalance: {\n      type: Function,\n      default: function() {}\n    },\n    fetchTokens: {\n      type: Function,\n      default: function() {}\n    },\n    resetTokenSelection: {\n      type: Function,\n      default: function() {}\n    },\n    ads: {\n      type: Boolean,\n      default: true\n    },\n    address: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      search: '',\n      localTokens: [],\n      customTokens: [],\n      util: utils,\n      tokenExists: false\n    };\n  },\n  computed: {\n    ...mapState(['network', 'web3', 'online'])\n  },\n  watch: {\n    receivedTokens() {\n      this.getCustomTokens();\n    },\n    tokens(newVal) {\n      this.assignTokens(newVal, this.search);\n      this.getCustomTokens();\n    },\n    search(newVal) {\n      this.assignTokens(this.tokens, newVal);\n    }\n  },\n  methods: {\n    getV3Tokens() {\n      const v3Tokens = store.get('localTokens');\n      const v5CustomTokens = store.get('customTokens');\n      v3Tokens.forEach(token => {\n        const newObj = {\n          address: token.contractAddress,\n          decimals: token.decimal,\n          email: '',\n          name: token.symbol,\n          symbol: token.symbol,\n          website: '',\n          type: 'custom'\n        };\n        Object.keys(networkTypes).forEach(network => {\n          if (\n            token.network &&\n            (networkTypes[network].name.toLowerCase() ===\n              token.network.toLowerCase() ||\n              networkTypes[network].name_long.toLowerCase() ===\n                token.network.toLowerCase())\n          ) {\n            if (this.tokenError(newObj.address, newObj.symbol, '')) {\n              v5CustomTokens[networkTypes[network].name].push(newObj);\n            }\n          }\n        });\n      });\n      store.set('customTokens', v5CustomTokens);\n      store.remove('localTokens');\n    },\n    getCustomTokens() {\n      if (store.get('localTokens') !== undefined) {\n        this.getV3Tokens();\n      }\n      const storedTokens = store.get('customTokens') || {};\n      this.customTokens = storedTokens.hasOwnProperty(this.network.type.name)\n        ? storedTokens[this.network.type.name]\n        : [];\n      this.localCustomTokens = storedTokens.hasOwnProperty(\n        this.network.type.name\n      )\n        ? storedTokens[this.network.type.name]\n        : [];\n    },\n    async getSpecificTokenBalance(token) {\n      for (let i = 0; i < this.tokens.length; i++) {\n        if (\n          toChecksumAddress(this.tokens[i].address) ===\n          toChecksumAddress(token.address)\n        ) {\n          this.tokens[i].balance = await this.getTokenBalance(token);\n        }\n      }\n      this.tokens.sort(sortByBalance);\n      this.resetTokenSelection();\n    },\n    addTokenModal() {\n      this.$refs.tokenModal.$refs.tokenModal.show();\n    },\n    removeToken(idx) {\n      const storedTokens = store.get('customTokens');\n      this.customTokens.splice(idx, 1);\n      this.localCustomTokens = this.customTokens.splice();\n      storedTokens[this.network.type.name] = this.customTokens;\n      store.set('customTokens', storedTokens);\n      this.fetchTokens();\n    },\n    searchBySymbol(symbol) {\n      const searchNetwork = this.localTokens.find(item => {\n        return item.symbol.toLowerCase() === symbol.toLowerCase();\n      });\n\n      const searchCustom = this.customTokens.find(item => {\n        return item.symbol.toLowerCase() === symbol.toLowerCase();\n      });\n\n      if (searchNetwork !== undefined || searchCustom !== undefined) {\n        return false;\n      }\n      return true;\n    },\n    searchByAddr(addr) {\n      const searchNetwork = this.localTokens.find(item => {\n        return (\n          utils.toChecksumAddress(item.address) ===\n          utils.toChecksumAddress(addr)\n        );\n      });\n\n      const searchCustom = this.customTokens.find(item => {\n        return (\n          utils.toChecksumAddress(item.address) ===\n          utils.toChecksumAddress(addr)\n        );\n      });\n\n      if (searchNetwork !== undefined || searchCustom !== undefined) {\n        return false;\n      }\n      return true;\n    },\n    tokenError(address, symbol, addType) {\n      const findTokenBySymbol = this.searchBySymbol(symbol);\n      const findTokenByAddr = this.searchByAddr(address);\n      if (!findTokenByAddr && addType !== '') {\n        this.$refs.tokenModal.$refs.tokenModal.hide();\n        Toast.responseHandler(\n          'A default or custom token with this contract address already exists!',\n          Toast.ERROR\n        );\n        return false;\n      } else if (!findTokenBySymbol && addType !== '') {\n        this.$refs.tokenModal.$refs.tokenModal.hide();\n        Toast.responseHandler(\n          \"A default or custom token with this symbol already exists! The token in our list may have the same symbol but a different contract address, try adding it again with a '2' after the symbol!\",\n          Toast.ERROR\n        );\n        return false;\n      }\n      return findTokenByAddr || findTokenBySymbol;\n    },\n    async addToken(address, symbol, decimal) {\n      if (this.tokenError(address, symbol, 'manual')) {\n        const token = {\n          address: address,\n          decimals: decimal,\n          email: '',\n          name: symbol,\n          symbol: symbol,\n          website: '',\n          type: 'custom'\n        };\n        const currentCustomToken = store.get('customTokens');\n        this.customTokens =\n          this.customTokens.length > 0 ? this.customTokens : [];\n        this.customTokens.push(token);\n        this.localCustomTokens = this.customTokens.splice();\n        currentCustomToken[this.network.type.name] = this.customTokens;\n        store.set('customTokens', currentCustomToken);\n        this.$refs.tokenModal.$refs.tokenModal.hide();\n        await this.fetchTokens();\n        Toast.responseHandler('Successfully added token!', Toast.SUCCESS);\n      }\n    },\n    tokenListExpend() {\n      this.$refs.tokenTableContainer.classList.toggle('expanded');\n      this.$refs.expendDown.classList.toggle('hidden');\n      this.$refs.expendUp.classList.toggle('hidden');\n    },\n    async assignTokens(arr, query) {\n      const localCustomTok =\n        this.customTokens.length > 0 ? this.customTokens.slice() : [];\n      if (query !== '') {\n        this.customTokens = localCustomTok\n          .filter(token => {\n            if (token.name.toLowerCase().includes(query.toLowerCase())) {\n              return token;\n            }\n          })\n          .sort(sortByBalance);\n        this.localTokens = this.tokens\n          .filter(token => {\n            if (token.name.toLowerCase().includes(query.toLowerCase())) {\n              return token;\n            }\n          })\n          .sort(sortByBalance);\n      } else {\n        this.localTokens = arr;\n        this.customTokens = this.localCustomTokens;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'InterfaceTokens.scss';\n</style>\n"],"sourceRoot":"src/layouts/InterfaceLayout/components/InterfaceTokens"}]}