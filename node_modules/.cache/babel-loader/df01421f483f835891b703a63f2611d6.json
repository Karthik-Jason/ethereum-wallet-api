{"remainingRequest":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/dapps/MakerDai/components/GenerateModal/GenerateModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/dapps/MakerDai/components/GenerateModal/GenerateModal.vue","mtime":1573477611644},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport ethUnit from 'ethjs-unit';\nimport ExpandingOption from '@/components/ExpandingOption';\nimport StandardButton from '@/components/Buttons/StandardButton';\nimport HelpCenterButton from '@/components/Buttons/HelpCenterButton';\nimport CheckBox from \"../CheckBox\";\nimport BigNumber from 'bignumber.js/bignumber.js';\nimport { displayFixedValue, displayPercentValue, displayFixedPercent } from \"../../helpers\";\n\nvar toBigNumber = function toBigNumber(num) {\n  return new BigNumber(num);\n};\n\nexport default {\n  components: {\n    'help-center-button': HelpCenterButton,\n    'check-box': CheckBox,\n    'expanding-option': ExpandingOption,\n    'standard-button': StandardButton\n  },\n  props: {\n    tokensWithBalance: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    action: {\n      type: String,\n      default: ''\n    },\n    values: {\n      type: Object,\n      default: function _default() {\n        return {\n          maxPethDraw: '',\n          maxEthDraw: '',\n          maxUsdDraw: '',\n          ethCollateral: '',\n          pethCollateral: '',\n          usdCollateral: '',\n          debtValue: '',\n          maxDai: '',\n          collateralRatio: '',\n          cdpId: ''\n        };\n      }\n    },\n    calcCollatRatioEthChg: {\n      type: Function,\n      default: function _default() {}\n    },\n    calcLiquidationPriceEthChg: {\n      type: Function,\n      default: function _default() {}\n    },\n    calcCollatRatioDaiChg: {\n      type: Function,\n      default: function _default() {}\n    },\n    calcLiquidationPriceDaiChg: {\n      type: Function,\n      default: function _default() {}\n    }\n  },\n  data: function data() {\n    return {\n      amount: 0,\n      amountEth: 0,\n      amountDai: 0,\n      riskyBypass: false,\n      modalDetailInformation: false,\n      textValues: {},\n      fiatCurrency: 'USD',\n      digitalCurrency: 'ETH',\n      cancelButton: {\n        title: 'Cancel',\n        buttonStyle: 'green-border',\n        noMinWidth: true\n      },\n      generateButton: {\n        title: 'Generate',\n        buttonStyle: 'green',\n        noMinWidth: true\n      }\n    };\n  },\n  computed: _objectSpread({}, mapState(['account', 'gasPrice', 'web3', 'network', 'ens']), {\n    amountPresent: function amountPresent() {\n      return (this.amount || this.amount !== '') && !toBigNumber(this.amount).lte(0);\n    },\n    canCompute: function canCompute() {\n      return this.values && this.amountPresent;\n    },\n    allOk: function allOk() {\n      if (this.amountPresent) {\n        return this.newCollateralRatioSafe && this.canGenerateDaiAmount;\n      }\n\n      return true;\n    },\n    showWarning: function showWarning() {\n      return !this.newCollateralRatioInvalid && this.canGenerateDaiAmount && this.riskyBypass;\n    },\n    newTotal: function newTotal() {\n      return toBigNumber(this.values.debtValue).plus(this.amount);\n    },\n    hasEnoughEth: function hasEnoughEth() {\n      if (this.canCompute) {\n        var asEth = ethUnit.fromWei(this.account.balance, 'ether');\n        return toBigNumber(this.amount).lte(toBigNumber(asEth));\n      }\n\n      return true;\n    },\n    canGenerateDaiAmount: function canGenerateDaiAmount() {\n      if (this.canCompute && !toBigNumber(this.amount).isNaN()) {\n        return toBigNumber(this.amount).lte(toBigNumber(this.values.maxDai));\n      }\n\n      return true;\n    },\n    canProceed: function canProceed() {\n      if (this.canCompute) {\n        if (toBigNumber(this.amount).lte(0)) return false;\n        return this.newCollateralRatioSafe && this.canGenerateDaiAmount || !this.newCollateralRatioInvalid && this.canGenerateDaiAmount && this.riskyBypass;\n      }\n\n      return false;\n    },\n    calcCollateralRatio: function calcCollateralRatio() {\n      if (this.canCompute) {\n        return this.calcCollatRatioDaiChg(toBigNumber(this.values.debtValue).plus(this.amount));\n      }\n\n      if (this.values) {\n        return this.values.collateralRatio;\n      }\n    },\n    newCollateralRatio: function newCollateralRatio() {\n      if (this.canCompute || this.values) {\n        return this.displayFixedPercent(this.calcCollateralRatio);\n      }\n\n      return '--';\n    },\n    newCollateralRatioSafe: function newCollateralRatioSafe() {\n      if (this.canCompute) {\n        return this.calcCollateralRatio.gte(2);\n      }\n\n      return true;\n    },\n    newCollateralRatioInvalid: function newCollateralRatioInvalid() {\n      if (this.canCompute) {\n        return this.calcCollateralRatio.lte(1.5);\n      }\n\n      return true;\n    },\n    newLiquidationPrice: function newLiquidationPrice() {\n      if (this.canCompute) {\n        return this.calcLiquidationPriceDaiChg(toBigNumber(this.values.debtValue).plus(this.amount));\n      } else if (this.values) {\n        return this.values.liquidationPrice;\n      }\n\n      return 0;\n    }\n  }),\n  methods: {\n    submitBtn: function submitBtn() {\n      if (!this.canProceed) return;\n      this.drawDai();\n    },\n    checkBoxClicked: function checkBoxClicked(checked) {\n      this.riskyBypass = checked;\n    },\n    displayPercentValue: displayPercentValue,\n    displayFixedValue: displayFixedValue,\n    displayFixedPercent: displayFixedPercent,\n    notZero: function notZero(val) {\n      return toBigNumber(val).gt(0);\n    },\n    maxDai: function maxDai() {\n      this.amount = toBigNumber(this.values.maxDai).minus(toBigNumber(this.values.maxDai).times(0.01));\n      this.$forceUpdate();\n    },\n    currentDai: function currentDai() {\n      this.amount = this.values.debtValue;\n    },\n    drawDai: function () {\n      var _drawDai = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (toBigNumber(this.amount).gte(0)) {\n                  this.delayCloseModal();\n\n                  if (this.newCollateralRatioSafe) {\n                    this.$emit('drawDai', [this.amount, null]);\n                  } else {\n                    this.$emit('drawDai', [this.amount, this.riskyBypass]);\n                  }\n                }\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function drawDai() {\n        return _drawDai.apply(this, arguments);\n      }\n\n      return drawDai;\n    }(),\n    closeModal: function closeModal() {\n      this.$refs.modal.hide();\n    },\n    delayCloseModal: function delayCloseModal() {\n      var _this = this;\n\n      setTimeout(function () {\n        _this.closeModal();\n      }, 200);\n    }\n  }\n};",{"version":3,"sources":["GenerateModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"modal-container\">\n    <b-modal\n      ref=\"modal\"\n      :title=\"$t('dappsMaker.generateTitle')\"\n      centered\n      class=\"bootstrap-modal nopadding\"\n      hide-footer\n      static\n      lazy\n    >\n      <div class=\"contents\">\n        <div class=\"inputs\">\n          <div class=\"interface__block-title\">\n            {{ $t('dappsMaker.generateQuestion') }}\n          </div>\n          <div class=\"top-buttons\">\n            <p class=\"total\">\n              <span>{{ $t('dappsMaker.total') }}</span>\n              {{ newTotal }}\n              DAI\n            </p>\n            <p class=\"max\" @click=\"maxDai\">\n              {{ $t('dappsMaker.maxBalance') }}\n            </p>\n          </div>\n          <div :class=\"['input-box', allOk ? '' : 'danger']\">\n            <input v-model=\"amount\" />\n            <p class=\"input-unit\">DAI</p>\n          </div>\n          <div class=\"sub-text\">\n            <p v-if=\"!canGenerateDaiAmount\" class=\"above-max\">\n              {{ $t('dappsMaker.aboveMaxDai') }}\n            </p>\n            <p>\n              {{\n                $t('dappsMaker.collateralRatioVal', {\n                  value: newCollateralRatio\n                })\n              }}\n            </p>\n          </div>\n        </div>\n        <expanding-option title=\"Details\">\n          <div class=\"detail-container\">\n            <div class=\"grid-block\">\n              <p>{{ $t('dappsMaker.maxGenerateAvailable') }}</p>\n              <p>\n                <b>\n                  {{ values.maxDai ? displayFixedValue(values.maxDai) : 0 }}\n                </b>\n                DAI\n              </p>\n            </div>\n            <div class=\"grid-block\">\n              <p>{{ $t('dappsMaker.projectedLiquidation') }}</p>\n              <p>\n                <b>{{ displayFixedValue(newLiquidationPrice, 2) }}</b>\n                {{ fiatCurrency }}\n              </p>\n            </div>\n            <div class=\"grid-block\">\n              <p>{{ $t('dappsMaker.projectedCollatRatio') }}</p>\n              <p>\n                <b>{{ newCollateralRatio }}%</b>\n              </p>\n            </div>\n          </div>\n        </expanding-option>\n\n        <div\n          v-if=\"!newCollateralRatioSafe && notZero(amount)\"\n          class=\"warning-confirmation\"\n        >\n          <div class=\"grid-block\">\n            <div class=\"sign\">⚠️</div>\n            <div class=\"text-content\">\n              <p class=\"title\">{{ $t('dappsMaker.caution') }}</p>\n              <p class=\"warning-details\">\n                {{\n                  $t('dappsMaker.liquidationRisk', {\n                    value: newCollateralRatio\n                  })\n                }}\n              </p>\n              <check-box @changeStatus=\"checkBoxClicked\">\n                <template v-slot:terms\n                  ><p class=\"checkbox-label\">\n                    {{ $t('dappsMaker.understandAndAgree') }}\n                  </p></template\n                >\n              </check-box>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"buttons\">\n          <standard-button\n            :options=\"cancelButton\"\n            :click-function=\"closeModal\"\n          />\n          <standard-button\n            :options=\"generateButton\"\n            :button-disabled=\"canProceed ? false : true\"\n            :click-function=\"submitBtn\"\n          />\n        </div>\n        <help-center-button />\n      </div>\n    </b-modal>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport ethUnit from 'ethjs-unit';\nimport ExpandingOption from '@/components/ExpandingOption';\nimport StandardButton from '@/components/Buttons/StandardButton';\nimport HelpCenterButton from '@/components/Buttons/HelpCenterButton';\nimport CheckBox from '../CheckBox';\nimport BigNumber from 'bignumber.js/bignumber.js';\nimport {\n  displayFixedValue,\n  displayPercentValue,\n  displayFixedPercent\n} from '../../helpers';\n\nconst toBigNumber = num => {\n  return new BigNumber(num);\n};\n\nexport default {\n  components: {\n    'help-center-button': HelpCenterButton,\n    'check-box': CheckBox,\n    'expanding-option': ExpandingOption,\n    'standard-button': StandardButton\n  },\n  props: {\n    tokensWithBalance: {\n      type: Array,\n      default: function() {\n        return [];\n      }\n    },\n    action: {\n      type: String,\n      default: ''\n    },\n    values: {\n      type: Object,\n      default: function() {\n        return {\n          maxPethDraw: '',\n          maxEthDraw: '',\n          maxUsdDraw: '',\n          ethCollateral: '',\n          pethCollateral: '',\n          usdCollateral: '',\n          debtValue: '',\n          maxDai: '',\n          collateralRatio: '',\n          cdpId: ''\n        };\n      }\n    },\n    calcCollatRatioEthChg: {\n      type: Function,\n      default: function() {}\n    },\n    calcLiquidationPriceEthChg: {\n      type: Function,\n      default: function() {}\n    },\n    calcCollatRatioDaiChg: {\n      type: Function,\n      default: function() {}\n    },\n    calcLiquidationPriceDaiChg: {\n      type: Function,\n      default: function() {}\n    }\n  },\n  data() {\n    return {\n      amount: 0,\n      amountEth: 0,\n      amountDai: 0,\n      riskyBypass: false,\n      modalDetailInformation: false,\n      textValues: {},\n      fiatCurrency: 'USD',\n      digitalCurrency: 'ETH',\n      cancelButton: {\n        title: 'Cancel',\n        buttonStyle: 'green-border',\n        noMinWidth: true\n      },\n      generateButton: {\n        title: 'Generate',\n        buttonStyle: 'green',\n        noMinWidth: true\n      }\n    };\n  },\n  computed: {\n    ...mapState(['account', 'gasPrice', 'web3', 'network', 'ens']),\n    amountPresent() {\n      return (\n        (this.amount || this.amount !== '') && !toBigNumber(this.amount).lte(0)\n      );\n    },\n    canCompute() {\n      return this.values && this.amountPresent;\n    },\n    allOk() {\n      if (this.amountPresent) {\n        return this.newCollateralRatioSafe && this.canGenerateDaiAmount;\n      }\n      return true;\n    },\n    showWarning() {\n      return (\n        !this.newCollateralRatioInvalid &&\n        this.canGenerateDaiAmount &&\n        this.riskyBypass\n      );\n    },\n    newTotal() {\n      return toBigNumber(this.values.debtValue).plus(this.amount);\n    },\n    hasEnoughEth() {\n      if (this.canCompute) {\n        const asEth = ethUnit.fromWei(this.account.balance, 'ether');\n        return toBigNumber(this.amount).lte(toBigNumber(asEth));\n      }\n      return true;\n    },\n    canGenerateDaiAmount() {\n      if (this.canCompute && !toBigNumber(this.amount).isNaN()) {\n        return toBigNumber(this.amount).lte(toBigNumber(this.values.maxDai));\n      }\n      return true;\n    },\n    canProceed() {\n      if (this.canCompute) {\n        if (toBigNumber(this.amount).lte(0)) return false;\n        return (\n          (this.newCollateralRatioSafe && this.canGenerateDaiAmount) ||\n          (!this.newCollateralRatioInvalid &&\n            this.canGenerateDaiAmount &&\n            this.riskyBypass)\n        );\n      }\n      return false;\n    },\n    calcCollateralRatio() {\n      if (this.canCompute) {\n        return this.calcCollatRatioDaiChg(\n          toBigNumber(this.values.debtValue).plus(this.amount)\n        );\n      }\n      if (this.values) {\n        return this.values.collateralRatio;\n      }\n    },\n    newCollateralRatio() {\n      if (this.canCompute || this.values) {\n        return this.displayFixedPercent(this.calcCollateralRatio);\n      }\n      return '--';\n    },\n    newCollateralRatioSafe() {\n      if (this.canCompute) {\n        return this.calcCollateralRatio.gte(2);\n      }\n      return true;\n    },\n    newCollateralRatioInvalid() {\n      if (this.canCompute) {\n        return this.calcCollateralRatio.lte(1.5);\n      }\n      return true;\n    },\n    newLiquidationPrice() {\n      if (this.canCompute) {\n        return this.calcLiquidationPriceDaiChg(\n          toBigNumber(this.values.debtValue).plus(this.amount)\n        );\n      } else if (this.values) {\n        return this.values.liquidationPrice;\n      }\n      return 0;\n    }\n  },\n  methods: {\n    submitBtn() {\n      if (!this.canProceed) return;\n      this.drawDai();\n    },\n    checkBoxClicked(checked) {\n      this.riskyBypass = checked;\n    },\n    displayPercentValue,\n    displayFixedValue,\n    displayFixedPercent,\n    notZero(val) {\n      return toBigNumber(val).gt(0);\n    },\n    maxDai() {\n      this.amount = toBigNumber(this.values.maxDai).minus(\n        toBigNumber(this.values.maxDai).times(0.01)\n      );\n      this.$forceUpdate();\n    },\n    currentDai() {\n      this.amount = this.values.debtValue;\n    },\n    async drawDai() {\n      if (toBigNumber(this.amount).gte(0)) {\n        this.delayCloseModal();\n        if (this.newCollateralRatioSafe) {\n          this.$emit('drawDai', [this.amount, null]);\n        } else {\n          this.$emit('drawDai', [this.amount, this.riskyBypass]);\n        }\n      }\n    },\n    closeModal() {\n      this.$refs.modal.hide();\n    },\n    delayCloseModal() {\n      setTimeout(() => {\n        this.closeModal();\n      }, 200);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'GenerateModal';\n</style>\n"],"sourceRoot":"src/dapps/MakerDai/components/GenerateModal"}]}