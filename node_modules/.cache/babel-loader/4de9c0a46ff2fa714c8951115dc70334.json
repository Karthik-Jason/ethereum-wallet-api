{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/eslint-loader/index.js??ref--13-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/helpers/httpRequests.js","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/helpers/httpRequests.js","mtime":1574664278286},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/thread-loader/dist/cjs.js","mtime":1574664277654},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js","mtime":1574664275010},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/eslint-loader/index.js","mtime":1574664275986}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport fetch from 'node-fetch';\n\nfunction post() {\n  var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var defaultOptions = {\n    mode: 'cors',\n    cache: 'no-cache',\n    headers: {\n      'Content-Type': 'application/json; charset=utf-8'\n    },\n    body: JSON.stringify(data)\n  };\n\n  var options = _objectSpread({}, defaultOptions, {}, opts, {}, {\n    method: 'POST'\n  });\n\n  return fetch(url, options).then(function (response) {\n    return response.json();\n  });\n}\n\nfunction get() {\n  var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var defaultOptions = {\n    mode: 'cors',\n    cache: 'no-cache'\n  };\n\n  var options = _objectSpread({}, defaultOptions, {}, opts, {}, {\n    method: 'GET'\n  });\n\n  return fetch(url, options).then(function (response) {\n    return response.json();\n  });\n}\n\nexport { get, post };",{"version":3,"sources":["/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/helpers/httpRequests.js"],"names":["fetch","post","url","data","opts","defaultOptions","mode","cache","headers","body","JSON","stringify","options","method","then","response","json","get"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,YAAlB;;AAEA,SAASC,IAAT,GAA8C;AAAA,MAAhCC,GAAgC;AAAA,MAAtBC,IAAsB,uEAAf,EAAe;AAAA,MAAXC,IAAW,uEAAJ,EAAI;AAC5C,MAAMC,cAAc,GAAG;AACrBC,IAAAA,IAAI,EAAE,MADe;AAErBC,IAAAA,KAAK,EAAE,UAFc;AAGrBC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAHY;AAMrBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AANe,GAAvB;;AAQA,MAAMS,OAAO,qBACRP,cADQ,MAERD,IAFQ,MAGR;AAAES,IAAAA,MAAM,EAAE;AAAV,GAHQ,CAAb;;AAKA,SAAOb,KAAK,CAACE,GAAD,EAAMU,OAAN,CAAL,CAAoBE,IAApB,CAAyB,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,GAAjC,CAAP;AACD;;AAED,SAASC,GAAT,GAAkC;AAAA,MAArBf,GAAqB;AAAA,MAAXE,IAAW,uEAAJ,EAAI;AAChC,MAAMC,cAAc,GAAG;AACrBC,IAAAA,IAAI,EAAE,MADe;AAErBC,IAAAA,KAAK,EAAE;AAFc,GAAvB;;AAIA,MAAMK,OAAO,qBACRP,cADQ,MAERD,IAFQ,MAGR;AAAES,IAAAA,MAAM,EAAE;AAAV,GAHQ,CAAb;;AAKA,SAAOb,KAAK,CAACE,GAAD,EAAMU,OAAN,CAAL,CAAoBE,IAApB,CAAyB,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,GAAjC,CAAP;AACD;;AAED,SAASC,GAAT,EAAchB,IAAd","sourcesContent":["import fetch from 'node-fetch';\n\nfunction post(url = ``, data = {}, opts = {}) {\n  const defaultOptions = {\n    mode: 'cors',\n    cache: 'no-cache',\n    headers: {\n      'Content-Type': 'application/json; charset=utf-8'\n    },\n    body: JSON.stringify(data)\n  };\n  const options = {\n    ...defaultOptions,\n    ...opts,\n    ...{ method: 'POST' }\n  };\n  return fetch(url, options).then(response => response.json());\n}\n\nfunction get(url = ``, opts = {}) {\n  const defaultOptions = {\n    mode: 'cors',\n    cache: 'no-cache'\n  };\n  const options = {\n    ...defaultOptions,\n    ...opts,\n    ...{ method: 'GET' }\n  };\n  return fetch(url, options).then(response => response.json());\n}\n\nexport { get, post };\n"]}]}