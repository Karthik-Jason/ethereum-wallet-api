{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/layouts/InterfaceLayout/components/InterfaceBalance/InterfaceBalance.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/layouts/InterfaceLayout/components/InterfaceBalance/InterfaceBalance.vue","mtime":1573477611964},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport InterfaceBalanceModal from \"../InterfaceBalanceModal\";\nimport { mapState } from 'vuex';\nexport default {\n  components: {\n    'interface-balance-modal': InterfaceBalanceModal\n  },\n  props: {\n    balance: {\n      type: String,\n      default: '0'\n    },\n    getBalance: {\n      type: Function,\n      default: function _default() {}\n    }\n  },\n  data: function data() {\n    return {\n      fetchingBalance: false\n    };\n  },\n  computed: _objectSpread({}, mapState(['network'])),\n  watch: {\n    balance: function balance() {\n      this.fetchingBalance = false;\n    }\n  },\n  methods: {\n    balanceModalOpen: function balanceModalOpen() {\n      this.$refs.balance.$refs.balance.show();\n    },\n    fetchBalance: function fetchBalance() {\n      var _this = this;\n\n      this.fetchingBalance = true;\n      setTimeout(function () {\n        _this.getBalance();\n\n        _this.fetchingBalance = false;\n      }, 1000);\n    }\n  }\n};",{"version":3,"sources":["InterfaceBalance.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA,OAAA,qBAAA;AACA,SAAA,QAAA,QAAA,MAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,+BAAA;AADA,GADA;AAIA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,QADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA;AALA,GAJA;AAcA,EAAA,IAdA,kBAcA;AACA,WAAA;AACA,MAAA,eAAA,EAAA;AADA,KAAA;AAGA,GAlBA;AAmBA,EAAA,QAAA,oBACA,QAAA,CAAA,CAAA,SAAA,CAAA,CADA,CAnBA;AAsBA,EAAA,KAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,WAAA,eAAA,GAAA,KAAA;AACA;AAHA,GAtBA;AA2BA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,8BACA;AACA,WAAA,KAAA,CAAA,OAAA,CAAA,KAAA,CAAA,OAAA,CAAA,IAAA;AACA,KAHA;AAIA,IAAA,YAJA,0BAIA;AAAA;;AACA,WAAA,eAAA,GAAA,IAAA;AACA,MAAA,UAAA,CAAA,YAAA;AACA,QAAA,KAAA,CAAA,UAAA;;AACA,QAAA,KAAA,CAAA,eAAA,GAAA,KAAA;AACA,OAHA,EAGA,IAHA,CAAA;AAIA;AAVA;AA3BA,CAAA","sourcesContent":["<template>\n  <div class=\"info-block-container\">\n    <interface-balance-modal ref=\"balance\" :balance=\"balance\" />\n    <div class=\"info-block balance\">\n      <div class=\"block-image\">\n        <div class=\"icon-border\">\n          <img alt class=\"icon\" src=\"~@/assets/images/icons/wallet.svg\" />\n        </div>\n      </div>\n      <div class=\"block-content\">\n        <div class=\"information-container\">\n          <h2>{{ $t('common.balance') }}</h2>\n          <div class=\"balance-text-container\">\n            <div v-show=\"balance !== undefined\" class=\"balance-text\">\n              <p>\n                {{ balance }}\n                <span>\n                  {{ network.type.currencyName }}\n                </span>\n              </p>\n            </div>\n            <i v-show=\"balance === undefined\" class=\"fa fa-spin fa-spinner\" />\n          </div>\n        </div>\n        <div class=\"icon-container\">\n          <b-btn\n            id=\"balanceCheck\"\n            class=\"custom-tooltip\"\n            @click=\"balanceModalOpen\"\n          >\n            <img alt src=\"~@/assets/images/icons/more.svg\" />\n          </b-btn>\n          <b-btn\n            id=\"refreshBalance\"\n            class=\"custom-tooltip\"\n            @click=\"fetchBalance\"\n          >\n            <img\n              v-show=\"!fetchingBalance\"\n              alt\n              src=\"~@/assets/images/icons/change.svg\"\n            />\n            <i v-show=\"fetchingBalance\" class=\"fa fa-lg fa-spinner fa-spin\" />\n          </b-btn>\n          <b-popover\n            content=\"Check Balance\"\n            target=\"balanceCheck\"\n            placement=\"top\"\n            triggers=\"hover\"\n            title\n          />\n          <b-popover\n            content=\"Refresh Balance\"\n            target=\"refreshBalance\"\n            placement=\"top\"\n            triggers=\"hover\"\n            title\n          />\n        </div>\n        <!-- .icon-container -->\n      </div>\n      <!-- .block-content -->\n    </div>\n  </div>\n</template>\n\n<script>\nimport InterfaceBalanceModal from '../InterfaceBalanceModal';\nimport { mapState } from 'vuex';\nexport default {\n  components: {\n    'interface-balance-modal': InterfaceBalanceModal\n  },\n  props: {\n    balance: {\n      type: String,\n      default: '0'\n    },\n    getBalance: {\n      type: Function,\n      default: function() {}\n    }\n  },\n  data() {\n    return {\n      fetchingBalance: false\n    };\n  },\n  computed: {\n    ...mapState(['network'])\n  },\n  watch: {\n    balance() {\n      this.fetchingBalance = false;\n    }\n  },\n  methods: {\n    balanceModalOpen() {\n      this.$refs.balance.$refs.balance.show();\n    },\n    fetchBalance() {\n      this.fetchingBalance = true;\n      setTimeout(() => {\n        this.getBalance();\n        this.fetchingBalance = false;\n      }, 1000);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'InterfaceBalance.scss';\n</style>\n"],"sourceRoot":"src/layouts/InterfaceLayout/components/InterfaceBalance"}]}