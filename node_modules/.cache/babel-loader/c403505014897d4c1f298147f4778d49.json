{"remainingRequest":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/layouts/InterfaceLayout/containers/SwapContainer/components/ProvidersRadioSelector/ProviderInfoList/ProviderInfoList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/layouts/InterfaceLayout/containers/SwapContainer/components/ProvidersRadioSelector/ProviderInfoList/ProviderInfoList.vue","mtime":1573477612064},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport MEW from '@/assets/images/logo.png';\nimport KyberNetwork from '@/assets/images/etc/kybernetwork_gray.png';\nimport Bity from '@/assets/images/etc/bity_gray.png';\nimport Simplex from '@/assets/images/etc/simplex_gray.png';\nimport Changelly from '@/assets/images/etc/changelly_gray.png';\nexport default {\n  props: {\n    allSupportedProviders: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    unavailableProviders: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      otherProviderList: [],\n      logos: {\n        mew: MEW,\n        kybernetwork: KyberNetwork,\n        bity: Bity,\n        simplex: Simplex,\n        changelly: Changelly\n      },\n      betaLogos: {}\n    };\n  },\n  computed: {\n    noAvaliableProviders: function noAvaliableProviders() {\n      return (this.providersFound.length === 0 || this.providerData.length === 0) && !this.loadingData;\n    },\n    otherProviders: function otherProviders() {\n      var activeProviders = this.listActiveProviders();\n      return this.allSupportedProviders.filter(function (entry) {\n        return !activeProviders.includes(entry);\n      });\n    },\n    otherInactiveProviders: function otherInactiveProviders() {\n      var activeProviders = this.listPotentialProviders();\n      return this.allSupportedProviders.filter(function (entry) {\n        return !activeProviders.includes(entry);\n      });\n    }\n  },\n  methods: {\n    providerLogo: function providerLogo(details) {\n      if (details.provider) {\n        if (this.useBetaLogo(details)) return this.betaLogos[details.provider];\n        return this.logos[details.provider];\n      }\n\n      return this.logos[details];\n    },\n    useBetaLogo: function useBetaLogo(details) {\n      return details.provider === 'bity' && (details.toCurrency === 'EUR' || details.toCurrency === 'CHF');\n    },\n    getTagLine: function getTagLine(name) {\n      return this.$t(\"interface.\".concat(name, \"TagLine\"));\n    }\n  }\n};",{"version":3,"sources":["ProviderInfoList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAmBA,OAAA,GAAA,MAAA,0BAAA;AACA,OAAA,YAAA,MAAA,2CAAA;AACA,OAAA,IAAA,MAAA,mCAAA;AACA,OAAA,OAAA,MAAA,sCAAA;AACA,OAAA,SAAA,MAAA,wCAAA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,qBAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA,oBAAA;AACA,eAAA,EAAA;AACA;AAJA,KADA;AAOA,IAAA,oBAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA,oBAAA;AACA,eAAA,EAAA;AACA;AAJA;AAPA,GADA;AAeA,EAAA,IAfA,kBAeA;AACA,WAAA;AACA,MAAA,iBAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA;AACA,QAAA,GAAA,EAAA,GADA;AAEA,QAAA,YAAA,EAAA,YAFA;AAGA,QAAA,IAAA,EAAA,IAHA;AAIA,QAAA,OAAA,EAAA,OAJA;AAKA,QAAA,SAAA,EAAA;AALA,OAFA;AASA,MAAA,SAAA,EAAA;AATA,KAAA;AAWA,GA3BA;AA4BA,EAAA,QAAA,EAAA;AACA,IAAA,oBADA,kCACA;AACA,aACA,CAAA,KAAA,cAAA,CAAA,MAAA,KAAA,CAAA,IAAA,KAAA,YAAA,CAAA,MAAA,KAAA,CAAA,KACA,CAAA,KAAA,WAFA;AAIA,KANA;AAOA,IAAA,cAPA,4BAOA;AACA,UAAA,eAAA,GAAA,KAAA,mBAAA,EAAA;AACA,aAAA,KAAA,qBAAA,CAAA,MAAA,CAAA,UAAA,KAAA,EAAA;AACA,eAAA,CAAA,eAAA,CAAA,QAAA,CAAA,KAAA,CAAA;AACA,OAFA,CAAA;AAGA,KAZA;AAaA,IAAA,sBAbA,oCAaA;AACA,UAAA,eAAA,GAAA,KAAA,sBAAA,EAAA;AACA,aAAA,KAAA,qBAAA,CAAA,MAAA,CAAA,UAAA,KAAA,EAAA;AACA,eAAA,CAAA,eAAA,CAAA,QAAA,CAAA,KAAA,CAAA;AACA,OAFA,CAAA;AAGA;AAlBA,GA5BA;AAgDA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,OADA,EACA;AACA,UAAA,OAAA,CAAA,QAAA,EAAA;AACA,YAAA,KAAA,WAAA,CAAA,OAAA,CAAA,EAAA,OAAA,KAAA,SAAA,CAAA,OAAA,CAAA,QAAA,CAAA;AACA,eAAA,KAAA,KAAA,CAAA,OAAA,CAAA,QAAA,CAAA;AACA;;AACA,aAAA,KAAA,KAAA,CAAA,OAAA,CAAA;AACA,KAPA;AAQA,IAAA,WARA,uBAQA,OARA,EAQA;AACA,aACA,OAAA,CAAA,QAAA,KAAA,MAAA,KACA,OAAA,CAAA,UAAA,KAAA,KAAA,IAAA,OAAA,CAAA,UAAA,KAAA,KADA,CADA;AAIA,KAbA;AAcA,IAAA,UAdA,sBAcA,IAdA,EAcA;AACA,aAAA,KAAA,EAAA,qBAAA,IAAA,aAAA;AACA;AAhBA;AAhDA,CAAA","sourcesContent":["<template>\n  <ul>\n    <li\n      v-for=\"(providerName, idx) in unavailableProviders\"\n      :key=\"providerName + idx\"\n    >\n      <div class=\"provider-image\">\n        <img :src=\"providerLogo(providerName)\" alt />\n      </div>\n      <div>\n        <div>\n          <p>{{ getTagLine(providerName) }}</p>\n        </div>\n      </div>\n    </li>\n  </ul>\n</template>\n\n<script>\nimport MEW from '@/assets/images/logo.png';\nimport KyberNetwork from '@/assets/images/etc/kybernetwork_gray.png';\nimport Bity from '@/assets/images/etc/bity_gray.png';\nimport Simplex from '@/assets/images/etc/simplex_gray.png';\nimport Changelly from '@/assets/images/etc/changelly_gray.png';\n\nexport default {\n  props: {\n    allSupportedProviders: {\n      type: Array,\n      default: function() {\n        return [];\n      }\n    },\n    unavailableProviders: {\n      type: Array,\n      default: function() {\n        return [];\n      }\n    }\n  },\n  data() {\n    return {\n      otherProviderList: [],\n      logos: {\n        mew: MEW,\n        kybernetwork: KyberNetwork,\n        bity: Bity,\n        simplex: Simplex,\n        changelly: Changelly\n      },\n      betaLogos: {}\n    };\n  },\n  computed: {\n    noAvaliableProviders() {\n      return (\n        (this.providersFound.length === 0 || this.providerData.length === 0) &&\n        !this.loadingData\n      );\n    },\n    otherProviders() {\n      const activeProviders = this.listActiveProviders();\n      return this.allSupportedProviders.filter(entry => {\n        return !activeProviders.includes(entry);\n      });\n    },\n    otherInactiveProviders() {\n      const activeProviders = this.listPotentialProviders();\n      return this.allSupportedProviders.filter(entry => {\n        return !activeProviders.includes(entry);\n      });\n    }\n  },\n  methods: {\n    providerLogo(details) {\n      if (details.provider) {\n        if (this.useBetaLogo(details)) return this.betaLogos[details.provider];\n        return this.logos[details.provider];\n      }\n      return this.logos[details];\n    },\n    useBetaLogo(details) {\n      return (\n        details.provider === 'bity' &&\n        (details.toCurrency === 'EUR' || details.toCurrency === 'CHF')\n      );\n    },\n    getTagLine(name) {\n      return this.$t(`interface.${name}TagLine`);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'ProviderInfoList.scss';\n</style>\n"],"sourceRoot":"src/layouts/InterfaceLayout/containers/SwapContainer/components/ProvidersRadioSelector/ProviderInfoList"}]}