{"remainingRequest":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/eslint-loader/index.js??ref--13-0!/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/partners/helpers/utils.js","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/partners/helpers/utils.js","mtime":1573477612092},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.number.is-finite\";\nimport \"core-js/modules/es7.object.entries\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.map\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport uuid from 'uuid/v4';\n\nvar mapToObject = function mapToObject(map) {\n  var obj = {};\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = map[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var prop = _step.value;\n      obj[prop[0]] = prop[1];\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return obj;\n};\n\nvar objectToMap = function objectToMap(obj) {\n  return new Map(Object.entries(obj));\n};\n\nfunction isValidEntry(value) {\n  return value !== '' && value !== null && +value > 0 && Number.isFinite(+value);\n}\n\nfunction checkInvalidOrMissingValue(value, to) {\n  if (to) {\n    if (!isValidEntry(value)) {\n      return 0;\n    }\n\n    return value;\n  }\n\n  if (!isValidEntry(value)) {\n    return 1;\n  }\n\n  return value;\n}\n\nvar getTimeRemaining = function getTimeRemaining(timestamp) {\n  var validFor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 600;\n  return validFor - parseInt((new Date().getTime() - Date.parse(timestamp)) / 1000);\n};\n\nvar getTimeRemainingString = function getTimeRemainingString(timestamp) {\n  var validFor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 600;\n  var timeRemaining = getTimeRemaining(timestamp, validFor);\n\n  if (timeRemaining < 0) {\n    return 'expired';\n  }\n\n  var seconds = Math.floor(timeRemaining % 60);\n  var minutes = Math.floor(timeRemaining / 60 % 60);\n  return seconds >= 10 ? \"\".concat(minutes, \":\").concat(seconds) : \"\".concat(minutes, \":0\").concat(seconds);\n};\n\nfunction buildPayload(method, data) {\n  return {\n    jsonrpc: '2.0',\n    method: method,\n    params: data,\n    id: uuid()\n  };\n}\n\nfunction stringEqual(strA, strB) {\n  var mismatch = 0;\n\n  for (var i = 0; i < strA.length; ++i) {\n    mismatch |= strA.charCodeAt(i) ^ strB.charCodeAt(i);\n  }\n\n  return mismatch === 0;\n}\n\nvar isJson = function isJson(str) {\n  try {\n    JSON.parse(str);\n    return true;\n  } catch (e) {\n    try {\n      var asStr = JSON.stringify(str);\n      JSON.parse(asStr);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n};\n\nvar handleOrThrow = function handleOrThrow(e, source) {\n  if (source) {\n    throw Error('abort');\n  } // typeErrors\n\n\n  if (e instanceof TypeError) {\n    if (e.message === 'Failed to fetch') {\n      return;\n    }\n\n    throw e;\n  }\n\n  throw e;\n};\n\nexport { isJson, mapToObject, objectToMap, stringEqual, getTimeRemaining, getTimeRemainingString, buildPayload, isValidEntry, checkInvalidOrMissingValue, handleOrThrow };",{"version":3,"sources":["/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/partners/helpers/utils.js"],"names":["uuid","mapToObject","map","obj","prop","objectToMap","Map","Object","entries","isValidEntry","value","Number","isFinite","checkInvalidOrMissingValue","to","getTimeRemaining","timestamp","validFor","parseInt","Date","getTime","parse","getTimeRemainingString","timeRemaining","seconds","Math","floor","minutes","buildPayload","method","data","jsonrpc","params","id","stringEqual","strA","strB","mismatch","i","length","charCodeAt","isJson","str","JSON","e","asStr","stringify","handleOrThrow","source","Error","TypeError","message"],"mappings":";;;;;;;;AAAA,OAAOA,IAAP,MAAiB,SAAjB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,GAAG,EAAI;AACzB,MAAMC,GAAG,GAAG,EAAZ;AADyB;AAAA;AAAA;;AAAA;AAEzB,yBAAmBD,GAAnB,8HAAwB;AAAA,UAAbE,IAAa;AACtBD,MAAAA,GAAG,CAACC,IAAI,CAAC,CAAD,CAAL,CAAH,GAAeA,IAAI,CAAC,CAAD,CAAnB;AACD;AAJwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKzB,SAAOD,GAAP;AACD,CAND;;AAQA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAAAF,GAAG,EAAI;AACzB,SAAO,IAAIG,GAAJ,CAAQC,MAAM,CAACC,OAAP,CAAeL,GAAf,CAAR,CAAP;AACD,CAFD;;AAIA,SAASM,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,SACEA,KAAK,KAAK,EAAV,IAAgBA,KAAK,KAAK,IAA1B,IAAkC,CAACA,KAAD,GAAS,CAA3C,IAAgDC,MAAM,CAACC,QAAP,CAAgB,CAACF,KAAjB,CADlD;AAGD;;AAED,SAASG,0BAAT,CAAoCH,KAApC,EAA2CI,EAA3C,EAA+C;AAC7C,MAAIA,EAAJ,EAAQ;AACN,QAAI,CAACL,YAAY,CAACC,KAAD,CAAjB,EAA0B;AACxB,aAAO,CAAP;AACD;;AACD,WAAOA,KAAP;AACD;;AACD,MAAI,CAACD,YAAY,CAACC,KAAD,CAAjB,EAA0B;AACxB,WAAO,CAAP;AACD;;AACD,SAAOA,KAAP;AACD;;AAED,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,SAAD,EAA+B;AAAA,MAAnBC,QAAmB,uEAAR,GAAQ;AACtD,SACEA,QAAQ,GAAGC,QAAQ,CAAC,CAAC,IAAIC,IAAJ,GAAWC,OAAX,KAAuBD,IAAI,CAACE,KAAL,CAAWL,SAAX,CAAxB,IAAiD,IAAlD,CADrB;AAGD,CAJD;;AAMA,IAAMM,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACN,SAAD,EAA+B;AAAA,MAAnBC,QAAmB,uEAAR,GAAQ;AAC5D,MAAMM,aAAa,GAAGR,gBAAgB,CAACC,SAAD,EAAYC,QAAZ,CAAtC;;AACA,MAAIM,aAAa,GAAG,CAApB,EAAuB;AACrB,WAAO,SAAP;AACD;;AACD,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,aAAa,GAAG,EAA3B,CAAhB;AACA,MAAMI,OAAO,GAAGF,IAAI,CAACC,KAAL,CAAYH,aAAa,GAAG,EAAjB,GAAuB,EAAlC,CAAhB;AACA,SAAOC,OAAO,IAAI,EAAX,aAAmBG,OAAnB,cAA8BH,OAA9B,cAA6CG,OAA7C,eAAyDH,OAAzD,CAAP;AACD,CARD;;AAUA,SAASI,YAAT,CAAsBC,MAAtB,EAA8BC,IAA9B,EAAoC;AAClC,SAAO;AACLC,IAAAA,OAAO,EAAE,KADJ;AAELF,IAAAA,MAAM,EAAEA,MAFH;AAGLG,IAAAA,MAAM,EAAEF,IAHH;AAILG,IAAAA,EAAE,EAAEjC,IAAI;AAJH,GAAP;AAMD;;AAED,SAASkC,WAAT,CAAqBC,IAArB,EAA2BC,IAA3B,EAAiC;AAC/B,MAAIC,QAAQ,GAAG,CAAf;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiC,EAAED,CAAnC,EAAsC;AACpCD,IAAAA,QAAQ,IAAIF,IAAI,CAACK,UAAL,CAAgBF,CAAhB,IAAqBF,IAAI,CAACI,UAAL,CAAgBF,CAAhB,CAAjC;AACD;;AACD,SAAOD,QAAQ,KAAK,CAApB;AACD;;AAED,IAAMI,MAAM,GAAG,SAATA,MAAS,CAAAC,GAAG,EAAI;AACpB,MAAI;AACFC,IAAAA,IAAI,CAACtB,KAAL,CAAWqB,GAAX;AACA,WAAO,IAAP;AACD,GAHD,CAGE,OAAOE,CAAP,EAAU;AACV,QAAI;AACF,UAAMC,KAAK,GAAGF,IAAI,CAACG,SAAL,CAAeJ,GAAf,CAAd;AACAC,MAAAA,IAAI,CAACtB,KAAL,CAAWwB,KAAX;AACA,aAAO,IAAP;AACD,KAJD,CAIE,OAAOD,CAAP,EAAU;AACV,aAAO,KAAP;AACD;AACF;AACF,CAbD;;AAeA,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAACH,CAAD,EAAII,MAAJ,EAAe;AACnC,MAAIA,MAAJ,EAAY;AACV,UAAMC,KAAK,CAAC,OAAD,CAAX;AACD,GAHkC,CAInC;;;AACA,MAAIL,CAAC,YAAYM,SAAjB,EAA4B;AAC1B,QAAIN,CAAC,CAACO,OAAF,KAAc,iBAAlB,EAAqC;AACnC;AACD;;AACD,UAAMP,CAAN;AACD;;AACD,QAAMA,CAAN;AACD,CAZD;;AAcA,SACEH,MADF,EAEExC,WAFF,EAGEI,WAHF,EAIE6B,WAJF,EAKEnB,gBALF,EAMEO,sBANF,EAOEM,YAPF,EAQEnB,YARF,EASEI,0BATF,EAUEkC,aAVF","sourcesContent":["import uuid from 'uuid/v4';\n\nconst mapToObject = map => {\n  const obj = {};\n  for (const prop of map) {\n    obj[prop[0]] = prop[1];\n  }\n  return obj;\n};\n\nconst objectToMap = obj => {\n  return new Map(Object.entries(obj));\n};\n\nfunction isValidEntry(value) {\n  return (\n    value !== '' && value !== null && +value > 0 && Number.isFinite(+value)\n  );\n}\n\nfunction checkInvalidOrMissingValue(value, to) {\n  if (to) {\n    if (!isValidEntry(value)) {\n      return 0;\n    }\n    return value;\n  }\n  if (!isValidEntry(value)) {\n    return 1;\n  }\n  return value;\n}\n\nconst getTimeRemaining = (timestamp, validFor = 600) => {\n  return (\n    validFor - parseInt((new Date().getTime() - Date.parse(timestamp)) / 1000)\n  );\n};\n\nconst getTimeRemainingString = (timestamp, validFor = 600) => {\n  const timeRemaining = getTimeRemaining(timestamp, validFor);\n  if (timeRemaining < 0) {\n    return 'expired';\n  }\n  const seconds = Math.floor(timeRemaining % 60);\n  const minutes = Math.floor((timeRemaining / 60) % 60);\n  return seconds >= 10 ? `${minutes}:${seconds}` : `${minutes}:0${seconds}`;\n};\n\nfunction buildPayload(method, data) {\n  return {\n    jsonrpc: '2.0',\n    method: method,\n    params: data,\n    id: uuid()\n  };\n}\n\nfunction stringEqual(strA, strB) {\n  let mismatch = 0;\n  for (let i = 0; i < strA.length; ++i) {\n    mismatch |= strA.charCodeAt(i) ^ strB.charCodeAt(i);\n  }\n  return mismatch === 0;\n}\n\nconst isJson = str => {\n  try {\n    JSON.parse(str);\n    return true;\n  } catch (e) {\n    try {\n      const asStr = JSON.stringify(str);\n      JSON.parse(asStr);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n};\n\nconst handleOrThrow = (e, source) => {\n  if (source) {\n    throw Error('abort');\n  }\n  // typeErrors\n  if (e instanceof TypeError) {\n    if (e.message === 'Failed to fetch') {\n      return;\n    }\n    throw e;\n  }\n  throw e;\n};\n\nexport {\n  isJson,\n  mapToObject,\n  objectToMap,\n  stringEqual,\n  getTimeRemaining,\n  getTimeRemainingString,\n  buildPayload,\n  isValidEntry,\n  checkInvalidOrMissingValue,\n  handleOrThrow\n};\n"]}]}