{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/eslint-loader/index.js??ref--13-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/helpers/ExtensionHelpers.js","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/helpers/ExtensionHelpers.js","mtime":1574664278286},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/thread-loader/dist/cjs.js","mtime":1574664277654},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js","mtime":1574664275010},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/eslint-loader/index.js","mtime":1574664275986}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport Toast from \"./responseHandler\";\nimport { toChecksumAddress, isAddress } from \"./addressUtils\";\nimport { MnemonicWallet } from '@/wallets';\nimport Misc from \"./misc\";\n\nvar getAccounts = function getAccounts(callback) {\n  var chrome = window.chrome;\n  chrome.storage.sync.get(null, callback);\n};\n\nvar getPrivFromMnemonicWallet =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(mnem, path) {\n    var wallet;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return MnemonicWallet(mnem, '');\n\n          case 2:\n            wallet = _context.sent;\n            return _context.abrupt(\"return\", wallet.hdKey.derive(path ? path : wallet.basePath).privateKey);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getPrivFromMnemonicWallet(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar addWalletToStore = function addWalletToStore(address, encStr, nickname, type, addType, callback) {\n  var checksummedAddr = toChecksumAddress(address).toLowerCase();\n  var chrome = window.chrome;\n  getAccounts(function (item) {\n    var foundAddress = Object.keys(item).find(function (key) {\n      if (isAddress(key)) {\n        return toChecksumAddress(key).toLocaleLowerCase() === checksummedAddr.toLocaleLowerCase();\n      }\n    });\n    var foundNickname = Object.keys(item).find(function (key) {\n      if (isAddress(key)) {\n        return JSON.parse(item[key]).nick === nickname;\n      }\n    });\n\n    if (addType === 'edit') {\n      if (foundNickname) {\n        Toast.responseHandler('Nickname found!', Toast.WARN);\n        return;\n      }\n    } else {\n      if (foundAddress) {\n        Toast.responseHandler('Address already stored!', Toast.ERROR);\n        return;\n      }\n    }\n\n    nickname = Misc.stripTags(nickname.replace(/(<([^>]+)>)/gi, ''));\n    var value = {\n      nick: nickname,\n      priv: encStr,\n      type: type\n    };\n    if (!encStr) delete value['priv'];\n    var obj = {};\n    obj[checksummedAddr] = JSON.stringify(value);\n\n    try {\n      chrome.storage.sync.set(obj, callback);\n    } catch (e) {\n      Toast.responseHandler('Something went wrong!', Toast.ERROR);\n    }\n  });\n};\n\nvar deleteWalletFromStore = function deleteWalletFromStore(addr, callback) {\n  var chrome = window.chrome;\n  getAccounts(function (item) {\n    Object.keys(item).forEach(function (key) {\n      if (isAddress(item[key]) && toChecksumAddress(item[key]) === toChecksumAddress(addr)) {\n        chrome.storage.sync.remove(key, function () {});\n      }\n    });\n  });\n\n  try {\n    chrome.storage.sync.remove(toChecksumAddress(addr).toLowerCase(), callback);\n  } catch (e) {\n    Toast.responseHandler('Something went wrong!', Toast.ERROR);\n  }\n};\n\nexport default {\n  getAccounts: getAccounts,\n  addWalletToStore: addWalletToStore,\n  getPrivFromMnemonicWallet: getPrivFromMnemonicWallet,\n  deleteWalletFromStore: deleteWalletFromStore\n};",{"version":3,"sources":["/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/helpers/ExtensionHelpers.js"],"names":["Toast","toChecksumAddress","isAddress","MnemonicWallet","Misc","getAccounts","callback","chrome","window","storage","sync","get","getPrivFromMnemonicWallet","mnem","path","wallet","hdKey","derive","basePath","privateKey","addWalletToStore","address","encStr","nickname","type","addType","checksummedAddr","toLowerCase","item","foundAddress","Object","keys","find","key","toLocaleLowerCase","foundNickname","JSON","parse","nick","responseHandler","WARN","ERROR","stripTags","replace","value","priv","obj","stringify","set","e","deleteWalletFromStore","addr","forEach","remove"],"mappings":"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","sourcesContent":["import Toast from './responseHandler';\nimport { toChecksumAddress, isAddress } from './addressUtils';\nimport { MnemonicWallet } from '@/wallets';\nimport Misc from './misc';\n\nconst getAccounts = callback => {\n  const chrome = window.chrome;\n  chrome.storage.sync.get(null, callback);\n};\n\nconst getPrivFromMnemonicWallet = async (mnem, path) => {\n  const wallet = await MnemonicWallet(mnem, '');\n  return wallet.hdKey.derive(path ? path : wallet.basePath).privateKey;\n};\n\nconst addWalletToStore = (\n  address,\n  encStr,\n  nickname,\n  type,\n  addType,\n  callback\n) => {\n  const checksummedAddr = toChecksumAddress(address).toLowerCase();\n  const chrome = window.chrome;\n\n  getAccounts(item => {\n    const foundAddress = Object.keys(item).find(key => {\n      if (isAddress(key)) {\n        return (\n          toChecksumAddress(key).toLocaleLowerCase() ===\n          checksummedAddr.toLocaleLowerCase()\n        );\n      }\n    });\n    const foundNickname = Object.keys(item).find(key => {\n      if (isAddress(key)) {\n        return JSON.parse(item[key]).nick === nickname;\n      }\n    });\n\n    if (addType === 'edit') {\n      if (foundNickname) {\n        Toast.responseHandler('Nickname found!', Toast.WARN);\n        return;\n      }\n    } else {\n      if (foundAddress) {\n        Toast.responseHandler('Address already stored!', Toast.ERROR);\n        return;\n      }\n    }\n    nickname = Misc.stripTags(nickname.replace(/(<([^>]+)>)/gi, ''));\n    const value = {\n      nick: nickname,\n      priv: encStr,\n      type: type\n    };\n    if (!encStr) delete value['priv'];\n    const obj = {};\n    obj[checksummedAddr] = JSON.stringify(value);\n    try {\n      chrome.storage.sync.set(obj, callback);\n    } catch (e) {\n      Toast.responseHandler('Something went wrong!', Toast.ERROR);\n    }\n  });\n};\n\nconst deleteWalletFromStore = (addr, callback) => {\n  const chrome = window.chrome;\n  getAccounts(item => {\n    Object.keys(item).forEach(key => {\n      if (\n        isAddress(item[key]) &&\n        toChecksumAddress(item[key]) === toChecksumAddress(addr)\n      ) {\n        chrome.storage.sync.remove(key, () => {});\n      }\n    });\n  });\n  try {\n    chrome.storage.sync.remove(toChecksumAddress(addr).toLowerCase(), callback);\n  } catch (e) {\n    Toast.responseHandler('Something went wrong!', Toast.ERROR);\n  }\n};\n\nexport default {\n  getAccounts,\n  addWalletToStore,\n  getPrivFromMnemonicWallet,\n  deleteWalletFromStore\n};\n"]}]}