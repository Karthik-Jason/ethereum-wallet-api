{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/eslint-loader/index.js??ref--13-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/partners/kyber/kyber-calls.js","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/partners/kyber/kyber-calls.js","mtime":1574664278314},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js","mtime":1574664275010},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/eslint-loader/index.js","mtime":1574664275986}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport { post } from '@/helpers/httpRequests';\nimport { kyberMethods } from \"./config\";\nimport { swapApiEndpoints } from \"../partnersConfig\";\nimport { utils } from \"../helpers\";\n\nfunction buildPath() {\n  return swapApiEndpoints.base + swapApiEndpoints.kyber;\n}\n\nvar getTokenList =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(network) {\n    var results;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n\n            if (!kyberMethods[network]) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 4;\n            return post(buildPath(), utils.buildPayload(kyberMethods[network].currencies, [network]));\n\n          case 4:\n            results = _context.sent;\n\n            if (!results.error) {\n              _context.next = 7;\n              break;\n            }\n\n            throw Error(results.error.message);\n\n          case 7:\n            return _context.abrupt(\"return\", results.result);\n\n          case 8:\n            return _context.abrupt(\"return\", Promise.resolve({\n              data: false\n            }));\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            utils.handleOrThrow(_context.t0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 11]]);\n  }));\n\n  return function getTokenList(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar getRates =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(network) {\n    var results;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n\n            if (!kyberMethods[network]) {\n              _context2.next = 8;\n              break;\n            }\n\n            _context2.next = 4;\n            return post(buildPath(), utils.buildPayload(kyberMethods[network].rate, [network]));\n\n          case 4:\n            results = _context2.sent;\n\n            if (!results.error) {\n              _context2.next = 7;\n              break;\n            }\n\n            throw Error(results.error.message);\n\n          case 7:\n            return _context2.abrupt(\"return\", results.result);\n\n          case 8:\n            return _context2.abrupt(\"return\", Promise.resolve({}));\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](0);\n            utils.handleOrThrow(_context2.t0);\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 11]]);\n  }));\n\n  return function getRates(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar getGasLimits =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(network) {\n    var results;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n\n            if (!kyberMethods[network]) {\n              _context3.next = 8;\n              break;\n            }\n\n            _context3.next = 4;\n            return post(buildPath(), utils.buildPayload(kyberMethods[network].gasLimits, []));\n\n          case 4:\n            results = _context3.sent;\n\n            if (!results.error) {\n              _context3.next = 7;\n              break;\n            }\n\n            throw Error(results.error.message);\n\n          case 7:\n            return _context3.abrupt(\"return\", results.result);\n\n          case 8:\n            return _context3.abrupt(\"return\", Promise.resolve({\n              data: false\n            }));\n\n          case 11:\n            _context3.prev = 11;\n            _context3.t0 = _context3[\"catch\"](0);\n            utils.handleOrThrow(_context3.t0);\n\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 11]]);\n  }));\n\n  return function getGasLimits(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default {\n  getTokenList: getTokenList,\n  getRates: getRates,\n  getGasLimits: getGasLimits\n};",{"version":3,"sources":["/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/partners/kyber/kyber-calls.js"],"names":["post","kyberMethods","swapApiEndpoints","utils","buildPath","base","kyber","getTokenList","network","buildPayload","currencies","results","error","Error","message","result","Promise","resolve","data","handleOrThrow","getRates","rate","getGasLimits","gasLimits"],"mappings":"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","sourcesContent":["import { post } from '@/helpers/httpRequests';\nimport { kyberMethods } from './config';\nimport { swapApiEndpoints } from '../partnersConfig';\nimport { utils } from '../helpers';\n\nfunction buildPath() {\n  return swapApiEndpoints.base + swapApiEndpoints.kyber;\n}\n\nconst getTokenList = async network => {\n  try {\n    if (kyberMethods[network]) {\n      const results = await post(\n        buildPath(),\n        utils.buildPayload(kyberMethods[network].currencies, [network])\n      );\n\n      if (results.error) {\n        throw Error(results.error.message);\n      }\n\n      return results.result;\n    }\n    return Promise.resolve({ data: false });\n  } catch (e) {\n    utils.handleOrThrow(e);\n  }\n};\n\nconst getRates = async network => {\n  try {\n    if (kyberMethods[network]) {\n      const results = await post(\n        buildPath(),\n        utils.buildPayload(kyberMethods[network].rate, [network])\n      );\n\n      if (results.error) {\n        throw Error(results.error.message);\n      }\n\n      return results.result;\n    }\n    return Promise.resolve({});\n  } catch (e) {\n    utils.handleOrThrow(e);\n  }\n};\n\nconst getGasLimits = async network => {\n  try {\n    if (kyberMethods[network]) {\n      const results = await post(\n        buildPath(),\n        utils.buildPayload(kyberMethods[network].gasLimits, [])\n      );\n\n      if (results.error) {\n        throw Error(results.error.message);\n      }\n      return results.result;\n    }\n    return Promise.resolve({ data: false });\n  } catch (e) {\n    utils.handleOrThrow(e);\n  }\n};\n\nexport default { getTokenList, getRates, getGasLimits };\n"]}]}