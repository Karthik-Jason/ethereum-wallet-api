{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/eslint-loader/index.js??ref--13-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/wallets/hardware/secalot/secalotUsb.js","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/wallets/hardware/secalot/secalotUsb.js","mtime":1574664278326},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js","mtime":1574664275010},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/eslint-loader/index.js","mtime":1574664275986}],"contextDependencies":[],"result":["'use strict';\n\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport u2f from 'u2f-api';\n\nvar SecalotUsb = function SecalotUsb() {\n  this.timeoutSeconds = 120;\n};\n\nSecalotUsb.webSafe64 = function (base64) {\n  return base64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n};\n\nSecalotUsb.normal64 = function (base64) {\n  return (// eslint-disable-next-line\n    base64.replace(/\\-/g, '+').replace(/_/g, '/') + '=='.substring(0, 3 * base64.length % 4)\n  );\n};\n\nSecalotUsb.prototype.u2fCallback = function (response, callback) {\n  if (typeof response['signatureData'] !== 'undefined') {\n    var data = Buffer.from(SecalotUsb.normal64(response['signatureData']), 'base64');\n\n    if (data.length < 5 + 2) {\n      callback(undefined, 'Please update your Secalot firmware to version 4 or greater.');\n      return;\n    }\n\n    if (data[0] !== 0x01 || data[1] !== 0x00 || data[2] !== 0x00 || data[3] !== 0x00 || data[4] !== 0x00) {\n      callback(undefined, 'Please update your Secalot firmware to version 4 or greater.');\n      return;\n    }\n\n    data = data.slice(5, data.length);\n    callback(data.toString('hex'));\n  } else {\n    callback(undefined, response);\n  }\n};\n\nSecalotUsb.prototype.exchange = function (apduHex, callback) {\n  var apdu = Buffer.from('1122334455667788' + apduHex, 'hex');\n  var challenge = Buffer.from('0000000000000000000000000000000000000000000000000000000000000000', 'hex');\n  var key = {};\n  key['appId'] = location.origin;\n  key['challenge'] = SecalotUsb.webSafe64(challenge.toString('base64'));\n  key['version'] = 'U2F_V2';\n  key['keyHandle'] = SecalotUsb.webSafe64(apdu.toString('base64'));\n  var self = this;\n\n  var localCallback = function localCallback(result) {\n    self.u2fCallback(result, callback);\n  };\n\n  u2f.sign([key], this.timeoutSeconds).then(localCallback).catch(function (err) {\n    callback(undefined, err);\n  });\n};\n\nexport default SecalotUsb;",{"version":3,"sources":["/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/wallets/hardware/secalot/secalotUsb.js"],"names":["u2f","SecalotUsb","timeoutSeconds","webSafe64","base64","replace","normal64","substring","length","prototype","u2fCallback","response","callback","data","Buffer","from","undefined","slice","toString","exchange","apduHex","apdu","challenge","key","location","origin","self","localCallback","result","sign","then","catch","err"],"mappings":"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","sourcesContent":["'use strict';\nimport u2f from 'u2f-api';\n\nconst SecalotUsb = function() {\n  this.timeoutSeconds = 120;\n};\n\nSecalotUsb.webSafe64 = base64 =>\n  base64\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_')\n    .replace(/=+$/, '');\nSecalotUsb.normal64 = base64 =>\n  // eslint-disable-next-line\n  base64.replace(/\\-/g, '+').replace(/_/g, '/') +\n  '=='.substring(0, (3 * base64.length) % 4);\n\nSecalotUsb.prototype.u2fCallback = function(response, callback) {\n  if (typeof response['signatureData'] !== 'undefined') {\n    let data = Buffer.from(\n      SecalotUsb.normal64(response['signatureData']),\n      'base64'\n    );\n\n    if (data.length < 5 + 2) {\n      callback(\n        undefined,\n        'Please update your Secalot firmware to version 4 or greater.'\n      );\n      return;\n    }\n\n    if (\n      data[0] !== 0x01 ||\n      data[1] !== 0x00 ||\n      data[2] !== 0x00 ||\n      data[3] !== 0x00 ||\n      data[4] !== 0x00\n    ) {\n      callback(\n        undefined,\n        'Please update your Secalot firmware to version 4 or greater.'\n      );\n      return;\n    }\n\n    data = data.slice(5, data.length);\n\n    callback(data.toString('hex'));\n  } else {\n    callback(undefined, response);\n  }\n};\n\nSecalotUsb.prototype.exchange = function(apduHex, callback) {\n  const apdu = Buffer.from('1122334455667788' + apduHex, 'hex');\n  const challenge = Buffer.from(\n    '0000000000000000000000000000000000000000000000000000000000000000',\n    'hex'\n  );\n  const key = {};\n  key['appId'] = location.origin;\n  key['challenge'] = SecalotUsb.webSafe64(challenge.toString('base64'));\n  key['version'] = 'U2F_V2';\n  key['keyHandle'] = SecalotUsb.webSafe64(apdu.toString('base64'));\n  const self = this;\n  const localCallback = function(result) {\n    self.u2fCallback(result, callback);\n  };\n  u2f\n    .sign([key], this.timeoutSeconds)\n    .then(localCallback)\n    .catch(err => {\n      callback(undefined, err);\n    });\n};\n\nexport default SecalotUsb;\n"]}]}