{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/eslint-loader/index.js??ref--13-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/partners/simplex/simplex-api.js","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/partners/simplex/simplex-api.js","mtime":1573477612096},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { host } from \"./config\";\nimport { post, get } from '@/helpers/httpRequests';\nimport { utils } from \"../helpers\";\n\nvar getQuote = function getQuote(reqObj) {\n  try {\n    var options = {\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      }\n    };\n    return post(\"\".concat(host.url, \"/quote\"), reqObj, options);\n  } catch (e) {\n    utils.handleOrThrow(e);\n  }\n};\n\nvar getOrder = function getOrder(reqObj) {\n  try {\n    var options = {\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      }\n    };\n    return post(\"\".concat(host.url, \"/order\"), reqObj, options);\n  } catch (e) {\n    utils.handleOrThrow(e);\n  }\n};\n\nvar getStatus = function getStatus(userId) {\n  try {\n    return get(\"\".concat(host.url, \"/status/\").concat(userId));\n  } catch (e) {\n    utils.handleOrThrow(e);\n  }\n};\n\nexport { getQuote, getOrder, getStatus };",{"version":3,"sources":["/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/partners/simplex/simplex-api.js"],"names":["host","post","get","utils","getQuote","reqObj","options","mode","headers","Accept","url","e","handleOrThrow","getOrder","getStatus","userId"],"mappings":"AAAA,SAASA,IAAT;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,wBAA1B;AACA,SAASC,KAAT;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,MAAM,EAAI;AACzB,MAAI;AACF,QAAMC,OAAO,GAAG;AACdC,MAAAA,IAAI,EAAE,MADQ;AAEdC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD;AAFK,KAAhB;AAOA,WAAOR,IAAI,WAAID,IAAI,CAACU,GAAT,aAAsBL,MAAtB,EAA8BC,OAA9B,CAAX;AACD,GATD,CASE,OAAOK,CAAP,EAAU;AACVR,IAAAA,KAAK,CAACS,aAAN,CAAoBD,CAApB;AACD;AACF,CAbD;;AAcA,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAAAR,MAAM,EAAI;AACzB,MAAI;AACF,QAAMC,OAAO,GAAG;AACdC,MAAAA,IAAI,EAAE,MADQ;AAEdC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD;AAFK,KAAhB;AAOA,WAAOR,IAAI,WAAID,IAAI,CAACU,GAAT,aAAsBL,MAAtB,EAA8BC,OAA9B,CAAX;AACD,GATD,CASE,OAAOK,CAAP,EAAU;AACVR,IAAAA,KAAK,CAACS,aAAN,CAAoBD,CAApB;AACD;AACF,CAbD;;AAeA,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAAAC,MAAM,EAAI;AAC1B,MAAI;AACF,WAAOb,GAAG,WAAIF,IAAI,CAACU,GAAT,qBAAuBK,MAAvB,EAAV;AACD,GAFD,CAEE,OAAOJ,CAAP,EAAU;AACVR,IAAAA,KAAK,CAACS,aAAN,CAAoBD,CAApB;AACD;AACF,CAND;;AAOA,SAASP,QAAT,EAAmBS,QAAnB,EAA6BC,SAA7B","sourcesContent":["import { host } from './config';\nimport { post, get } from '@/helpers/httpRequests';\nimport { utils } from '../helpers';\n\nconst getQuote = reqObj => {\n  try {\n    const options = {\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      }\n    };\n    return post(`${host.url}/quote`, reqObj, options);\n  } catch (e) {\n    utils.handleOrThrow(e);\n  }\n};\nconst getOrder = reqObj => {\n  try {\n    const options = {\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      }\n    };\n    return post(`${host.url}/order`, reqObj, options);\n  } catch (e) {\n    utils.handleOrThrow(e);\n  }\n};\n\nconst getStatus = userId => {\n  try {\n    return get(`${host.url}/status/${userId}`);\n  } catch (e) {\n    utils.handleOrThrow(e);\n  }\n};\nexport { getQuote, getOrder, getStatus };\n"]}]}