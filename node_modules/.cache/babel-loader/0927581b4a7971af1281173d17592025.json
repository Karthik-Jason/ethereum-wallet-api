{"remainingRequest":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/layouts/AccessWalletLayout/components/PrivateKeyModal/PrivateKeyModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/layouts/AccessWalletLayout/components/PrivateKeyModal/PrivateKeyModal.vue","mtime":1573477611668},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { WalletInterface } from '@/wallets';\nimport { PRIV_KEY as privKeyType } from '@/wallets/bip44/walletTypes';\nimport { mapState } from 'vuex';\nimport { isHexString } from 'ethereumjs-util';\nimport WarningMessage from '@/components/WarningMessage';\nimport CustomerSupport from '@/components/CustomerSupport';\nimport StandardButton from '@/components/Buttons/StandardButton';\nexport default {\n  components: {\n    'customer-support': CustomerSupport,\n    'warning-message': WarningMessage,\n    'standard-button': StandardButton\n  },\n  data: function data() {\n    return {\n      accessWalletButtonOptions: {\n        title: this.$t('common.accessWallet'),\n        buttonStyle: 'green',\n        noMinWidth: true\n      },\n      privateKey: '',\n      spinner: false\n    };\n  },\n  computed: _objectSpread({}, mapState(['path']), {\n    notValid: function notValid() {\n      var _priv = this.privateKey.replace('0x', '');\n\n      return !isHexString('0x' + _priv, 32);\n    }\n  }),\n  mounted: function mounted() {},\n  methods: {\n    unlockWallet: function unlockWallet() {\n      var _this = this;\n\n      this.spinner = true;\n      this.$store.dispatch('decryptWallet', [new WalletInterface(this.privateKey, false, privKeyType)]).then(function () {\n        _this.privateKey = '';\n        _this.spinner = false;\n\n        _this.$router.push({\n          path: 'interface'\n        });\n      });\n    },\n    focusInput: function focusInput() {\n      this.$refs.privateKeyInput.focus();\n    }\n  }\n};",{"version":3,"sources":["PrivateKeyModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA,SAAA,eAAA,QAAA,WAAA;AACA,SAAA,QAAA,IAAA,WAAA,QAAA,6BAAA;AACA,SAAA,QAAA,QAAA,MAAA;AACA,SAAA,WAAA,QAAA,iBAAA;AACA,OAAA,cAAA,MAAA,6BAAA;AACA,OAAA,eAAA,MAAA,8BAAA;AACA,OAAA,cAAA,MAAA,qCAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,wBAAA,eADA;AAEA,uBAAA,cAFA;AAGA,uBAAA;AAHA,GADA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,yBAAA,EAAA;AACA,QAAA,KAAA,EAAA,KAAA,EAAA,CAAA,qBAAA,CADA;AAEA,QAAA,WAAA,EAAA,OAFA;AAGA,QAAA,UAAA,EAAA;AAHA,OADA;AAMA,MAAA,UAAA,EAAA,EANA;AAOA,MAAA,OAAA,EAAA;AAPA,KAAA;AASA,GAhBA;AAiBA,EAAA,QAAA,oBACA,QAAA,CAAA,CAAA,MAAA,CAAA,CADA;AAEA,IAAA,QAFA,sBAEA;AACA,UAAA,KAAA,GAAA,KAAA,UAAA,CAAA,OAAA,CAAA,IAAA,EAAA,EAAA,CAAA;;AACA,aAAA,CAAA,WAAA,CAAA,OAAA,KAAA,EAAA,EAAA,CAAA;AACA;AALA,IAjBA;AAwBA,EAAA,OAxBA,qBAwBA,CAAA,CAxBA;AAyBA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,0BACA;AAAA;;AACA,WAAA,OAAA,GAAA,IAAA;AACA,WAAA,MAAA,CACA,QADA,CACA,eADA,EACA,CACA,IAAA,eAAA,CAAA,KAAA,UAAA,EAAA,KAAA,EAAA,WAAA,CADA,CADA,EAIA,IAJA,CAIA,YAAA;AACA,QAAA,KAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,KAAA;;AACA,QAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,UAAA,IAAA,EAAA;AADA,SAAA;AAGA,OAVA;AAWA,KAdA;AAeA,IAAA,UAfA,wBAeA;AACA,WAAA,KAAA,CAAA,eAAA,CAAA,KAAA;AACA;AAjBA;AAzBA,CAAA","sourcesContent":["<template>\n  <b-modal\n    ref=\"privateKey\"\n    :title=\"$t('accessWallet.accessByPrivateKey')\"\n    hide-footer\n    class=\"bootstrap-modal nopadding modal-software\"\n    centered\n    static\n    lazy\n    @shown=\"focusInput\"\n    @hide=\"privateKey = ''\"\n  >\n    <div class=\"warning\">\n      <warning-message />\n    </div>\n    <div class=\"modal-content-block\">\n      <form class=\"private-key-form\">\n        <div class=\"input-container\">\n          <input\n            ref=\"privateKeyInput\"\n            v-model=\"privateKey\"\n            type=\"text\"\n            name=\"PrivateKey\"\n            autocomplete=\"off\"\n            placeholder=\"Enter Private Key\"\n          />\n        </div>\n        <standard-button\n          :button-disabled=\"notValid\"\n          :options=\"accessWalletButtonOptions\"\n          class=\"submit-button\"\n          @click.native.prevent=\"unlockWallet\"\n        />\n      </form>\n      <div class=\"customer-support-block\">\n        <customer-support />\n      </div>\n    </div>\n  </b-modal>\n</template>\n\n<script>\nimport { WalletInterface } from '@/wallets';\nimport { PRIV_KEY as privKeyType } from '@/wallets/bip44/walletTypes';\nimport { mapState } from 'vuex';\nimport { isHexString } from 'ethereumjs-util';\nimport WarningMessage from '@/components/WarningMessage';\nimport CustomerSupport from '@/components/CustomerSupport';\nimport StandardButton from '@/components/Buttons/StandardButton';\nexport default {\n  components: {\n    'customer-support': CustomerSupport,\n    'warning-message': WarningMessage,\n    'standard-button': StandardButton\n  },\n  data() {\n    return {\n      accessWalletButtonOptions: {\n        title: this.$t('common.accessWallet'),\n        buttonStyle: 'green',\n        noMinWidth: true\n      },\n      privateKey: '',\n      spinner: false\n    };\n  },\n  computed: {\n    ...mapState(['path']),\n    notValid() {\n      const _priv = this.privateKey.replace('0x', '');\n      return !isHexString('0x' + _priv, 32);\n    }\n  },\n  mounted() {},\n  methods: {\n    unlockWallet() {\n      this.spinner = true;\n      this.$store\n        .dispatch('decryptWallet', [\n          new WalletInterface(this.privateKey, false, privKeyType)\n        ])\n        .then(() => {\n          this.privateKey = '';\n          this.spinner = false;\n          this.$router.push({\n            path: 'interface'\n          });\n        });\n    },\n    focusInput() {\n      this.$refs.privateKeyInput.focus();\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n@import 'PrivateKeyModal-desktop.scss';\n@import 'PrivateKeyModal-tablet.scss';\n@import 'PrivateKeyModal-mobile.scss';\n</style>\n"],"sourceRoot":"src/layouts/AccessWalletLayout/components/PrivateKeyModal"}]}