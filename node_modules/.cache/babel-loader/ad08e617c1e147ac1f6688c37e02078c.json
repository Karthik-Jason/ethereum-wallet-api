{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/eslint-loader/index.js??ref--13-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/wallets/web3-provider/providers/given-provider.js","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/wallets/web3-provider/providers/given-provider.js","mtime":1573477612144},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _classCallCheck from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport { Manager as Web3RequestManager } from 'web3-core-requestmanager';\nimport MiddleWare from \"../middleware\";\nimport { ethSendTransaction, ethSign, ethSignTransaction, ethGetTransactionCount, ethGetTransactionReceipt } from \"../methods\";\n\nvar GivenProvider = function GivenProvider(host, options, store, eventHub) {\n  var _this = this;\n\n  _classCallCheck(this, GivenProvider);\n\n  this.givenProvider = Object.assign({}, host);\n  var requestManager = new Web3RequestManager(host);\n  options = options ? options : null;\n\n  if (this.givenProvider.sendAsync) {\n    this.givenProvider.send = this.givenProvider.sendAsync;\n    delete this.givenProvider.sendAsync;\n  }\n\n  this.givenProvider.send_ = this.givenProvider.send;\n  delete this.givenProvider.send;\n\n  this.givenProvider.send = function (payload, callback) {\n    var req = {\n      payload: payload,\n      store: store,\n      requestManager: requestManager,\n      eventHub: eventHub\n    };\n    var middleware = new MiddleWare();\n    middleware.use(ethSendTransaction);\n    middleware.use(ethSignTransaction);\n    middleware.use(ethGetTransactionCount);\n    middleware.use(ethGetTransactionReceipt);\n    middleware.use(ethSign);\n    middleware.run(req, callback).then(function () {\n      _this.givenProvider.send_(payload, callback);\n    });\n  };\n\n  return this.givenProvider;\n};\n\nexport default GivenProvider;",{"version":3,"sources":["/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/wallets/web3-provider/providers/given-provider.js"],"names":["Manager","Web3RequestManager","MiddleWare","ethSendTransaction","ethSign","ethSignTransaction","ethGetTransactionCount","ethGetTransactionReceipt","GivenProvider","host","options","store","eventHub","givenProvider","Object","assign","requestManager","sendAsync","send","send_","payload","callback","req","middleware","use","run","then"],"mappings":";AAAA,SAASA,OAAO,IAAIC,kBAApB,QAA8C,0BAA9C;AACA,OAAOC,UAAP;AACA,SACEC,kBADF,EAEEC,OAFF,EAGEC,kBAHF,EAIEC,sBAJF,EAKEC,wBALF;;IAOMC,a,GACJ,uBAAYC,IAAZ,EAAkBC,OAAlB,EAA2BC,KAA3B,EAAkCC,QAAlC,EAA4C;AAAA;;AAAA;;AAC1C,OAAKC,aAAL,GAAqBC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,IAAlB,CAArB;AACA,MAAMO,cAAc,GAAG,IAAIf,kBAAJ,CAAuBQ,IAAvB,CAAvB;AACAC,EAAAA,OAAO,GAAGA,OAAO,GAAGA,OAAH,GAAa,IAA9B;;AACA,MAAI,KAAKG,aAAL,CAAmBI,SAAvB,EAAkC;AAChC,SAAKJ,aAAL,CAAmBK,IAAnB,GAA0B,KAAKL,aAAL,CAAmBI,SAA7C;AACA,WAAO,KAAKJ,aAAL,CAAmBI,SAA1B;AACD;;AACD,OAAKJ,aAAL,CAAmBM,KAAnB,GAA2B,KAAKN,aAAL,CAAmBK,IAA9C;AACA,SAAO,KAAKL,aAAL,CAAmBK,IAA1B;;AACA,OAAKL,aAAL,CAAmBK,IAAnB,GAA0B,UAACE,OAAD,EAAUC,QAAV,EAAuB;AAC/C,QAAMC,GAAG,GAAG;AACVF,MAAAA,OAAO,EAAPA,OADU;AAEVT,MAAAA,KAAK,EAALA,KAFU;AAGVK,MAAAA,cAAc,EAAdA,cAHU;AAIVJ,MAAAA,QAAQ,EAARA;AAJU,KAAZ;AAMA,QAAMW,UAAU,GAAG,IAAIrB,UAAJ,EAAnB;AACAqB,IAAAA,UAAU,CAACC,GAAX,CAAerB,kBAAf;AACAoB,IAAAA,UAAU,CAACC,GAAX,CAAenB,kBAAf;AACAkB,IAAAA,UAAU,CAACC,GAAX,CAAelB,sBAAf;AACAiB,IAAAA,UAAU,CAACC,GAAX,CAAejB,wBAAf;AACAgB,IAAAA,UAAU,CAACC,GAAX,CAAepB,OAAf;AACAmB,IAAAA,UAAU,CAACE,GAAX,CAAeH,GAAf,EAAoBD,QAApB,EAA8BK,IAA9B,CAAmC,YAAM;AACvC,MAAA,KAAI,CAACb,aAAL,CAAmBM,KAAnB,CAAyBC,OAAzB,EAAkCC,QAAlC;AACD,KAFD;AAGD,GAhBD;;AAiBA,SAAO,KAAKR,aAAZ;AACD,C;;AAEH,eAAeL,aAAf","sourcesContent":["import { Manager as Web3RequestManager } from 'web3-core-requestmanager';\nimport MiddleWare from '../middleware';\nimport {\n  ethSendTransaction,\n  ethSign,\n  ethSignTransaction,\n  ethGetTransactionCount,\n  ethGetTransactionReceipt\n} from '../methods';\nclass GivenProvider {\n  constructor(host, options, store, eventHub) {\n    this.givenProvider = Object.assign({}, host);\n    const requestManager = new Web3RequestManager(host);\n    options = options ? options : null;\n    if (this.givenProvider.sendAsync) {\n      this.givenProvider.send = this.givenProvider.sendAsync;\n      delete this.givenProvider.sendAsync;\n    }\n    this.givenProvider.send_ = this.givenProvider.send;\n    delete this.givenProvider.send;\n    this.givenProvider.send = (payload, callback) => {\n      const req = {\n        payload,\n        store,\n        requestManager,\n        eventHub\n      };\n      const middleware = new MiddleWare();\n      middleware.use(ethSendTransaction);\n      middleware.use(ethSignTransaction);\n      middleware.use(ethGetTransactionCount);\n      middleware.use(ethGetTransactionReceipt);\n      middleware.use(ethSign);\n      middleware.run(req, callback).then(() => {\n        this.givenProvider.send_(payload, callback);\n      });\n    };\n    return this.givenProvider;\n  }\n}\nexport default GivenProvider;\n"]}]}