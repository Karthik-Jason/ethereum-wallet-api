{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/thread-loader/dist/cjs.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/eslint-loader/index.js??ref--13-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/wallets/web3-provider/methods/utils.js","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/wallets/web3-provider/methods/utils.js","mtime":1574664278326},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/thread-loader/dist/cjs.js","mtime":1574664277654},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js","mtime":1574664275010},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/eslint-loader/index.js","mtime":1574664275986}],"contextDependencies":[],"result":["import { formatters } from 'web3-core-helpers';\n\nvar getSanitizedTx = function getSanitizedTx(tx) {\n  return new Promise(function (resolve, reject) {\n    if (!tx.gas && !tx.gasLimit && !tx.chainId) return reject(new Error('\"gas\" or \"chainId\" is missing'));\n    if (tx.nonce < 0 || tx.gas < 0 || tx.gasPrice < 0 || tx.chainId < 0) return reject(new Error('Gas, gasPrice, nonce or chainId is lower than 0'));\n\n    try {\n      tx = formatters.inputCallFormatter(tx);\n      var transaction = tx;\n      if (tx.to) transaction.to = tx.to;\n      transaction.data = tx.data || '0x';\n      transaction.value = tx.value || '0x';\n      transaction.chainId = tx.chainId;\n      resolve(transaction);\n    } catch (e) {\n      reject(e);\n    }\n  });\n};\n\nexport { getSanitizedTx };",{"version":3,"sources":["/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/wallets/web3-provider/methods/utils.js"],"names":["formatters","getSanitizedTx","tx","Promise","resolve","reject","gas","gasLimit","chainId","Error","nonce","gasPrice","inputCallFormatter","transaction","to","data","value","e"],"mappings":"AAAA,SAASA,UAAT,QAA2B,mBAA3B;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,EAAE,EAAI;AAC3B,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAI,CAACH,EAAE,CAACI,GAAJ,IAAW,CAACJ,EAAE,CAACK,QAAf,IAA2B,CAACL,EAAE,CAACM,OAAnC,EACE,OAAOH,MAAM,CAAC,IAAII,KAAJ,CAAU,+BAAV,CAAD,CAAb;AACF,QAAIP,EAAE,CAACQ,KAAH,GAAW,CAAX,IAAgBR,EAAE,CAACI,GAAH,GAAS,CAAzB,IAA8BJ,EAAE,CAACS,QAAH,GAAc,CAA5C,IAAiDT,EAAE,CAACM,OAAH,GAAa,CAAlE,EACE,OAAOH,MAAM,CACX,IAAII,KAAJ,CAAU,iDAAV,CADW,CAAb;;AAIF,QAAI;AACFP,MAAAA,EAAE,GAAGF,UAAU,CAACY,kBAAX,CAA8BV,EAA9B,CAAL;AACA,UAAMW,WAAW,GAAGX,EAApB;AACA,UAAIA,EAAE,CAACY,EAAP,EAAWD,WAAW,CAACC,EAAZ,GAAiBZ,EAAE,CAACY,EAApB;AACXD,MAAAA,WAAW,CAACE,IAAZ,GAAmBb,EAAE,CAACa,IAAH,IAAW,IAA9B;AACAF,MAAAA,WAAW,CAACG,KAAZ,GAAoBd,EAAE,CAACc,KAAH,IAAY,IAAhC;AACAH,MAAAA,WAAW,CAACL,OAAZ,GAAsBN,EAAE,CAACM,OAAzB;AACAJ,MAAAA,OAAO,CAACS,WAAD,CAAP;AACD,KARD,CAQE,OAAOI,CAAP,EAAU;AACVZ,MAAAA,MAAM,CAACY,CAAD,CAAN;AACD;AACF,GAnBM,CAAP;AAoBD,CArBD;;AAuBA,SAAShB,cAAT","sourcesContent":["import { formatters } from 'web3-core-helpers';\nconst getSanitizedTx = tx => {\n  return new Promise((resolve, reject) => {\n    if (!tx.gas && !tx.gasLimit && !tx.chainId)\n      return reject(new Error('\"gas\" or \"chainId\" is missing'));\n    if (tx.nonce < 0 || tx.gas < 0 || tx.gasPrice < 0 || tx.chainId < 0)\n      return reject(\n        new Error('Gas, gasPrice, nonce or chainId is lower than 0')\n      );\n\n    try {\n      tx = formatters.inputCallFormatter(tx);\n      const transaction = tx;\n      if (tx.to) transaction.to = tx.to;\n      transaction.data = tx.data || '0x';\n      transaction.value = tx.value || '0x';\n      transaction.chainId = tx.chainId;\n      resolve(transaction);\n    } catch (e) {\n      reject(e);\n    }\n  });\n};\n\nexport { getSanitizedTx };\n"]}]}