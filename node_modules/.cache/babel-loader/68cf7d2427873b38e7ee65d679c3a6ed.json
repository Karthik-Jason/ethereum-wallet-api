{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/dapps/MakerDai/components/CloseCdpModal/CloseCdpModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/dapps/MakerDai/components/CloseCdpModal/CloseCdpModal.vue","mtime":1574664278278},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js","mtime":1574664275010},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js","mtime":1574664277774}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport StandardButton from '@/components/Buttons/StandardButton';\nimport HelpCenterButton from '@/components/Buttons/HelpCenterButton';\nimport BigNumber from 'bignumber.js/bignumber.js';\n\nvar toBigNumber = function toBigNumber(num) {\n  return new BigNumber(num);\n};\n\nexport default {\n  components: {\n    'help-center-button': HelpCenterButton,\n    'standard-button': StandardButton\n  },\n  props: {\n    tokensWithBalance: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    action: {\n      type: String,\n      default: ''\n    },\n    values: {\n      type: Object,\n      default: function _default() {\n        return {\n          maxPethDraw: '',\n          maxEthDraw: '',\n          maxUsdDraw: '',\n          ethCollateral: '',\n          pethCollateral: '',\n          usdCollateral: '',\n          debtValue: '',\n          maxDai: '',\n          collateralRatio: '',\n          cdpId: ''\n        };\n      }\n    },\n    makerManager: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    return {\n      amount: 0,\n      amountEth: 0,\n      amountDai: 0,\n      govFee: 0,\n      closable: false,\n      modalDetailInformation: false,\n      textValues: {},\n      mkrToken: {},\n      daiToken: {},\n      approveMkrButton: {\n        title: 'Approve Maker',\n        buttonStyle: 'green-border',\n        fullWidth: true,\n        noMinWidth: true\n      },\n      approveDaiButton: {\n        title: 'Approve Dai',\n        buttonStyle: 'green-border',\n        fullWidth: true,\n        noMinWidth: true\n      },\n      cancelButton: {\n        title: 'Cancel',\n        buttonStyle: 'green-border',\n        fullWidth: true,\n        noMinWidth: true\n      },\n      closeButton: {\n        title: 'Close',\n        buttonStyle: 'green',\n        fullWidth: true,\n        noMinWidth: true\n      },\n      suppliedFrom: {\n        symbol: 'ETH',\n        name: 'Ethereum'\n      },\n      suppliedTo: {\n        symbol: 'MKR',\n        name: 'Maker'\n      },\n      suppliedToAmount: 0,\n      destAddress: ''\n    };\n  },\n  computed: _objectSpread({}, mapState(['account', 'gasPrice', 'web3', 'network', 'ens']), {\n    getfeeOwed: function getfeeOwed() {\n      var result = this.values.governanceFeeOwed;\n      return this.displayFixedValue(result, 8);\n    },\n    newCollateralRatio: function newCollateralRatio() {\n      if (this.values) {\n        return this.values.collatRatio;\n      }\n\n      return 0;\n    },\n    newCollateralRatioSafe: function newCollateralRatioSafe() {\n      if (this.values) {\n        return toBigNumber(this.values.collatRatio).gte(2);\n      }\n\n      return true;\n    },\n    newLiquidationPrice: function newLiquidationPrice() {\n      if (this.values) {\n        return this.values.liquidationPrice;\n      }\n\n      return 0;\n    },\n    mkrBalance: function mkrBalance() {\n      if (this.mkrToken) {\n        return this.mkrToken.balance;\n      }\n\n      return 0;\n    },\n    daiBalance: function daiBalance() {\n      if (this.daiToken) {\n        return this.daiToken.balance;\n      }\n\n      return 0;\n    },\n    enoughMkr: function enoughMkr() {\n      var mkrNeeded = this.values.governanceFeeOwed;\n\n      if (mkrNeeded) {\n        return toBigNumber(this.mkrBalance).minus(mkrNeeded).gte(0);\n      }\n\n      return false;\n    },\n    enoughDai: function enoughDai() {\n      if (this.values.zeroDebt) return true;\n      var daiNeeded = this.values.debtValue;\n\n      if (daiNeeded) {\n        return toBigNumber(this.daiBalance).minus(daiNeeded).gte(0);\n      }\n\n      return false;\n    },\n    needsDaiApprove: function needsDaiApprove() {\n      if (toBigNumber(this.values.proxyAllowanceDai).gt(0)) {\n        if (toBigNumber(this.values.proxyAllowanceDai).lte(this.values.debtValue)) {\n          return true;\n        }\n      }\n\n      return toBigNumber(this.values.proxyAllowanceDai).eq(0);\n    },\n    needsMkrApprove: function needsMkrApprove() {\n      if (toBigNumber(this.values.proxyAllowanceMkr).gt(0)) {\n        if (toBigNumber(this.values.proxyAllowanceMkr).lt(this.values.governanceFeeOwed)) {\n          return true;\n        }\n      }\n\n      return toBigNumber(this.values.proxyAllowanceMkr).eq(0);\n    },\n    canClose: function canClose() {\n      return this.enoughMkr && this.enoughDai && !this.needsDaiApprove && !this.needsMkrApprove;\n    }\n  }),\n  watch: {\n    tokensWithBalance: function tokensWithBalance() {\n      this.getBalances();\n    }\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2() {\n      var _this = this;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this.destAddress = this.account.address;\n              this.getBalances();\n              this.$refs.modal.$on('shown',\n              /*#__PURE__*/\n              _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee() {\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _this.getBalances();\n\n                      case 1:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              })));\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: {\n    closeModal: function closeModal() {\n      this.$refs.modal.hide();\n    },\n    delayCloseModal: function delayCloseModal() {\n      var _this2 = this;\n\n      setTimeout(function () {\n        _this2.closeModal();\n      }, 200);\n    },\n    closeCdp: function () {\n      var _closeCdp = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.delayCloseModal();\n                this.$emit('closeCdp');\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function closeCdp() {\n        return _closeCdp.apply(this, arguments);\n      }\n\n      return closeCdp;\n    }(),\n    displayPercentValue: function displayPercentValue(raw) {\n      if (!BigNumber.isBigNumber(raw)) raw = new BigNumber(raw);\n      return raw.times(100).toString();\n    },\n    displayFixedValue: function displayFixedValue(raw) {\n      var decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n      if (!BigNumber.isBigNumber(raw)) raw = new BigNumber(raw);\n      return raw.toFixed(decimals, BigNumber.ROUND_DOWN).toString();\n    },\n    maxDai: function maxDai() {\n      this.amount = this.values.maxDai;\n    },\n    currentDai: function currentDai() {\n      this.amount = this.values.debtValue;\n    },\n    getBalances: function getBalances() {\n      this.mkrToken = this.tokensWithBalance.find(function (item) {\n        return item.symbol === 'MKR';\n      });\n      this.daiToken = this.tokensWithBalance.find(function (item) {\n        return item.symbol === 'DAI';\n      });\n    },\n    getMkr: function getMkr() {\n      var _this3 = this;\n\n      var mkrNeeded = this.getfeeOwed;\n\n      if (toBigNumber(this.mkrBalance).lt(mkrNeeded)) {\n        this.suppliedToAmount = toBigNumber(mkrNeeded).minus(toBigNumber(this.mkrBalance)).plus(toBigNumber(mkrNeeded).times(0.01)).toNumber();\n\n        if (toBigNumber(this.suppliedToAmount).lt(0.000001)) {\n          this.suppliedToAmount = 0.000001;\n        }\n\n        this.suppliedFrom = {\n          symbol: 'ETH',\n          name: 'Ethereum'\n        };\n        this.suppliedTo = {\n          symbol: 'MKR',\n          name: 'Maker'\n        };\n        this.$nextTick(function () {\n          _this3.$refs.swapWidget.$refs.modal.show();\n        });\n      }\n    },\n    getDai: function getDai() {\n      var daiNeeded = this.values.debtValue;\n\n      if (toBigNumber(this.daiBalance).lt(daiNeeded)) {\n        this.suppliedToAmount = toBigNumber(daiNeeded).minus(toBigNumber(this.daiBalance)).toNumber();\n\n        if (toBigNumber(this.suppliedToAmount).lt(0.000001)) {\n          this.suppliedToAmount = 0.000001;\n        }\n\n        this.suppliedFrom = {\n          symbol: 'ETH',\n          name: 'Ethereum'\n        };\n        this.suppliedTo = {\n          symbol: 'DAI',\n          name: 'Dai'\n        };\n        this.$eventHub.$emit('showSwapWidgetTo', this.account.address, this.suppliedFrom, this.suppliedTo, this.suppliedToAmount);\n      }\n    },\n    approveDai: function () {\n      var _approveDai = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.$emit('approveDai');\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function approveDai() {\n        return _approveDai.apply(this, arguments);\n      }\n\n      return approveDai;\n    }(),\n    approveMkr: function () {\n      var _approveMkr = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5() {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                this.$emit('approveMkr');\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function approveMkr() {\n        return _approveMkr.apply(this, arguments);\n      }\n\n      return approveMkr;\n    }()\n  }\n};",{"version":3,"sources":["CloseCdpModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"modal-container\">\n    <b-modal\n      ref=\"modal\"\n      :title=\"$t('dappsMaker.closeTitle')\"\n      centered\n      class=\"bootstrap-modal nopadding\"\n      static\n      lazy\n      hide-footer\n    >\n      <div class=\"contents\">\n        <div v-if=\"!enoughMkr\" class=\"message-container\">\n          {{ $t('dappsMaker.notEnoughMkrClose') }}\n        </div>\n        <div v-if=\"!enoughDai\" class=\"message-container\">\n          {{ $t('dappsMaker.notEnoughDaiClose') }}\n        </div>\n        <p class=\"top-text\">\n          {{ $t('dappsMaker.closingNotice') }}\n        </p>\n\n        <div class=\"value-table-container\">\n          <div class=\"value-table mkr-balance\">\n            <div class=\"value-block\">\n              <p>\n                <b>{{ $t('dappsMaker.mkrBalance') }}</b>\n              </p>\n              <p>\n                <b>{{ mkrBalance }} MKR</b>\n              </p>\n            </div>\n            <p v-show=\"!enoughMkr\" class=\"get-mkr\" @click=\"getMkr()\">\n              {{ $t('dappsMaker.getMkr') }}\n            </p>\n          </div>\n\n          <div class=\"value-table mkr-balance\">\n            <div class=\"value-block\">\n              <p>\n                <b>{{ $t('dappsMaker.daiBalance') }}</b>\n              </p>\n              <p>\n                <b>{{ daiBalance }} DAI</b>\n              </p>\n            </div>\n            <p v-show=\"!enoughDai\" class=\"get-mkr\" @click=\"getDai()\">\n              {{ $t('dappsMaker.getDai') }}\n            </p>\n          </div>\n          <div class=\"value-table other-values\">\n            <div class=\"value-block\">\n              <p>{{ $t('dappsMaker.outstandingDai') }}</p>\n              <p>\n                <b>{{ values.debtValue }} DAI</b>\n              </p>\n            </div>\n            <div class=\"value-block\">\n              <p>\n                {{\n                  $t('dappsMaker.stabilityFeeInMkr', {\n                    value: displayFixedValue(\n                      displayPercentValue(values.stabilityFee)\n                    )\n                  })\n                }}\n              </p>\n              <p>\n                <b>{{ getfeeOwed }} MKR</b>\n              </p>\n            </div>\n          </div>\n        </div>\n        <!-- TODO: work these into the user flow.  Batch transaction would be better, but an initial try brought the browser crashing issue back -->\n        <div class=\"buttons\">\n          <div v-if=\"needsDaiApprove\">\n            <standard-button\n              :options=\"approveDaiButton\"\n              @click.native=\"approveDai\"\n            />\n          </div>\n          <div v-if=\"needsMkrApprove\">\n            <standard-button\n              :options=\"approveMkrButton\"\n              @click.native=\"approveMkr\"\n            />\n          </div>\n        </div>\n        <div class=\"buttons\">\n          <standard-button :options=\"cancelButton\" @click.native=\"closeModal\" />\n          <standard-button\n            :options=\"closeButton\"\n            :button-disabled=\"canClose ? false : true\"\n            :click-function=\"closeCdp\"\n          />\n        </div>\n        <help-center-button />\n      </div>\n    </b-modal>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport StandardButton from '@/components/Buttons/StandardButton';\nimport HelpCenterButton from '@/components/Buttons/HelpCenterButton';\nimport BigNumber from 'bignumber.js/bignumber.js';\n\nconst toBigNumber = num => {\n  return new BigNumber(num);\n};\n\nexport default {\n  components: {\n    'help-center-button': HelpCenterButton,\n    'standard-button': StandardButton\n  },\n  props: {\n    tokensWithBalance: {\n      type: Array,\n      default: function() {\n        return [];\n      }\n    },\n    action: {\n      type: String,\n      default: ''\n    },\n    values: {\n      type: Object,\n      default: function() {\n        return {\n          maxPethDraw: '',\n          maxEthDraw: '',\n          maxUsdDraw: '',\n          ethCollateral: '',\n          pethCollateral: '',\n          usdCollateral: '',\n          debtValue: '',\n          maxDai: '',\n          collateralRatio: '',\n          cdpId: ''\n        };\n      }\n    },\n    makerManager: {\n      type: Object,\n      default: function() {\n        return {};\n      }\n    }\n  },\n  data() {\n    return {\n      amount: 0,\n      amountEth: 0,\n      amountDai: 0,\n      govFee: 0,\n      closable: false,\n      modalDetailInformation: false,\n      textValues: {},\n      mkrToken: {},\n      daiToken: {},\n      approveMkrButton: {\n        title: 'Approve Maker',\n        buttonStyle: 'green-border',\n        fullWidth: true,\n        noMinWidth: true\n      },\n      approveDaiButton: {\n        title: 'Approve Dai',\n        buttonStyle: 'green-border',\n        fullWidth: true,\n        noMinWidth: true\n      },\n      cancelButton: {\n        title: 'Cancel',\n        buttonStyle: 'green-border',\n        fullWidth: true,\n        noMinWidth: true\n      },\n      closeButton: {\n        title: 'Close',\n        buttonStyle: 'green',\n        fullWidth: true,\n        noMinWidth: true\n      },\n      suppliedFrom: {\n        symbol: 'ETH',\n        name: 'Ethereum'\n      },\n      suppliedTo: {\n        symbol: 'MKR',\n        name: 'Maker'\n      },\n      suppliedToAmount: 0,\n      destAddress: ''\n    };\n  },\n  computed: {\n    ...mapState(['account', 'gasPrice', 'web3', 'network', 'ens']),\n    getfeeOwed() {\n      const result = this.values.governanceFeeOwed;\n      return this.displayFixedValue(result, 8);\n    },\n    newCollateralRatio() {\n      if (this.values) {\n        return this.values.collatRatio;\n      }\n      return 0;\n    },\n    newCollateralRatioSafe() {\n      if (this.values) {\n        return toBigNumber(this.values.collatRatio).gte(2);\n      }\n      return true;\n    },\n    newLiquidationPrice() {\n      if (this.values) {\n        return this.values.liquidationPrice;\n      }\n      return 0;\n    },\n    mkrBalance() {\n      if (this.mkrToken) {\n        return this.mkrToken.balance;\n      }\n      return 0;\n    },\n    daiBalance() {\n      if (this.daiToken) {\n        return this.daiToken.balance;\n      }\n      return 0;\n    },\n    enoughMkr() {\n      const mkrNeeded = this.values.governanceFeeOwed;\n      if (mkrNeeded) {\n        return toBigNumber(this.mkrBalance)\n          .minus(mkrNeeded)\n          .gte(0);\n      }\n      return false;\n    },\n    enoughDai() {\n      if (this.values.zeroDebt) return true;\n      const daiNeeded = this.values.debtValue;\n      if (daiNeeded) {\n        return toBigNumber(this.daiBalance)\n          .minus(daiNeeded)\n          .gte(0);\n      }\n      return false;\n    },\n    needsDaiApprove() {\n      if (toBigNumber(this.values.proxyAllowanceDai).gt(0)) {\n        if (\n          toBigNumber(this.values.proxyAllowanceDai).lte(this.values.debtValue)\n        ) {\n          return true;\n        }\n      }\n      return toBigNumber(this.values.proxyAllowanceDai).eq(0);\n    },\n    needsMkrApprove() {\n      if (toBigNumber(this.values.proxyAllowanceMkr).gt(0)) {\n        if (\n          toBigNumber(this.values.proxyAllowanceMkr).lt(\n            this.values.governanceFeeOwed\n          )\n        ) {\n          return true;\n        }\n      }\n      return toBigNumber(this.values.proxyAllowanceMkr).eq(0);\n    },\n    canClose() {\n      return (\n        this.enoughMkr &&\n        this.enoughDai &&\n        !this.needsDaiApprove &&\n        !this.needsMkrApprove\n      );\n    }\n  },\n  watch: {\n    tokensWithBalance() {\n      this.getBalances();\n    }\n  },\n  async mounted() {\n    this.destAddress = this.account.address;\n    this.getBalances();\n    this.$refs.modal.$on('shown', async () => {\n      this.getBalances();\n    });\n  },\n  methods: {\n    closeModal() {\n      this.$refs.modal.hide();\n    },\n    delayCloseModal() {\n      setTimeout(() => {\n        this.closeModal();\n      }, 200);\n    },\n    async closeCdp() {\n      this.delayCloseModal();\n      this.$emit('closeCdp');\n    },\n    displayPercentValue(raw) {\n      if (!BigNumber.isBigNumber(raw)) raw = new BigNumber(raw);\n      return raw.times(100).toString();\n    },\n    displayFixedValue(raw, decimals = 3) {\n      if (!BigNumber.isBigNumber(raw)) raw = new BigNumber(raw);\n      return raw.toFixed(decimals, BigNumber.ROUND_DOWN).toString();\n    },\n    maxDai() {\n      this.amount = this.values.maxDai;\n    },\n    currentDai() {\n      this.amount = this.values.debtValue;\n    },\n    getBalances() {\n      this.mkrToken = this.tokensWithBalance.find(item => {\n        return item.symbol === 'MKR';\n      });\n      this.daiToken = this.tokensWithBalance.find(item => {\n        return item.symbol === 'DAI';\n      });\n    },\n    getMkr() {\n      const mkrNeeded = this.getfeeOwed;\n      if (toBigNumber(this.mkrBalance).lt(mkrNeeded)) {\n        this.suppliedToAmount = toBigNumber(mkrNeeded)\n          .minus(toBigNumber(this.mkrBalance))\n          .plus(toBigNumber(mkrNeeded).times(0.01))\n          .toNumber();\n        if (toBigNumber(this.suppliedToAmount).lt(0.000001)) {\n          this.suppliedToAmount = 0.000001;\n        }\n        this.suppliedFrom = {\n          symbol: 'ETH',\n          name: 'Ethereum'\n        };\n        this.suppliedTo = {\n          symbol: 'MKR',\n          name: 'Maker'\n        };\n        this.$nextTick(() => {\n          this.$refs.swapWidget.$refs.modal.show();\n        });\n      }\n    },\n    getDai() {\n      const daiNeeded = this.values.debtValue;\n      if (toBigNumber(this.daiBalance).lt(daiNeeded)) {\n        this.suppliedToAmount = toBigNumber(daiNeeded)\n          .minus(toBigNumber(this.daiBalance))\n          .toNumber();\n        if (toBigNumber(this.suppliedToAmount).lt(0.000001)) {\n          this.suppliedToAmount = 0.000001;\n        }\n        this.suppliedFrom = {\n          symbol: 'ETH',\n          name: 'Ethereum'\n        };\n        this.suppliedTo = {\n          symbol: 'DAI',\n          name: 'Dai'\n        };\n        this.$eventHub.$emit(\n          'showSwapWidgetTo',\n          this.account.address,\n          this.suppliedFrom,\n          this.suppliedTo,\n          this.suppliedToAmount\n        );\n      }\n    },\n\n    async approveDai() {\n      this.$emit('approveDai');\n    },\n    async approveMkr() {\n      this.$emit('approveMkr');\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'CloseCdpModal';\n</style>\n"],"sourceRoot":"src/dapps/MakerDai/components/CloseCdpModal"}]}