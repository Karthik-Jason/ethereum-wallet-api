{"remainingRequest":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/eslint-loader/index.js??ref--13-0!/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/wallets/hardware/ledger/errorHandler.js","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/wallets/hardware/ledger/errorHandler.js","mtime":1573477612120},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport { Toast } from '@/helpers';\nimport Vue from 'vue';\nvar ERRORS = {\n  'Failed to sign with Ledger device: U2F TIMEOUT': 'ledgerError.failedToSign',\n  'Failed to sign with Ledger device: U2F DEVICE_INELIGIBLE': 'ledgerError.failedSignIneligible',\n  'No Ledger device found (timeout)': 'ledgerError.noDevice',\n  'Ledger Device is busy': 'ledgerError.deviceBusy1',\n  'Ledger device: UNKNOWN_ERROR (0x6804)': 'ledgerError.unknown0x6804',\n  'Ledger device: Invalid data received (0x6a80)': 'ledgerError.invalidData0x6a80',\n  'Ledger device: CLA_NOT_SUPPORTED (0x6e00)': 'ledgerError.claNotSupport0x6e00',\n  'Ledger Device is busy (lock getAddress)': 'ledgerError.deviceBusy2',\n  'Ledger device: INS_NOT_SUPPORTED (0x6d00)': 'ledgerError.wrongWallet',\n  'Ledger Device is busy (lock provideERC20TokenInformation)': 'ledgerError.deviceBusy1',\n  'Ledger Device is busy (lock signTransaction)': 'ledgerError.deviceBusy1',\n  'Ledger Device is busy (lock signPersonalMessage)': 'ledgerError.deviceBusy1',\n  'TransportError: Failed to sign with Ledger device: U2F OTHER_ERROR': 'ledgerError.failedToSignOther',\n  'TransportStatusError: Ledger device: UNKNOWN_ERROR (0x6801)': 'ledgerError.unknown0x6801',\n  'TransportStatusError: Ledger device: UNKNOWN_ERROR (0x6804)': 'ledgerError.unknown0x6804',\n  'Invalid networkId signature returned.': 'ledgerError.invalidNetworkID',\n  'EthAppPleaseEnableContractData: Please enable Contract data on the Ethereum app Settings': 'ledgerError.enableContractData',\n  'TransportInterfaceNotAvailable: The interface number provided is not supported by the device in its current configuration.': 'ledgerError.transportInterface',\n  'No device selected.': 'ledgerError.noDeviceSelected',\n  'Incompatible EIP155-based V 10 and chain id 1. See the second parameter of the Transaction constructor to set the chain id.': 'ledgerError.appAndNetworkMismatch',\n  'DisconnectedDeviceDuringOperation: The device was disconnected': 'ledgerError.deviceDisconnected',\n  'AbortError: The transfer was cancelled': 'ledgerError.deniedByUser'\n};\nvar WARNING = {\n  'Ledger device: Condition of use not satisfied (denied by the user?) (0x6985)': 'ledgerError.deniedByUser0x6985',\n  \"U2F browser support is needed for Ledger. Please use Chrome, Opera or Firefox with a U2F extension. Also make sure you're on an HTTPS connection\": 'ledgerError.unsupportedBrowserU2f'\n};\nexport default (function (err) {\n  var expected = err.message ? err.message.substr(err.message.indexOf('Expected'), err.message.length) : err.substr(err.indexOf('Expected'), err.message);\n  var errorValues = Object.keys(ERRORS);\n  var warningValues = Object.keys(WARNING);\n  var foundError = errorValues.find(function (item) {\n    if (err && err.message.includes(item)) return item;\n    return item.includes(err.message) || item.includes(err);\n  });\n  var foundWarning = warningValues.find(function (item) {\n    if (err && err.message.includes(item)) return item;\n    return item.includes(err.message) || item.includes(err);\n  });\n\n  if (foundError) {\n    Toast.responseHandler(\"\".concat(Vue.$i18n.t(ERRORS[foundError])).concat(expected), Toast.ERROR);\n  } else if (foundWarning) {\n    Toast.responseHandler(\"\".concat(Vue.$i18n.t(WARNING[foundWarning])).concat(expected), Toast.WARN);\n  } else {\n    Toast.responseHandler(err, false);\n  }\n});",{"version":3,"sources":["/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/wallets/hardware/ledger/errorHandler.js"],"names":["Toast","Vue","ERRORS","WARNING","err","expected","message","substr","indexOf","length","errorValues","Object","keys","warningValues","foundError","find","item","includes","foundWarning","responseHandler","$i18n","t","ERROR","WARN"],"mappings":";;;;;AAAA,SAASA,KAAT,QAAsB,WAAtB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,IAAMC,MAAM,GAAG;AACb,oDAAkD,0BADrC;AAEb,8DACE,kCAHW;AAIb,sCAAoC,sBAJvB;AAKb,2BAAyB,yBALZ;AAMb,2CAAyC,2BAN5B;AAOb,mDACE,+BARW;AASb,+CACE,iCAVW;AAWb,6CAA2C,yBAX9B;AAYb,+CAA6C,yBAZhC;AAab,+DACE,yBAdW;AAeb,kDAAgD,yBAfnC;AAgBb,sDAAoD,yBAhBvC;AAiBb,wEACE,+BAlBW;AAmBb,iEACE,2BApBW;AAqBb,iEACE,2BAtBW;AAuBb,2CAAyC,8BAvB5B;AAwBb,8FACE,gCAzBW;AA0Bb,gIACE,gCA3BW;AA4Bb,yBAAuB,8BA5BV;AA6Bb,iIACE,mCA9BW;AA+Bb,oEACE,gCAhCW;AAiCb,4CAA0C;AAjC7B,CAAf;AAmCA,IAAMC,OAAO,GAAG;AACd,kFACE,gCAFY;AAGd,sJACE;AAJY,CAAhB;AAOA,gBAAe,UAAAC,GAAG,EAAI;AACpB,MAAMC,QAAQ,GAAGD,GAAG,CAACE,OAAJ,GACbF,GAAG,CAACE,OAAJ,CAAYC,MAAZ,CAAmBH,GAAG,CAACE,OAAJ,CAAYE,OAAZ,CAAoB,UAApB,CAAnB,EAAoDJ,GAAG,CAACE,OAAJ,CAAYG,MAAhE,CADa,GAEbL,GAAG,CAACG,MAAJ,CAAWH,GAAG,CAACI,OAAJ,CAAY,UAAZ,CAAX,EAAoCJ,GAAG,CAACE,OAAxC,CAFJ;AAGA,MAAMI,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYV,MAAZ,CAApB;AACA,MAAMW,aAAa,GAAGF,MAAM,CAACC,IAAP,CAAYT,OAAZ,CAAtB;AACA,MAAMW,UAAU,GAAGJ,WAAW,CAACK,IAAZ,CAAiB,UAAAC,IAAI,EAAI;AAC1C,QAAIZ,GAAG,IAAIA,GAAG,CAACE,OAAJ,CAAYW,QAAZ,CAAqBD,IAArB,CAAX,EAAuC,OAAOA,IAAP;AACvC,WAAOA,IAAI,CAACC,QAAL,CAAcb,GAAG,CAACE,OAAlB,KAA8BU,IAAI,CAACC,QAAL,CAAcb,GAAd,CAArC;AACD,GAHkB,CAAnB;AAKA,MAAMc,YAAY,GAAGL,aAAa,CAACE,IAAd,CAAmB,UAAAC,IAAI,EAAI;AAC9C,QAAIZ,GAAG,IAAIA,GAAG,CAACE,OAAJ,CAAYW,QAAZ,CAAqBD,IAArB,CAAX,EAAuC,OAAOA,IAAP;AACvC,WAAOA,IAAI,CAACC,QAAL,CAAcb,GAAG,CAACE,OAAlB,KAA8BU,IAAI,CAACC,QAAL,CAAcb,GAAd,CAArC;AACD,GAHoB,CAArB;;AAKA,MAAIU,UAAJ,EAAgB;AACdd,IAAAA,KAAK,CAACmB,eAAN,WACKlB,GAAG,CAACmB,KAAJ,CAAUC,CAAV,CAAYnB,MAAM,CAACY,UAAD,CAAlB,CADL,SACuCT,QADvC,GAEEL,KAAK,CAACsB,KAFR;AAID,GALD,MAKO,IAAIJ,YAAJ,EAAkB;AACvBlB,IAAAA,KAAK,CAACmB,eAAN,WACKlB,GAAG,CAACmB,KAAJ,CAAUC,CAAV,CAAYlB,OAAO,CAACe,YAAD,CAAnB,CADL,SAC0Cb,QAD1C,GAEEL,KAAK,CAACuB,IAFR;AAID,GALM,MAKA;AACLvB,IAAAA,KAAK,CAACmB,eAAN,CAAsBf,GAAtB,EAA2B,KAA3B;AACD;AACF,CA7BD","sourcesContent":["import { Toast } from '@/helpers';\nimport Vue from 'vue';\nconst ERRORS = {\n  'Failed to sign with Ledger device: U2F TIMEOUT': 'ledgerError.failedToSign',\n  'Failed to sign with Ledger device: U2F DEVICE_INELIGIBLE':\n    'ledgerError.failedSignIneligible',\n  'No Ledger device found (timeout)': 'ledgerError.noDevice',\n  'Ledger Device is busy': 'ledgerError.deviceBusy1',\n  'Ledger device: UNKNOWN_ERROR (0x6804)': 'ledgerError.unknown0x6804',\n  'Ledger device: Invalid data received (0x6a80)':\n    'ledgerError.invalidData0x6a80',\n  'Ledger device: CLA_NOT_SUPPORTED (0x6e00)':\n    'ledgerError.claNotSupport0x6e00',\n  'Ledger Device is busy (lock getAddress)': 'ledgerError.deviceBusy2',\n  'Ledger device: INS_NOT_SUPPORTED (0x6d00)': 'ledgerError.wrongWallet',\n  'Ledger Device is busy (lock provideERC20TokenInformation)':\n    'ledgerError.deviceBusy1',\n  'Ledger Device is busy (lock signTransaction)': 'ledgerError.deviceBusy1',\n  'Ledger Device is busy (lock signPersonalMessage)': 'ledgerError.deviceBusy1',\n  'TransportError: Failed to sign with Ledger device: U2F OTHER_ERROR':\n    'ledgerError.failedToSignOther',\n  'TransportStatusError: Ledger device: UNKNOWN_ERROR (0x6801)':\n    'ledgerError.unknown0x6801',\n  'TransportStatusError: Ledger device: UNKNOWN_ERROR (0x6804)':\n    'ledgerError.unknown0x6804',\n  'Invalid networkId signature returned.': 'ledgerError.invalidNetworkID',\n  'EthAppPleaseEnableContractData: Please enable Contract data on the Ethereum app Settings':\n    'ledgerError.enableContractData',\n  'TransportInterfaceNotAvailable: The interface number provided is not supported by the device in its current configuration.':\n    'ledgerError.transportInterface',\n  'No device selected.': 'ledgerError.noDeviceSelected',\n  'Incompatible EIP155-based V 10 and chain id 1. See the second parameter of the Transaction constructor to set the chain id.':\n    'ledgerError.appAndNetworkMismatch',\n  'DisconnectedDeviceDuringOperation: The device was disconnected':\n    'ledgerError.deviceDisconnected',\n  'AbortError: The transfer was cancelled': 'ledgerError.deniedByUser'\n};\nconst WARNING = {\n  'Ledger device: Condition of use not satisfied (denied by the user?) (0x6985)':\n    'ledgerError.deniedByUser0x6985',\n  \"U2F browser support is needed for Ledger. Please use Chrome, Opera or Firefox with a U2F extension. Also make sure you're on an HTTPS connection\":\n    'ledgerError.unsupportedBrowserU2f'\n};\n\nexport default err => {\n  const expected = err.message\n    ? err.message.substr(err.message.indexOf('Expected'), err.message.length)\n    : err.substr(err.indexOf('Expected'), err.message);\n  const errorValues = Object.keys(ERRORS);\n  const warningValues = Object.keys(WARNING);\n  const foundError = errorValues.find(item => {\n    if (err && err.message.includes(item)) return item;\n    return item.includes(err.message) || item.includes(err);\n  });\n\n  const foundWarning = warningValues.find(item => {\n    if (err && err.message.includes(item)) return item;\n    return item.includes(err.message) || item.includes(err);\n  });\n\n  if (foundError) {\n    Toast.responseHandler(\n      `${Vue.$i18n.t(ERRORS[foundError])}${expected}`,\n      Toast.ERROR\n    );\n  } else if (foundWarning) {\n    Toast.responseHandler(\n      `${Vue.$i18n.t(WARNING[foundWarning])}${expected}`,\n      Toast.WARN\n    );\n  } else {\n    Toast.responseHandler(err, false);\n  }\n};\n"]}]}