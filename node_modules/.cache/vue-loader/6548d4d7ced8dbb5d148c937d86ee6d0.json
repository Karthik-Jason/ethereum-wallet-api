{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/components/VerifyMessageInput/VerifyMessageInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/components/VerifyMessageInput/VerifyMessageInput.vue","mtime":1574664278270},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/thread-loader/dist/cjs.js","mtime":1574664277654},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js","mtime":1574664275010},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js","mtime":1574664277774}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { Toast } from '@/helpers';\nimport { mapState } from 'vuex';\nimport {\n  toBuffer,\n  hashPersonalMessage,\n  ecrecover,\n  pubToAddress\n} from 'ethereumjs-util';\n\nexport default {\n  props: {\n    signature: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      message: this.signature,\n      showMessage: false\n    };\n  },\n  computed: {\n    ...mapState(['web3'])\n  },\n  watch: {\n    message(newVal) {\n      this.message = newVal;\n    },\n    signature(newVal) {\n      this.message = newVal;\n    }\n  },\n  methods: {\n    copyToClipboard() {\n      this.$refs.signature.select();\n      document.execCommand('copy');\n      window.getSelection().removeAllRanges();\n    },\n    deleteInput() {\n      this.showMessage = false;\n      this.message = '';\n    },\n    verifyMessage() {\n      try {\n        const json = JSON.parse(this.message);\n        let hash = hashPersonalMessage(toBuffer(json.msg));\n        const sig = Buffer.from(json.sig.replace('0x', ''), 'hex');\n        if (sig.length !== 65) {\n          Toast.responseHandler('Something went wrong!', Toast.ERROR);\n          return;\n        }\n        sig[64] = sig[64] === 0 || sig[64] === 1 ? sig[64] + 27 : sig[64];\n        if (json.version === '1') {\n          hash = this.web3.utils.sha3(json.msg);\n        }\n        const pubKey = ecrecover(\n          hash,\n          sig[64],\n          sig.slice(0, 32),\n          sig.slice(32, 64)\n        );\n        if (\n          json.address.replace('0x', '') !==\n          pubToAddress(pubKey).toString('hex')\n        ) {\n          this.showMessage = false;\n          Toast.responseHandler(\n            'Signer address is different from the derived address!',\n            Toast.ERROR\n          );\n        } else {\n          this.showMessage = true;\n        }\n      } catch (e) {\n        Toast.responseHandler(e, Toast.ERROR);\n      }\n    }\n  }\n};\n",{"version":3,"sources":["VerifyMessageInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VerifyMessageInput.vue","sourceRoot":"src/components/VerifyMessageInput","sourcesContent":["<template>\n  <div class=\"verify-content-container\">\n    <div class=\"send-form\">\n      <div class=\"title-container\">\n        <div class=\"title\">\n          <h4>Signature:</h4>\n          <div class=\"copy-buttons\">\n            <span @click=\"deleteInput\">{{ $t('common.clear') }}</span>\n            <span @click=\"copyToClipboard\">{{ $t('common.copy') }}</span>\n          </div>\n        </div>\n      </div>\n      <div class=\"the-form signature\">\n        <textarea\n          v-validate=\"'required'\"\n          ref=\"signature\"\n          v-model=\"message\"\n          name=\"signature\"\n          class=\"custom-textarea-1\"\n        />\n      </div>\n      <div>\n        <p\n          v-if=\"message !== '' && showMessage === true\"\n          class=\"success-message\"\n        >\n          {{ JSON.parse(message).address }}\n          {{ $t('interface.verifiedMessage') }}:\n          <br v-if=\"JSON.parse(message).msg.length > 20\" />\n          <b>{{ JSON.parse(message).msg }}</b>\n        </p>\n        <p v-if=\"errors.has('signature')\">{{ errors.first('signature') }}</p>\n      </div>\n    </div>\n\n    <div class=\"submit-button-container\">\n      <div class=\"buttons\">\n        <button\n          :class=\"[\n            errors.has('signature') || message === '' ? 'disabled' : '',\n            'submit-button large-round-button-green-filled clickable'\n          ]\"\n          @click=\"verifyMessage\"\n        >\n          {{ $t('common.verifyMessage') }}\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Toast } from '@/helpers';\nimport { mapState } from 'vuex';\nimport {\n  toBuffer,\n  hashPersonalMessage,\n  ecrecover,\n  pubToAddress\n} from 'ethereumjs-util';\n\nexport default {\n  props: {\n    signature: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      message: this.signature,\n      showMessage: false\n    };\n  },\n  computed: {\n    ...mapState(['web3'])\n  },\n  watch: {\n    message(newVal) {\n      this.message = newVal;\n    },\n    signature(newVal) {\n      this.message = newVal;\n    }\n  },\n  methods: {\n    copyToClipboard() {\n      this.$refs.signature.select();\n      document.execCommand('copy');\n      window.getSelection().removeAllRanges();\n    },\n    deleteInput() {\n      this.showMessage = false;\n      this.message = '';\n    },\n    verifyMessage() {\n      try {\n        const json = JSON.parse(this.message);\n        let hash = hashPersonalMessage(toBuffer(json.msg));\n        const sig = Buffer.from(json.sig.replace('0x', ''), 'hex');\n        if (sig.length !== 65) {\n          Toast.responseHandler('Something went wrong!', Toast.ERROR);\n          return;\n        }\n        sig[64] = sig[64] === 0 || sig[64] === 1 ? sig[64] + 27 : sig[64];\n        if (json.version === '1') {\n          hash = this.web3.utils.sha3(json.msg);\n        }\n        const pubKey = ecrecover(\n          hash,\n          sig[64],\n          sig.slice(0, 32),\n          sig.slice(32, 64)\n        );\n        if (\n          json.address.replace('0x', '') !==\n          pubToAddress(pubKey).toString('hex')\n        ) {\n          this.showMessage = false;\n          Toast.responseHandler(\n            'Signer address is different from the derived address!',\n            Toast.ERROR\n          );\n        } else {\n          this.showMessage = true;\n        }\n      } catch (e) {\n        Toast.responseHandler(e, Toast.ERROR);\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'VerifyMessageInput.scss';\n</style>\n"]}]}