{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/dapps/ManageENS/containers/InitialENSStateContainer/InitialENSStateContainer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/dapps/ManageENS/containers/InitialENSStateContainer/InitialENSStateContainer.vue","mtime":1573477611656},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport InterfaceBottomText from '@/components/InterfaceBottomText';\nimport { mapState } from 'vuex';\nexport default {\n  components: {\n    'interface-bottom-text': InterfaceBottomText\n  },\n  props: {\n    checkDomain: {\n      type: Function,\n      default: function() {}\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    contractInitiated: {\n      type: Boolean,\n      default: false\n    },\n    hostName: {\n      type: String,\n      default: ''\n    },\n    tld: {\n      type: String,\n      default: ''\n    },\n    domainNameErr: {\n      type: Boolean,\n      default: false\n    },\n    multiTld: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      localDomainName: this.hostName\n    };\n  },\n  computed: {\n    ...mapState(['network']),\n    isValidLength() {\n      return (\n        this.localDomainName.replace(\n          '.' + this.network.type.ens.registrarTLD,\n          ''\n        ).length > 6\n      );\n    }\n  },\n  watch: {\n    localDomainName(newVal) {\n      this.$emit('domainNameChange', newVal);\n    },\n    domainName(newVal) {\n      this.localDomainName = newVal;\n    }\n  },\n  methods: {\n    expendDomainCheckForm() {\n      this.$refs['checkForm'].classList.toggle('hidden');\n      this.$refs['domainList'].classList.add('hidden');\n    },\n    domainAvailabilityCheck() {\n      this.$refs['domainList'].classList.add('hidden');\n    }\n  }\n};\n",{"version":3,"sources":["InitialENSStateContainer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"InitialENSStateContainer.vue","sourceRoot":"src/dapps/ManageENS/containers/InitialENSStateContainer","sourcesContent":["<template lang=\"html\">\n  <div class=\"initial-state-ens\">\n    <form class=\"send-form\">\n      <div class=\"title-container\">\n        <div class=\"title\">\n          <h4>\n            {{ $t('interface.ensManager') }}\n          </h4>\n          <p>{{ $t('interface.registerEnsDesc') }}</p>\n        </div>\n      </div>\n      <div class=\"the-form domain-name\">\n        <input\n          v-model=\"localDomainName\"\n          :class=\"[domainNameErr ? 'errored' : '']\"\n          :placeholder=\"$t('dapps.registerEnsPlaceholder')\"\n          type=\"text\"\n          name=\"\"\n        />\n        <span v-show=\"!multiTld\">.{{ tld }}</span>\n      </div>\n      <div class=\"error-message-container\">\n        <p\n          v-show=\"contractInitiated === false\"\n          class=\"contract-loading-warning\"\n        >\n          {{ $t('dapps.registerEnsContractNotReady') }}\n        </p>\n        <p v-show=\"domainNameErr\" class=\"erroredMsg\">\n          <span v-if=\"!isValidLength && localDomainName !== ''\">\n            {{ $t('dapps.registerEnsWarn1') }}\n          </span>\n          <span v-else> {{ $t('dapps.registerEnsWarn2') }} </span>\n        </p>\n      </div>\n      <div class=\"submit-button-container\">\n        <button\n          :class=\"[\n            domainNameErr || localDomainName === '' ? 'disabled' : '',\n            'submit-button large-round-button-green-filled clickable'\n          ]\"\n          @click.prevent=\"checkDomain\"\n        >\n          <span v-show=\"!loading\"> {{ $t('interface.checkDomain') }} </span>\n          <i v-show=\"loading\" class=\"fa fa-spinner fa-spin\" />\n        </button>\n      </div>\n    </form>\n\n    <interface-bottom-text\n      :link-text=\"$t('interface.helpCenter')\"\n      :question=\"$t('interface.haveIssues')\"\n      link=\"https://kb.myetherwallet.com\"\n    />\n  </div>\n</template>\n\n<script>\nimport InterfaceBottomText from '@/components/InterfaceBottomText';\nimport { mapState } from 'vuex';\nexport default {\n  components: {\n    'interface-bottom-text': InterfaceBottomText\n  },\n  props: {\n    checkDomain: {\n      type: Function,\n      default: function() {}\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    contractInitiated: {\n      type: Boolean,\n      default: false\n    },\n    hostName: {\n      type: String,\n      default: ''\n    },\n    tld: {\n      type: String,\n      default: ''\n    },\n    domainNameErr: {\n      type: Boolean,\n      default: false\n    },\n    multiTld: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      localDomainName: this.hostName\n    };\n  },\n  computed: {\n    ...mapState(['network']),\n    isValidLength() {\n      return (\n        this.localDomainName.replace(\n          '.' + this.network.type.ens.registrarTLD,\n          ''\n        ).length > 6\n      );\n    }\n  },\n  watch: {\n    localDomainName(newVal) {\n      this.$emit('domainNameChange', newVal);\n    },\n    domainName(newVal) {\n      this.localDomainName = newVal;\n    }\n  },\n  methods: {\n    expendDomainCheckForm() {\n      this.$refs['checkForm'].classList.toggle('hidden');\n      this.$refs['domainList'].classList.add('hidden');\n    },\n    domainAvailabilityCheck() {\n      this.$refs['domainList'].classList.add('hidden');\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'InitialENSStateContainer.scss';\n</style>\n"]}]}