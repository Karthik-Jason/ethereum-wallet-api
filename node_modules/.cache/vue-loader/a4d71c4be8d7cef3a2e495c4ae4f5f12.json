{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/layouts/InterfaceLayout/containers/SendCurrencyContainer/SendCurrencyContainer.vue?vue&type=template&id=2da6ad62&scoped=true&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/layouts/InterfaceLayout/containers/SendCurrencyContainer/SendCurrencyContainer.vue","mtime":1574664278306},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1574664277774},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js","mtime":1574664277774}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"send-currency-container\" },\n    [\n      _c(\"interface-container-title\", {\n        attrs: { title: _vm.$t(\"common.sendTx\") }\n      }),\n      _c(\"div\", { staticClass: \"send-form\" }, [\n        _c(\"div\", { staticClass: \"form-block amount-to-address\" }, [\n          _c(\"div\", { staticClass: \"amount\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"single-input-block\" },\n              [\n                _c(\"div\", { staticClass: \"title\" }, [\n                  _c(\"h4\", [_vm._v(_vm._s(_vm.$t(\"interface.sendTxType\")))])\n                ]),\n                _c(\"currency-picker\", {\n                  attrs: {\n                    currency: _vm.tokensWithBalance,\n                    page: \"sendEthAndTokens\",\n                    token: true,\n                    default:\n                      _vm.selectedCurrency !== \"\" ? _vm.selectedCurrency : {}\n                  },\n                  on: {\n                    selectedCurrency: function($event) {\n                      _vm.selectedCurrency = $event\n                    }\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\"div\", { staticClass: \"single-input-block\" }, [\n              _c(\"div\", { staticClass: \"title\" }, [\n                _c(\"h4\", [_vm._v(_vm._s(_vm.$t(\"interface.sendTxAmount\")))]),\n                _c(\n                  \"p\",\n                  {\n                    staticClass: \"title-button prevent-user-select\",\n                    on: { click: _vm.sendEntireBalance }\n                  },\n                  [_vm._v(\"\\n              Entire Balance\\n            \")]\n                )\n              ]),\n              _c(\"div\", { staticClass: \"the-form amount-number\" }, [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"validate\",\n                      rawName: \"v-validate\",\n                      value: \"min_value:0\",\n                      expression: \"'min_value:0'\"\n                    },\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.toValue,\n                      expression: \"toValue\"\n                    }\n                  ],\n                  attrs: {\n                    type: \"number\",\n                    placeholder: \"Amount\",\n                    min: \"0\",\n                    name: \"value\",\n                    step: \"any\"\n                  },\n                  domProps: { value: _vm.toValue },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.toValue = $event.target.value\n                    }\n                  }\n                }),\n                _c(\"i\", {\n                  class: [\n                    !_vm.isValidAmount.valid || _vm.errors.has(\"value\")\n                      ? \"not-good\"\n                      : \"\",\n                    \"fa fa-check-circle good-button\"\n                  ],\n                  attrs: { \"aria-hidden\": \"true\" }\n                })\n              ]),\n              !_vm.isValidAmount.valid || _vm.errors.has(\"value\")\n                ? _c(\"div\", { staticClass: \"error-message-container\" }, [\n                    _c(\"p\", [_vm._v(_vm._s(_vm.isValidAmount.msg))])\n                  ])\n                : _vm._e()\n            ])\n          ]),\n          _c(\"div\", { staticClass: \"to-address\" }, [\n            _c(\"div\", { staticClass: \"title\" }, [\n              _c(\n                \"h4\",\n                [\n                  _vm._v(\n                    \"\\n            \" +\n                      _vm._s(_vm.$t(\"interface.sendTxToAddr\")) +\n                      \"\\n            \"\n                  ),\n                  _c(\"blockie\", {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: _vm.isValidAddress,\n                        expression: \"isValidAddress\"\n                      }\n                    ],\n                    staticClass: \"blockie-image\",\n                    attrs: {\n                      address: _vm.hexAddress,\n                      size: 8,\n                      scale: 16,\n                      width: \"32px\",\n                      height: \"32px\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"p\",\n                {\n                  staticClass: \"copy-button prevent-user-select\",\n                  on: {\n                    click: function($event) {\n                      return _vm.copyToClipboard(\"address\")\n                    }\n                  }\n                },\n                [\n                  _vm._v(\n                    \"\\n            \" +\n                      _vm._s(_vm.$t(\"common.copy\")) +\n                      \"\\n          \"\n                  )\n                ]\n              )\n            ]),\n            _c(\"div\", { staticClass: \"the-form address-block\" }, [\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"ens-resolver\",\n                    rawName: \"v-ens-resolver\",\n                    value: \"address\",\n                    expression: \"'address'\"\n                  },\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.address,\n                    expression: \"address\"\n                  }\n                ],\n                ref: \"address\",\n                attrs: { type: \"text\", name: \"name\", autocomplete: \"off\" },\n                domProps: { value: _vm.address },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.address = $event.target.value\n                  }\n                }\n              }),\n              _c(\"i\", {\n                class: [\n                  _vm.isValidAddress && _vm.hexAddress.length !== 0\n                    ? \"\"\n                    : \"not-good\",\n                  \"fa fa-check-circle good-button\"\n                ],\n                attrs: { \"aria-hidden\": \"true\" }\n              })\n            ])\n          ]),\n          _c(\"div\", { staticClass: \"tx-fee\" }, [\n            _c(\"div\", { staticClass: \"title\" }, [\n              _c(\"h4\", [\n                _vm._v(\n                  \"\\n            \" +\n                    _vm._s(_vm.$t(\"common.txFee\")) +\n                    \"\\n          \"\n                )\n              ]),\n              _c(\n                \"p\",\n                {\n                  staticClass: \"copy-button prevent-user-select\",\n                  on: { click: _vm.openSettings }\n                },\n                [\n                  _vm._v(\n                    \"\\n            \" +\n                      _vm._s(_vm.$t(\"common.edit\")) +\n                      \"\\n          \"\n                  )\n                ]\n              )\n            ]),\n            _c(\"div\", { staticClass: \"fee-value\" }, [\n              _c(\"div\", { staticClass: \"gwei\" }, [\n                _vm._v(\n                  \"\\n            \" +\n                    _vm._s(_vm.gasPrice) +\n                    \" Gwei\\n            \"\n                )\n              ]),\n              _c(\n                \"div\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.network.type.name === \"ETH\",\n                      expression: \"network.type.name === 'ETH'\"\n                    }\n                  ],\n                  staticClass: \"usd\"\n                },\n                [\n                  _vm._v(\n                    \"\\n            Cost \" +\n                      _vm._s(_vm.txFeeEth) +\n                      \" ETH = $\" +\n                      _vm._s(_vm.convert) +\n                      \"\\n          \"\n                  )\n                ]\n              )\n            ])\n          ])\n        ])\n      ]),\n      _c(\"div\", { staticClass: \"send-form advanced\" }, [\n        _c(\"div\", { staticClass: \"advanced-content\" }, [\n          _c(\"div\", { staticClass: \"toggle-button-container\" }, [\n            _c(\"h4\", [_vm._v(_vm._s(_vm.$t(\"common.advanced\")))]),\n            _c(\"div\", { staticClass: \"toggle-button\" }, [\n              _c(\"span\", [_vm._v(_vm._s(_vm.$t(\"interface.dataGas\")))]),\n              _c(\"div\", { staticClass: \"sliding-switch-white\" }, [\n                _c(\"label\", { staticClass: \"switch\" }, [\n                  _c(\"input\", {\n                    attrs: { type: \"checkbox\" },\n                    on: {\n                      click: function($event) {\n                        _vm.advancedExpand = !_vm.advancedExpand\n                      }\n                    }\n                  }),\n                  _c(\"span\", { staticClass: \"slider round\" })\n                ])\n              ])\n            ])\n          ]),\n          _c(\n            \"div\",\n            {\n              staticClass: \"input-container\",\n              class: _vm.advancedExpand && \"input-container-open\"\n            },\n            [\n              _c(\"div\", { staticClass: \"margin-container\" }, [\n                _c(\n                  \"div\",\n                  {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: !_vm.isToken,\n                        expression: \"!isToken\"\n                      }\n                    ],\n                    staticClass: \"the-form user-input\"\n                  },\n                  [\n                    _c(\"p\", [_vm._v(\"Add Data\")]),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.toData,\n                          expression: \"toData\"\n                        }\n                      ],\n                      attrs: {\n                        type: \"text\",\n                        placeholder: \"Add Data (e.g. 0x7834f874g298hf298h234f)\",\n                        autocomplete: \"off\"\n                      },\n                      domProps: { value: _vm.toData },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.toData = $event.target.value\n                        }\n                      }\n                    }),\n                    _c(\"i\", {\n                      class: [\n                        _vm.isValidData ? \"\" : \"not-good\",\n                        \"fa fa-check-circle good-button\"\n                      ],\n                      attrs: { \"aria-hidden\": \"true\" }\n                    })\n                  ]\n                ),\n                _c(\"div\", { staticClass: \"the-form user-input\" }, [\n                  _c(\"p\", [\n                    _vm._v(\n                      _vm._s(_vm._f(\"capitalize\")(_vm.$t(\"common.gasLimit\")))\n                    )\n                  ]),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.gasLimit,\n                        expression: \"gasLimit\"\n                      }\n                    ],\n                    attrs: {\n                      placeholder: _vm.$t(\"common.gasLimit\"),\n                      type: \"number\",\n                      min: \"0\",\n                      name: \"\"\n                    },\n                    domProps: { value: _vm.gasLimit },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.gasLimit = $event.target.value\n                      }\n                    }\n                  }),\n                  _c(\"i\", {\n                    class: [\n                      _vm.isValidGasLimit ? \"\" : \"not-good\",\n                      \"fa fa-check-circle good-button\"\n                    ],\n                    attrs: { \"aria-hidden\": \"true\" }\n                  })\n                ])\n              ])\n            ]\n          )\n        ])\n      ]),\n      _c(\n        \"div\",\n        { staticClass: \"submit-button-container\" },\n        [\n          _c(\n            \"div\",\n            {\n              class: [\n                _vm.validInputs ? \"\" : \"disabled\",\n                \"submit-button large-round-button-green-filled\"\n              ],\n              on: { click: _vm.submitTransaction }\n            },\n            [_vm._v(\"\\n      \" + _vm._s(_vm.$t(\"interface.sendTx\")) + \"\\n    \")]\n          ),\n          _c(\"interface-bottom-text\", {\n            attrs: {\n              \"link-text\": _vm.$t(\"interface.helpCenter\"),\n              question: _vm.$t(\"interface.haveIssues\"),\n              link: \"https://kb.myetherwallet.com\"\n            }\n          })\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}