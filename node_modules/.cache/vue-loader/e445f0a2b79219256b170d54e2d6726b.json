{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/components/IssueLogModal/IssueLogModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/components/IssueLogModal/IssueLogModal.vue","mtime":1574664278262},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/thread-loader/dist/cjs.js","mtime":1574664277654},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js","mtime":1574664275010},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js","mtime":1574664277774}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport StandardButton from '@/components/Buttons/StandardButton';\nimport store from 'store';\n\nexport default {\n  name: 'IssueLogModal',\n  components: {\n    'standard-button': StandardButton\n  },\n  props: {\n    error: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    },\n    resolver: {\n      type: Function,\n      default: () => {}\n    }\n  },\n  data() {\n    return {\n      cancelButtonOptions: {\n        title: 'Cancel',\n        buttonStyle: 'green-border',\n        noMinWidth: true,\n        fullWidth: true\n      },\n      sendButtonOptions: {\n        title: 'Send',\n        buttonStyle: 'green',\n        noMinWidth: true\n      },\n      errorCount: 0,\n      showSkipper: false,\n      neverShow: false\n    };\n  },\n  watch: {\n    neverShow(newVal) {\n      store.set('neverReport', newVal);\n    }\n  },\n  mounted() {\n    const popUpCount = store.get('errorPop') || 0;\n    this.errorCount = popUpCount;\n    if (this.errorCount >= 10) {\n      this.showSkipper = true;\n    }\n  },\n  methods: {\n    sendError(bool) {\n      this.resolver(bool);\n      this.$refs.issuelog.hide();\n    }\n  }\n};\n",{"version":3,"sources":["IssueLogModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"IssueLogModal.vue","sourceRoot":"src/components/IssueLogModal","sourcesContent":["<template>\n  <div class=\"wrap\">\n    <div class=\"modal-container\">\n      <b-modal\n        ref=\"issuelog\"\n        hide-footer\n        hide-header\n        centered\n        class=\"bootstrap-modal nopadding\"\n        static\n        lazy\n      >\n        <div class=\"modal-contents\">\n          <div class=\"modal-header-block\">\n            <h2 class=\"title\">Something went wrong.</h2>\n            <p class=\"sub-text\">\n              Do you want to inform MEW about this error?\n            </p>\n          </div>\n          <div class=\"modal-user-input-block\">\n            <code>\n              {{ JSON.stringify(error) }}\n            </code>\n          </div>\n          <div class=\"modal-button-block\">\n            <standard-button\n              :options=\"cancelButtonOptions\"\n              @click.native=\"sendError(false)\"\n            />\n            <standard-button\n              :options=\"sendButtonOptions\"\n              @click.native=\"sendError(true)\"\n            />\n          </div>\n          <div v-if=\"showSkipper\" class=\"button-block\">\n            <div class=\"checkbox-container\">\n              <label for=\"terms\" @click=\"neverShow = !neverShow\">\n                <span :class=\"[neverShow ? 'enable' : '', 'custom-marker']\">\n                  <i v-if=\"neverShow\" class=\"fa fa-check\" />\n                </span>\n                <input name=\"terms\" type=\"checkbox\" /> Never Show again\n              </label>\n            </div>\n          </div>\n        </div>\n\n        <!-- .modal-contents -->\n      </b-modal>\n    </div>\n    <!-- .modal-container -->\n  </div>\n  <!-- .wrap -->\n</template>\n\n<script>\nimport StandardButton from '@/components/Buttons/StandardButton';\nimport store from 'store';\n\nexport default {\n  name: 'IssueLogModal',\n  components: {\n    'standard-button': StandardButton\n  },\n  props: {\n    error: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    },\n    resolver: {\n      type: Function,\n      default: () => {}\n    }\n  },\n  data() {\n    return {\n      cancelButtonOptions: {\n        title: 'Cancel',\n        buttonStyle: 'green-border',\n        noMinWidth: true,\n        fullWidth: true\n      },\n      sendButtonOptions: {\n        title: 'Send',\n        buttonStyle: 'green',\n        noMinWidth: true\n      },\n      errorCount: 0,\n      showSkipper: false,\n      neverShow: false\n    };\n  },\n  watch: {\n    neverShow(newVal) {\n      store.set('neverReport', newVal);\n    }\n  },\n  mounted() {\n    const popUpCount = store.get('errorPop') || 0;\n    this.errorCount = popUpCount;\n    if (this.errorCount >= 10) {\n      this.showSkipper = true;\n    }\n  },\n  methods: {\n    sendError(bool) {\n      this.resolver(bool);\n      this.$refs.issuelog.hide();\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'IssueLogModal.scss';\n</style>\n"]}]}