{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/components/StandardDropdown/StandardDropdown.vue?vue&type=style&index=0&id=a6b7fee2&lang=scss&scoped=true&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/components/StandardDropdown/StandardDropdown.vue","mtime":1574664278266},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/css-loader/index.js","mtime":1574664275862},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1574664277774},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/postcss-loader/src/index.js","mtime":1574664277114},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/sass-loader/dist/cjs.js","mtime":1574664277374},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js","mtime":1574664277774}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import 'StandardDropdown.scss';\n",{"version":3,"sources":["StandardDropdown.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0GA","file":"StandardDropdown.vue","sourceRoot":"src/components/StandardDropdown","sourcesContent":["<template>\n  <div class=\"standard-dropdown\">\n    <div class=\"wrap\">\n      <div class=\"dropdown-button\" @click=\"dropdownOpen\">\n        <p v-if=\"chosenValue !== ''\">{{ chosenValue }}</p>\n        <p v-if=\"chosenValue === ''\" class=\"placeholder\">{{ placeholder }}</p>\n        <i aria-hidden=\"true\" class=\"fa fa-angle-down\"></i>\n      </div>\n      <div v-if=\"open\">\n        <div class=\"dropdown-search-container\">\n          <input v-model=\"search\" :placeholder=\"$t('interface.search')\" />\n          <i class=\"fa fa-search\" />\n        </div>\n        <ul class=\"dropdown-list\">\n          <li\n            v-for=\"(entry, idx) in localOptions\"\n            :key=\"idx\"\n            @click=\"setSelected(entry)\"\n          >\n            {{ displayName(entry) }}\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    options: {\n      type: Array,\n      default: function() {\n        return [];\n      }\n    },\n    optionDisplayKey: {\n      type: String,\n      default: ''\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    },\n    optionValueKey: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      chosenValue: '',\n      open: false,\n      search: '',\n      localOptions: this.options\n    };\n  },\n  computed: {},\n  watch: {\n    search(newVal) {\n      if (newVal !== '') {\n        this.localOptions = this.options.filter(curr => {\n          if (\n            this.displayName(curr)\n              .toLowerCase()\n              .includes(newVal.toLowerCase()) ||\n            this.displayName(curr)\n              .toLowerCase()\n              .includes(newVal.toLowerCase())\n          ) {\n            return curr;\n          }\n        });\n      } else {\n        this.localOptions = [];\n        this.options.forEach(curr => this.localOptions.push(curr));\n      }\n    }\n  },\n  methods: {\n    dropdownOpen() {\n      this.open = !this.open;\n      this.$emit('opened', this.open);\n    },\n    setSelected(val) {\n      this.chosenValue = this.displayName(val);\n      this.$emit('selection', this.optionValue(val));\n      this.dropdownOpen();\n    },\n    displayName(val) {\n      if (this.optionDisplayKey !== '') {\n        return val[this.optionDisplayKey];\n      }\n      return val;\n    },\n    optionValue(val) {\n      if (this.optionValueKey !== '') {\n        return val[this.optionValueKey];\n      }\n      return val;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'StandardDropdown.scss';\n</style>\n"]}]}