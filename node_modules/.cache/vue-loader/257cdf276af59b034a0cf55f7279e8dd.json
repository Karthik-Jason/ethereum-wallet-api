{"remainingRequest":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/layouts/InterfaceLayout/containers/SendOfflineContainer/components/SignedTxModal/SignedTxModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/layouts/InterfaceLayout/containers/SendOfflineContainer/components/SignedTxModal/SignedTxModal.vue","mtime":1573477612052},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'SignedTxModal',\n  props: {\n    signedTx: {\n      type: String,\n      default: ''\n    },\n    rawTx: {\n      type: Object,\n      default: function() {\n        return {};\n      }\n    },\n    pathUpdate: {\n      type: Function,\n      default: function() {}\n    }\n  },\n  data() {\n    return {\n      showRaw: false,\n      jsonFile: '',\n      jsonFileName: `signedTransactionObject-${+new Date()}.json`\n    };\n  },\n  watch: {\n    signedTx(newVal) {\n      const parsedVal = JSON.parse(newVal);\n      const rawTx = this.rawTx;\n      delete rawTx['generateOnly'];\n      const txObj = Object.assign({}, parsedVal.tx, rawTx);\n      delete parsedVal['tx'];\n      parsedVal['tx'] = txObj;\n\n      const string = JSON.stringify(parsedVal);\n      const blob = new Blob([string], {\n        type: 'mime'\n      });\n      this.jsonFileName = `signedTransactionObject-${+new Date()}.json`;\n      this.jsonFile = window.URL.createObjectURL(blob);\n    }\n  },\n  methods: {\n    copyAndContinue() {\n      this.$refs.signedTxInput.select();\n      document.execCommand('copy');\n      this.$refs.signedTx.hide();\n    }\n  }\n};\n",{"version":3,"sources":["SignedTxModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SignedTxModal.vue","sourceRoot":"src/layouts/InterfaceLayout/containers/SendOfflineContainer/components/SignedTxModal","sourcesContent":["<template>\n  <b-modal\n    ref=\"signedTx\"\n    :title=\"$t('interface.signedTx')\"\n    hide-footer\n    class=\"bootstrap-modal signed-tx-modal\"\n    static\n    lazy\n  >\n    <div class=\"d-block\">\n      <div class=\"title-block\">\n        <h4 class=\"block-title\">{{ $t('interface.signedTx') }}</h4>\n      </div>\n      <div class=\"signed-tx-container\">\n        <code>{{ JSON.parse(signedTx).rawTransaction }}</code>\n        <input\n          ref=\"signedTxInput\"\n          :value=\"JSON.parse(signedTx).rawTransaction\"\n          style=\"position: absolute; top: 0; opacity: 0;\"\n          autocomplete=\"off\"\n        />\n      </div>\n      <div class=\"scan-download-container\">\n        <h4 class=\"block-title\">Scan QR code</h4>\n        <div v-if=\"signedTx !== ''\" class=\"scan-download-items\">\n          <qrcode\n            :value=\"JSON.parse(signedTx).rawTransaction\"\n            :options=\"{ size: 200 }\"\n          />or <a :href=\"jsonFile\" :download=\"jsonFileName\">Download JSON</a>\n        </div>\n      </div>\n      <div class=\"raw\">\n        <div class=\"title-block\">\n          <h4 class=\"block-title\">{{ $t('interface.raw') }}</h4>\n          <div class=\"sliding-switch-white\">\n            <label class=\"switch\">\n              <input type=\"checkbox\" @click=\"showRaw = !showRaw\" />\n              <span class=\"slider round\" />\n            </label>\n          </div>\n        </div>\n        <div v-if=\"showRaw\" class=\"raw-tx-container\">\n          <code>{{ rawTx }}</code>\n        </div>\n      </div>\n    </div>\n    <div class=\"button-container\">\n      <b-btn\n        class=\"mid-round-button-green-filled close-button\"\n        @click=\"copyAndContinue\"\n        >{{ $t('interface.copyAndCont') }}</b-btn\n      >\n    </div>\n  </b-modal>\n</template>\n\n<script type=\"text/javascript\">\nexport default {\n  name: 'SignedTxModal',\n  props: {\n    signedTx: {\n      type: String,\n      default: ''\n    },\n    rawTx: {\n      type: Object,\n      default: function() {\n        return {};\n      }\n    },\n    pathUpdate: {\n      type: Function,\n      default: function() {}\n    }\n  },\n  data() {\n    return {\n      showRaw: false,\n      jsonFile: '',\n      jsonFileName: `signedTransactionObject-${+new Date()}.json`\n    };\n  },\n  watch: {\n    signedTx(newVal) {\n      const parsedVal = JSON.parse(newVal);\n      const rawTx = this.rawTx;\n      delete rawTx['generateOnly'];\n      const txObj = Object.assign({}, parsedVal.tx, rawTx);\n      delete parsedVal['tx'];\n      parsedVal['tx'] = txObj;\n\n      const string = JSON.stringify(parsedVal);\n      const blob = new Blob([string], {\n        type: 'mime'\n      });\n      this.jsonFileName = `signedTransactionObject-${+new Date()}.json`;\n      this.jsonFile = window.URL.createObjectURL(blob);\n    }\n  },\n  methods: {\n    copyAndContinue() {\n      this.$refs.signedTxInput.select();\n      document.execCommand('copy');\n      this.$refs.signedTx.hide();\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import 'SignedTxModal.scss';\n</style>\n"]}]}