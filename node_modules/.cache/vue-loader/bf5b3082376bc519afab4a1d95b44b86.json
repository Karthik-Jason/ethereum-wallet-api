{"remainingRequest":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/dapps/ScheduleTransaction/containers/ScheduleView.vue?vue&type=template&id=03e9342f&scoped=true&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/dapps/ScheduleTransaction/containers/ScheduleView.vue","mtime":1573477611660},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"schedule-view-container\" }, [\n    _c(\"h3\", { staticClass: \"page-title\" }, [_vm._v(\"Schedule a transaction\")]),\n    _c(\"div\", { staticClass: \"schedule-view-content\" }, [\n      _c(\n        \"div\",\n        { staticClass: \"schedule-view-form-container\" },\n        [\n          _c(\n            \"b-container\",\n            [\n              _c(\n                \"b-row\",\n                [\n                  _c(\"b-col\", { attrs: { cols: \"12\", md: \"4\" } }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"scheduling-currency-picker\" },\n                      [\n                        _c(\"div\", { staticClass: \"input-title\" }, [\n                          _vm._v(_vm._s(_vm.$t(\"interface.sendTxType\")))\n                        ]),\n                        _c(\"currency-picker\", {\n                          attrs: {\n                            currency: _vm.tokensWithBalance,\n                            page: \"sendEgasAmountthAndTokens\",\n                            token: true\n                          },\n                          on: {\n                            selectedCurrency: function($event) {\n                              _vm.selectedCurrency = $event\n                            }\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ]),\n                  _c(\n                    \"b-col\",\n                    { attrs: { cols: \"12\", md: \"8\" } },\n                    [\n                      _c(\"standard-input\", {\n                        attrs: { options: _vm.amountInputOptions() },\n                        on: {\n                          changedValue: function($event) {\n                            _vm.amount = $event\n                          }\n                        }\n                      }),\n                      _c(\n                        \"div\",\n                        {\n                          directives: [\n                            {\n                              name: \"show\",\n                              rawName: \"v-show\",\n                              value: !_vm.isValidAmount,\n                              expression: \"!isValidAmount\"\n                            }\n                          ],\n                          staticClass: \"text-danger\"\n                        },\n                        [\n                          _vm._v(\n                            \"\\n              Amount higher than balance\\n            \"\n                          )\n                        ]\n                      ),\n                      _c(\n                        \"div\",\n                        {\n                          directives: [\n                            {\n                              name: \"show\",\n                              rawName: \"v-show\",\n                              value: !_vm.hasEnoughEthToSchedule,\n                              expression: \"!hasEnoughEthToSchedule\"\n                            }\n                          ],\n                          staticClass: \"text-danger\"\n                        },\n                        [\n                          _vm._v(\n                            \"\\n              Not enough ETH on account to schedule\\n            \"\n                          )\n                        ]\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\"div\", { staticClass: \"to-address\" }, [\n                _c(\"div\", { staticClass: \"title input-title\" }, [\n                  _c(\n                    \"h4\",\n                    [\n                      _vm._v(\"\\n              To Address\\n              \"),\n                      _c(\"blockie\", {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value: _vm.isValidAddress,\n                            expression: \"isValidAddress\"\n                          }\n                        ],\n                        staticClass: \"blockie-image\",\n                        attrs: {\n                          address: _vm.hexAddress,\n                          size: 8,\n                          scale: 16,\n                          width: \"32px\",\n                          height: \"32px\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"p\",\n                    {\n                      staticClass: \"copy-button prevent-user-select\",\n                      on: {\n                        click: function($event) {\n                          return _vm.copyToClipboard(\"address\")\n                        }\n                      }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n              \" +\n                          _vm._s(_vm.$t(\"common.copy\")) +\n                          \"\\n            \"\n                      )\n                    ]\n                  )\n                ]),\n                _c(\"div\", { staticClass: \"the-form address-block\" }, [\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"ens-resolver\",\n                        rawName: \"v-ens-resolver\",\n                        value: \"address\",\n                        expression: \"'address'\"\n                      },\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.address,\n                        expression: \"address\"\n                      }\n                    ],\n                    ref: \"address\",\n                    attrs: { type: \"text\", name: \"name\", autocomplete: \"off\" },\n                    domProps: { value: _vm.address },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.address = $event.target.value\n                      }\n                    }\n                  }),\n                  _c(\"i\", {\n                    class: [\n                      _vm.isValidAddress && _vm.hexAddress.length !== 0\n                        ? \"\"\n                        : \"not-good\",\n                      \"fa fa-check-circle good-button\"\n                    ],\n                    attrs: { \"aria-hidden\": \"true\" }\n                  })\n                ])\n              ]),\n              _c(\"hr\"),\n              _c(\n                \"div\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.selectedMode === _vm.supportedModes[1],\n                      expression: \"selectedMode === supportedModes[1]\"\n                    }\n                  ]\n                },\n                [\n                  _c(\"standard-input\", {\n                    attrs: { options: _vm.blockNumberInputOptions() },\n                    on: {\n                      changedValue: function($event) {\n                        _vm.selectedBlockNumber = $event\n                      }\n                    }\n                  }),\n                  _c(\n                    \"div\",\n                    {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: !_vm.isValidBlockNumber,\n                          expression: \"!isValidBlockNumber\"\n                        }\n                      ],\n                      staticClass: \"text-danger\"\n                    },\n                    [\n                      _vm._v(\n                        \"\\n            Should be at least\\n            \" +\n                          _vm._s(_vm.supportedModes[1].executionWindow.min) +\n                          \" blocks in the future\\n          \"\n                      )\n                    ]\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"b-row\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.selectedMode === _vm.supportedModes[0],\n                      expression: \"selectedMode === supportedModes[0]\"\n                    }\n                  ]\n                },\n                [\n                  _c(\"b-col\", { attrs: { cols: \"12\", md: \"6\" } }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"datetime-picker-container\" },\n                      [\n                        _c(\"div\", { staticClass: \"input-title\" }, [\n                          _vm._v(\"Date & Time\")\n                        ]),\n                        _c(\"datetime-picker\", {\n                          staticClass: \"theme-mew\",\n                          attrs: {\n                            \"min-datetime\": _vm.now.toISOString(),\n                            \"value-zone\": _vm.selectedTimeZone,\n                            zone: _vm.selectedTimeZone,\n                            type: \"datetime\"\n                          },\n                          model: {\n                            value: _vm.datetime,\n                            callback: function($$v) {\n                              _vm.datetime = $$v\n                            },\n                            expression: \"datetime\"\n                          }\n                        }),\n                        _c(\n                          \"div\",\n                          {\n                            directives: [\n                              {\n                                name: \"show\",\n                                rawName: \"v-show\",\n                                value: !_vm.isValidDateTime,\n                                expression: \"!isValidDateTime\"\n                              }\n                            ],\n                            staticClass: \"text-danger\"\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                Make sure that the time is at least\\n                \" +\n                                _vm._s(\n                                  _vm.supportedModes[0].executionWindow.min\n                                ) +\n                                \" minutes in the\\n                future\\n              \"\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  ]),\n                  _c(\"b-col\", { attrs: { cols: \"12\", md: \"6\" } }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"timezone-selector\" },\n                      [\n                        _c(\"div\", { staticClass: \"input-title\" }, [\n                          _vm._v(\"Timezone\")\n                        ]),\n                        _c(\"standard-dropdown\", {\n                          attrs: {\n                            options: _vm.timezoneOptions,\n                            placeholder: _vm.selectedTimeZone\n                          },\n                          on: {\n                            selection: function($event) {\n                              _vm.selectedTimeZone = $event\n                            }\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ])\n                ],\n                1\n              ),\n              _c(\"hr\"),\n              _c(\n                \"b-row\",\n                [\n                  _c(\"b-col\", { attrs: { cols: \"12\", sm: \"6\", md: \"6\" } }, [\n                    _c(\n                      \"div\",\n                      {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value: !_vm.advancedExpand,\n                            expression: \"!advancedExpand\"\n                          }\n                        ],\n                        staticClass: \"time-bounty-selector\"\n                      },\n                      [\n                        _c(\n                          \"div\",\n                          {\n                            directives: [\n                              {\n                                name: \"b-tooltip\",\n                                rawName: \"v-b-tooltip.hover\",\n                                modifiers: { hover: true }\n                              }\n                            ],\n                            staticClass: \"input-title\",\n                            attrs: {\n                              title:\n                                \"The amount of ETH you wish to offer to TimeNodes in exchange for execution. The higher the Time Bounty, the likelier your transaction will get executed.\"\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                Time Bounty\\n              \"\n                            )\n                          ]\n                        ),\n                        _c(\n                          \"b-button-group\",\n                          _vm._l(_vm.timeBountyPresets, function(\n                            bounty,\n                            index\n                          ) {\n                            return _c(\n                              \"b-button\",\n                              {\n                                key: index,\n                                class: [\n                                  \"btn-group\",\n                                  bounty === _vm.timeBounty && \"selected\"\n                                ],\n                                on: {\n                                  click: function($event) {\n                                    _vm.timeBounty = bounty\n                                  }\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                  \" +\n                                    _vm._s(bounty) +\n                                    \"\\n                \"\n                                )\n                              ]\n                            )\n                          }),\n                          1\n                        ),\n                        _c(\n                          \"div\",\n                          { staticClass: \"timebounty-gasprice-coverage\" },\n                          [\n                            _vm._v(\n                              \"\\n                Covers up to\\n                \"\n                            ),\n                            _c(\"span\", [\n                              _vm._v(\n                                _vm._s(_vm.estimatedMaximumExecutionGasPrice)\n                              )\n                            ]),\n                            _vm._v(\n                              \" gwei gas\\n                price on future execution\\n              \"\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"div\",\n                      {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value: _vm.advancedExpand,\n                            expression: \"advancedExpand\"\n                          }\n                        ]\n                      },\n                      [\n                        _c(\"standard-input\", {\n                          attrs: {\n                            options: _vm.customTimeBountyInputOptions()\n                          },\n                          on: {\n                            changedValue: function($event) {\n                              _vm.timeBounty = $event\n                            }\n                          }\n                        }),\n                        _c(\n                          \"div\",\n                          {\n                            directives: [\n                              {\n                                name: \"show\",\n                                rawName: \"v-show\",\n                                value: !_vm.isValidTimeBounty,\n                                expression: \"!isValidTimeBounty\"\n                              }\n                            ],\n                            staticClass: \"text-danger\"\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                Please set a bounty of \" +\n                                _vm._s(_vm.minBounty) +\n                                \" or higher\\n              \"\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  ]),\n                  _c(\n                    \"b-col\",\n                    { attrs: { cols: \"12\", sm: \"6\", md: \"3\" } },\n                    [\n                      _c(\"standard-input\", {\n                        staticClass: \"bounty-usd-display\",\n                        attrs: { options: _vm.bountyUsdDisplayOptions() }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"b-col\",\n                    {\n                      staticClass: \"toggle-button-col\",\n                      attrs: { cols: \"12\", sm: \"12\", md: \"3\" }\n                    },\n                    [\n                      _c(\"hr\", { staticClass: \"d-block d-md-none\" }),\n                      _c(\n                        \"div\",\n                        {\n                          staticClass: \"toggle-button-container float-md-right\"\n                        },\n                        [\n                          _c(\"h4\", [_vm._v(\"Advanced\")]),\n                          _c(\"div\", { staticClass: \"toggle-button\" }, [\n                            _c(\"div\", { staticClass: \"sliding-switch-white\" }, [\n                              _c(\"label\", { staticClass: \"switch\" }, [\n                                _c(\"input\", {\n                                  attrs: { type: \"checkbox\" },\n                                  on: {\n                                    click: function($event) {\n                                      _vm.advancedExpand = !_vm.advancedExpand\n                                    }\n                                  }\n                                }),\n                                _c(\"span\", { staticClass: \"slider round\" })\n                              ])\n                            ])\n                          ])\n                        ]\n                      )\n                    ]\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"div\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.advancedExpand,\n                      expression: \"advancedExpand\"\n                    }\n                  ]\n                },\n                [\n                  _c(\n                    \"b-row\",\n                    [\n                      _c(\"b-col\", { attrs: { cols: \"12\", md: \"6\" } }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"mode-container\" },\n                          [\n                            _c(\"div\", { staticClass: \"input-title\" }, [\n                              _vm._v(\"Scheduling mode\")\n                            ]),\n                            _c(\n                              \"b-button-group\",\n                              _vm._l(_vm.supportedModes, function(mode, index) {\n                                return _c(\n                                  \"b-button\",\n                                  {\n                                    key: index,\n                                    class: [\n                                      \"mode-btn\",\n                                      mode === _vm.selectedMode && \"selected\"\n                                    ],\n                                    on: {\n                                      click: function($event) {\n                                        _vm.selectedMode = mode\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n                    \" +\n                                        _vm._s(mode.name) +\n                                        \"\\n                  \"\n                                    )\n                                  ]\n                                )\n                              }),\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ]),\n                      _c(\n                        \"b-col\",\n                        { attrs: { cols: \"12\", md: \"6\" } },\n                        [\n                          _c(\"standard-input\", {\n                            attrs: {\n                              options: _vm.executionWindowInputOptions()\n                            },\n                            on: {\n                              changedValue: function($event) {\n                                _vm.windowSize = $event\n                              }\n                            }\n                          }),\n                          _c(\n                            \"div\",\n                            {\n                              directives: [\n                                {\n                                  name: \"show\",\n                                  rawName: \"v-show\",\n                                  value: !_vm.isValidExecutionWindow,\n                                  expression: \"!isValidExecutionWindow\"\n                                }\n                              ],\n                              staticClass: \"text-danger\"\n                            },\n                            [\n                              _vm._v(\n                                \"\\n                Please set an execution window of\\n                \" +\n                                  _vm._s(_vm.selectedMode.executionWindow.min) +\n                                  \" or higher\\n              \"\n                              )\n                            ]\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\"standard-input\", {\n                    attrs: { options: _vm.requireDepositInputOptions() },\n                    on: {\n                      changedValue: function($event) {\n                        _vm.deposit = $event\n                      }\n                    }\n                  }),\n                  _c(\n                    \"div\",\n                    {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: !_vm.isValidDeposit,\n                          expression: \"!isValidDeposit\"\n                        }\n                      ],\n                      staticClass: \"text-danger\"\n                    },\n                    [_vm._v(\"\\n            Invalid deposit number\\n          \")]\n                  ),\n                  _c(\n                    \"b-row\",\n                    [\n                      _c(\n                        \"b-col\",\n                        { attrs: { cols: \"12\", md: \"4\" } },\n                        [\n                          _c(\"standard-input\", {\n                            attrs: {\n                              options: _vm.futureGasPriceInputOptions()\n                            },\n                            on: {\n                              changedValue: function($event) {\n                                _vm.futureGasPrice = $event\n                              }\n                            }\n                          }),\n                          _c(\n                            \"div\",\n                            {\n                              directives: [\n                                {\n                                  name: \"show\",\n                                  rawName: \"v-show\",\n                                  value: !_vm.isValidFutureGasPrice,\n                                  expression: \"!isValidFutureGasPrice\"\n                                }\n                              ],\n                              staticClass: \"text-danger\"\n                            },\n                            [\n                              _vm._v(\n                                \"\\n                Please set a gas price of \" +\n                                  _vm._s(_vm.minGasPrice) +\n                                  \" or higher\\n              \"\n                              )\n                            ]\n                          )\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"b-col\",\n                        { attrs: { cols: \"12\", md: \"4\" } },\n                        [\n                          _c(\"standard-input\", {\n                            attrs: { options: _vm.gasLimitInputOptions() },\n                            on: {\n                              changedValue: function($event) {\n                                _vm.gasLimit = $event\n                              }\n                            }\n                          }),\n                          _c(\n                            \"div\",\n                            {\n                              directives: [\n                                {\n                                  name: \"show\",\n                                  rawName: \"v-show\",\n                                  value: !_vm.isValidGasLimit,\n                                  expression: \"!isValidGasLimit\"\n                                }\n                              ],\n                              staticClass: \"text-danger\"\n                            },\n                            [\n                              _vm._v(\n                                \"\\n                Please set a gas limit of 0 or higher\\n              \"\n                              )\n                            ]\n                          )\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"b-col\",\n                        { attrs: { cols: \"12\", md: \"4\" } },\n                        [\n                          _c(\"standard-input\", {\n                            attrs: {\n                              options: _vm.futureGasLimitInputOptions()\n                            },\n                            on: {\n                              changedValue: function($event) {\n                                _vm.futureGasLimit = $event\n                              }\n                            }\n                          }),\n                          _c(\n                            \"div\",\n                            {\n                              directives: [\n                                {\n                                  name: \"show\",\n                                  rawName: \"v-show\",\n                                  value: !_vm.isValidFutureGasLimit,\n                                  expression: \"!isValidFutureGasLimit\"\n                                }\n                              ],\n                              staticClass: \"text-danger\"\n                            },\n                            [\n                              _vm._v(\n                                \"\\n                Please set a future gas limit of 0 or higher\\n              \"\n                              )\n                            ]\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  !_vm.isTokenTransfer\n                    ? _c(\"standard-input\", {\n                        attrs: { options: _vm.dataInputOptions() },\n                        on: {\n                          changedValue: function($event) {\n                            _vm.data = $event\n                          }\n                        }\n                      })\n                    : _vm._e(),\n                  _c(\n                    \"div\",\n                    {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: !_vm.isValidData,\n                          expression: \"!isValidData\"\n                        }\n                      ],\n                      staticClass: \"text-danger\"\n                    },\n                    [\n                      _vm._v(\n                        \"\\n            Please provide the data in a hexadecimal format.\\n          \"\n                      )\n                    ]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"div\",\n        { staticClass: \"submit-button-container\" },\n        [\n          _c(\n            \"b-alert\",\n            {\n              staticClass: \"mx-5\",\n              attrs: {\n                show: _vm.isTokenTransfer && _vm.showTokenTransferNotification,\n                variant: \"info\",\n                dismissible: \"\"\n              },\n              on: {\n                dismissed: function($event) {\n                  _vm.showTokenTransferNotification = false\n                }\n              }\n            },\n            [\n              _c(\"strong\", [_vm._v(\"Note:\")]),\n              _vm._v(\n                \" You are scheduling a token transfer. Token\\n        transfers require 2 separate transactions. One for token scheduling\\n        and another one for token transfer approval.\\n      \"\n              )\n            ]\n          ),\n          _c(\n            \"div\",\n            {\n              class: [\n                _vm.validInputs ? \"\" : \"disabled\",\n                \"submit-button large-round-button-green-filled\"\n              ],\n              on: { click: _vm.scheduleTx }\n            },\n            [_vm._v(\"\\n        Schedule Transaction\\n      \")]\n          )\n        ],\n        1\n      )\n    ]),\n    _c(\"a\", {\n      staticClass: \"eac-logo\",\n      attrs: {\n        href:\n          \"https://blog.chronologic.network/announcing-the-ethereum-alarm-clock-chronologic-partnership-b3d7545bea3b\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\"\n      }\n    })\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}