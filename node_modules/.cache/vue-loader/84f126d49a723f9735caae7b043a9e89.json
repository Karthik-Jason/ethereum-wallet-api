{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/containers/ConfirmationContainer/components/ConfirmModal/ConfirmModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/containers/ConfirmationContainer/components/ConfirmModal/ConfirmModal.vue","mtime":1573477611636},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport AddressBlock from '../AddressBlock';\nimport { mapState } from 'vuex';\nimport StandardButton from '@/components/Buttons/StandardButton';\nimport parseTokensData from '@/helpers/parseTokensData.js';\n\nexport default {\n  components: {\n    'address-block': AddressBlock,\n    'standard-button': StandardButton\n  },\n  props: {\n    confirmSendTx: {\n      type: Function,\n      default: function() {}\n    },\n    fee: {\n      type: String,\n      default: ''\n    },\n    signedTx: {\n      type: String,\n      default: ''\n    },\n    data: {\n      type: String,\n      default: '0x'\n    },\n    from: {\n      type: String,\n      default: ''\n    },\n    gas: {\n      type: String,\n      default: ''\n    },\n    gasPrice: {\n      type: Number,\n      default: 0\n    },\n    nonce: {\n      type: String,\n      default: ''\n    },\n    to: {\n      type: String,\n      default: ''\n    },\n    value: {\n      type: String,\n      default: ''\n    },\n    isHardwareWallet: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      modalDetailInformation: false,\n      transactionSigned: false,\n      tokenTransferTo: '',\n      tokenTransferVal: '',\n      tokenSymbol: '',\n      buttonSendTx: {\n        title: 'Confirm and Send',\n        buttonStyle: 'green',\n        mobileFullWidth: true,\n        helpCenter: true\n      }\n    };\n  },\n  computed: {\n    ...mapState(['web3', 'network']),\n    signedTransaction() {\n      if (this.signedMessage) {\n        return this.signedMessage;\n      } else if (this.isHardwareWallet) {\n        return this.$t('confirmation.approveOnDevice');\n      }\n      return '';\n    }\n  },\n  watch: {\n    data(newVal) {\n      this.parseData(newVal);\n    }\n  },\n  mounted() {\n    if (this.data !== '0x') {\n      this.parseData();\n    }\n  },\n  methods: {\n    sendTx() {\n      if (this.signedTx !== '') {\n        this.confirmSendTx();\n      }\n    },\n    parseData(val) {\n      const localVal = val ? val : this.data;\n      const tokenInfo = parseTokensData(\n        localVal,\n        this.to,\n        this.web3,\n        this.network.type.tokens,\n        this.network.type.name\n      );\n      this.tokenTransferTo = tokenInfo.tokenTransferTo;\n      this.tokenTransferVal = tokenInfo.tokenTransferVal;\n      this.tokenSymbol = tokenInfo.tokenSymbol;\n    }\n  }\n};\n",{"version":3,"sources":["ConfirmModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ConfirmModal.vue","sourceRoot":"src/containers/ConfirmationContainer/components/ConfirmModal","sourcesContent":["<template>\n  <div class=\"modal-container\">\n    <b-modal\n      ref=\"confirmation\"\n      hide-footer\n      centered\n      class=\"bootstrap-modal-wide confirmation-modal nopadding\"\n      title=\"Confirmation\"\n      static\n      lazy\n    >\n      <div class=\"modal-content qrcode-modal\">\n        <div class=\"tx-info\">\n          <address-block\n            :currency=\"network.type.currencyName\"\n            :icon=\"network.type.icon\"\n            :address=\"from\"\n            :value=\"value\"\n            :token-transfer-val=\"tokenTransferVal\"\n            :token-symbol=\"tokenSymbol\"\n            direction=\"from\"\n          />\n          <div v-show=\"to !== '' && to !== undefined\" class=\"direction\">\n            <img src=\"~@/assets/images/icons/right-arrow.svg\" alt />\n          </div>\n          <address-block\n            v-show=\"to !== '' && to !== undefined\"\n            :currency=\"network.type.currencyName\"\n            :icon=\"network.type.icon\"\n            :address=\"to\"\n            :token-transfer-to=\"tokenTransferTo\"\n            :token-transfer-val=\"tokenTransferVal\"\n            :token-symbol=\"tokenSymbol\"\n            :value=\"value\"\n            direction=\"to\"\n          />\n        </div>\n        <div class=\"detail-info\">\n          <div class=\"info\">\n            <h4>Detail Information</h4>\n            <div class=\"sliding-switch-white\">\n              <label class=\"switch\">\n                <input\n                  type=\"checkbox\"\n                  @click=\"modalDetailInformation = !modalDetailInformation\"\n                />\n                <span class=\"slider round\" />\n              </label>\n            </div>\n          </div>\n          <div\n            :class=\"modalDetailInformation && 'expended-info-open'\"\n            class=\"expended-info\"\n          >\n            <div class=\"padding-container\">\n              <div class=\"grid-block\">\n                <p>{{ $t('interface.network') }}</p>\n                <p>{{ network.type.name }} by {{ network.service }}</p>\n              </div>\n              <div class=\"grid-block\">\n                <p>{{ $t('common.gasLimit') }}</p>\n                <p>{{ gas }} wei</p>\n              </div>\n              <div class=\"grid-block\">\n                <p>{{ $t('common.gasPrice') }}</p>\n                <p>{{ gasPrice }} gwei</p>\n              </div>\n              <div class=\"grid-block\">\n                <p>{{ $t('common.txFee') }}</p>\n                <p>{{ fee }} {{ network.type.currencyName }}</p>\n              </div>\n              <div class=\"grid-block\">\n                <p>Nonce</p>\n                <p>{{ nonce }}</p>\n              </div>\n              <div class=\"grid-block\">\n                <p>{{ $t('common.data') }}</p>\n                <p>{{ data }}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"submit-button-container\">\n          <standard-button\n            :options=\"buttonSendTx\"\n            :button-disabled=\"signedTx !== '' ? false : true\"\n            @click.native=\"sendTx\"\n          />\n        </div>\n      </div>\n    </b-modal>\n  </div>\n</template>\n\n<script>\nimport AddressBlock from '../AddressBlock';\nimport { mapState } from 'vuex';\nimport StandardButton from '@/components/Buttons/StandardButton';\nimport parseTokensData from '@/helpers/parseTokensData.js';\n\nexport default {\n  components: {\n    'address-block': AddressBlock,\n    'standard-button': StandardButton\n  },\n  props: {\n    confirmSendTx: {\n      type: Function,\n      default: function() {}\n    },\n    fee: {\n      type: String,\n      default: ''\n    },\n    signedTx: {\n      type: String,\n      default: ''\n    },\n    data: {\n      type: String,\n      default: '0x'\n    },\n    from: {\n      type: String,\n      default: ''\n    },\n    gas: {\n      type: String,\n      default: ''\n    },\n    gasPrice: {\n      type: Number,\n      default: 0\n    },\n    nonce: {\n      type: String,\n      default: ''\n    },\n    to: {\n      type: String,\n      default: ''\n    },\n    value: {\n      type: String,\n      default: ''\n    },\n    isHardwareWallet: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      modalDetailInformation: false,\n      transactionSigned: false,\n      tokenTransferTo: '',\n      tokenTransferVal: '',\n      tokenSymbol: '',\n      buttonSendTx: {\n        title: 'Confirm and Send',\n        buttonStyle: 'green',\n        mobileFullWidth: true,\n        helpCenter: true\n      }\n    };\n  },\n  computed: {\n    ...mapState(['web3', 'network']),\n    signedTransaction() {\n      if (this.signedMessage) {\n        return this.signedMessage;\n      } else if (this.isHardwareWallet) {\n        return this.$t('confirmation.approveOnDevice');\n      }\n      return '';\n    }\n  },\n  watch: {\n    data(newVal) {\n      this.parseData(newVal);\n    }\n  },\n  mounted() {\n    if (this.data !== '0x') {\n      this.parseData();\n    }\n  },\n  methods: {\n    sendTx() {\n      if (this.signedTx !== '') {\n        this.confirmSendTx();\n      }\n    },\n    parseData(val) {\n      const localVal = val ? val : this.data;\n      const tokenInfo = parseTokensData(\n        localVal,\n        this.to,\n        this.web3,\n        this.network.type.tokens,\n        this.network.type.name\n      );\n      this.tokenTransferTo = tokenInfo.tokenTransferTo;\n      this.tokenTransferVal = tokenInfo.tokenTransferVal;\n      this.tokenSymbol = tokenInfo.tokenSymbol;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'ConfirmModal.scss';\n</style>\n"]}]}