{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/layouts/InterfaceLayout/components/InterfaceNetwork/InterfaceNetwork.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/layouts/InterfaceLayout/components/InterfaceNetwork/InterfaceNetwork.vue","mtime":1574664278302},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js","mtime":1574664275010},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js","mtime":1574664277774}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport InterfaceNetworkModal from '../InterfaceNetworkModal';\nimport { mapState } from 'vuex';\nimport { WEB3_WALLET } from '@/wallets/bip44/walletTypes';\n\nexport default {\n  components: {\n    'interface-network-modal': InterfaceNetworkModal\n  },\n  props: {\n    blockNumber: {\n      type: Number,\n      default: 0\n    }\n  },\n  data() {\n    return {\n      parsedNetwork: 0,\n      identifier: WEB3_WALLET\n    };\n  },\n  computed: {\n    ...mapState(['network', 'account', 'web3'])\n  },\n  watch: {\n    blockNumber(newVal) {\n      this.parsedNetwork = parseInt(newVal);\n    }\n  },\n  mounted() {\n    if (this.blockNumber && this.blockNumber !== undefined) {\n      this.parsedNetwork = parseInt(this.blockNumber);\n    }\n  },\n  methods: {\n    networkModalOpen() {\n      if (this.account.identifier !== this.identifier) {\n        this.$refs.network.$refs.network.show();\n      }\n    }\n  }\n};\n",{"version":3,"sources":["InterfaceNetwork.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"InterfaceNetwork.vue","sourceRoot":"src/layouts/InterfaceLayout/components/InterfaceNetwork","sourcesContent":["<template>\n  <div class=\"info-block-container\">\n    <interface-network-modal ref=\"network\" />\n    <div class=\"info-block network\">\n      <div class=\"block-image\">\n        <div class=\"network-type\">\n          <div class=\"icon-block\">\n            <img :src=\"network.type.icon\" alt class=\"icon\" />\n          </div>\n        </div>\n      </div>\n      <div class=\"block-content\">\n        <div class=\"information-container\">\n          <div class=\"title-and-helper\">\n            <h2>{{ $t('interface.network') }}</h2>\n          </div>\n          <p v-if=\"account.identifier !== identifier\">\n            {{ network.service + '(' + network.type.name + ')' }}\n          </p>\n          <p v-else>{{ 'Web3 Provider' + '(' + network.type.name + ')' }}</p>\n          <p>\n            {{ $t('interface.lastBlock') }}# :\n            <span v-show=\"parsedNetwork !== ''\"> {{ parsedNetwork }}</span>\n            <i v-show=\"parsedNetwork === ''\" class=\"fa fa-spinner fa-spin\" />\n          </p>\n        </div>\n        <div class=\"icon-container\">\n          <button\n            v-if=\"account.identifier !== identifier\"\n            id=\"networkModal\"\n            class=\"change-button\"\n            @click=\"networkModalOpen\"\n          >\n            Change\n          </button>\n          <b-popover\n            content=\"Open Networks\"\n            target=\"networkModal\"\n            placement=\"top\"\n            triggers=\"hover\"\n            title=\"\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport InterfaceNetworkModal from '../InterfaceNetworkModal';\nimport { mapState } from 'vuex';\nimport { WEB3_WALLET } from '@/wallets/bip44/walletTypes';\n\nexport default {\n  components: {\n    'interface-network-modal': InterfaceNetworkModal\n  },\n  props: {\n    blockNumber: {\n      type: Number,\n      default: 0\n    }\n  },\n  data() {\n    return {\n      parsedNetwork: 0,\n      identifier: WEB3_WALLET\n    };\n  },\n  computed: {\n    ...mapState(['network', 'account', 'web3'])\n  },\n  watch: {\n    blockNumber(newVal) {\n      this.parsedNetwork = parseInt(newVal);\n    }\n  },\n  mounted() {\n    if (this.blockNumber && this.blockNumber !== undefined) {\n      this.parsedNetwork = parseInt(this.blockNumber);\n    }\n  },\n  methods: {\n    networkModalOpen() {\n      if (this.account.identifier !== this.identifier) {\n        this.$refs.network.$refs.network.show();\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'InterfaceNetwork.scss';\n</style>\n"]}]}