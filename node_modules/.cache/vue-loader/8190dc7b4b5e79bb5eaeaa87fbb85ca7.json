{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/components/Buttons/StandardButton/StandardButton.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/components/Buttons/StandardButton/StandardButton.vue","mtime":1573477611536},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport CheckBox from '@/components/Buttons/CheckBox';\nimport CustomerSupport from '@/components/CustomerSupport';\n\nexport default {\n  components: {\n    'check-box': CheckBox,\n    'customer-support': CustomerSupport\n  },\n  props: {\n    options: {\n      type: Object,\n      default: function() {\n        return {};\n      }\n    },\n    buttonDisabled: {\n      type: Boolean,\n      default: false\n    },\n    spinner: {\n      type: Boolean,\n      default: false\n    },\n    clickFunction: {\n      type: Function,\n      default: function() {\n        return;\n      }\n    }\n  },\n  data() {\n    return {\n      onBottomOfPage: false,\n      termsAccepted: this.options.acceptTermsCheckBox\n    };\n  },\n  computed: {\n    diableButton() {\n      if (this.options.terms !== undefined && this.options.terms) {\n        return this.termsAccepted;\n      }\n      return this.buttonDisabled;\n    },\n    buttonClass() {\n      switch (this.options.buttonStyle) {\n        case 'white':\n          return 'standard-button__white';\n        case 'white-border':\n          return 'standard-button__white-border';\n        case 'grey':\n          return 'standard-button__grey';\n        case 'grey-border':\n          return 'standard-button__grey-border';\n        case 'red':\n          return 'standard-button__red';\n        case 'green':\n          return 'standard-button__green';\n        case 'green-border':\n          return 'standard-button__green-border';\n        case 'green-noclick':\n          return 'standard-button__green-noclick';\n        case 'green-transparent':\n          return 'standard-button__green-transparent';\n        case 'blue':\n          return 'standard-button__blue';\n        case 'blue-border':\n          return 'standard-button__blue-border';\n        default:\n      }\n    }\n  },\n  beforeMount() {\n    window.addEventListener('scroll', this.onPageScroll);\n  },\n  beforeDestroy() {\n    window.removeEventListener('scroll', this.onPageScroll);\n  },\n  methods: {\n    updateCheckbox(event) {\n      this.termsAccepted = !event;\n    },\n    onPageScroll() {\n      if (\n        window.innerHeight + window.pageYOffset >=\n        document.body.offsetHeight\n      ) {\n        this.onBottomOfPage = true;\n      } else {\n        this.onBottomOfPage = false;\n      }\n    }\n  }\n};\n",{"version":3,"sources":["StandardButton.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"StandardButton.vue","sourceRoot":"src/components/Buttons/StandardButton","sourcesContent":["<template>\n  <div\n    :class=\"{\n      'full-width': options.fullWidth,\n      'mobile-full-width': options.mobileFullWidth,\n      'hide-mobile-button': onBottomOfPage && options.isThisMobileBottomButton\n    }\"\n    class=\"standard-button\"\n  >\n    <div\n      v-if=\"options.terms !== undefined && options.terms\"\n      class=\"accept-terms-Check-Box\"\n    >\n      <check-box\n        :terms=\"true\"\n        class=\"checkbox\"\n        @changeStatus=\"updateCheckbox($event)\"\n      />\n    </div>\n    <div :class=\"buttonClass\">\n      <button\n        v-show=\"spinner\"\n        :disabled=\"diableButton\"\n        :class=\"[\n          options.isThisMobileBottomButton ? 'mobile-bottom-button' : '',\n          options.noMinWidth ? 'no-min-width' : '',\n          options.paddingSmall ? 'padding-small' : ''\n        ]\"\n        class=\"the-button-box\"\n      >\n        <i class=\"fa fa-spin fa-spinner fa-lg\" />\n      </button>\n      <button\n        v-show=\"!spinner\"\n        :disabled=\"diableButton\"\n        :class=\"[\n          options.isThisMobileBottomButton ? 'mobile-bottom-button' : '',\n          options.noMinWidth ? 'no-min-width' : '',\n          options.paddingSmall ? 'padding-small' : ''\n        ]\"\n        class=\"the-button-box\"\n        @click=\"clickFunction\"\n      >\n        {{ options.title }}\n        <i v-show=\"spinner\" class=\"fa fa-spin fa-spinner fa-lg\" />\n        <img\n          v-if=\"options.loadingIcon\"\n          class=\"loading-left\"\n          alt=\"Loading\"\n          src=\"@/assets/images/icons/loading.png\"\n        />\n\n        <img\n          v-if=\"options.rightArrow && options.buttonStyle == 'green'\"\n          class=\"arrow-right\"\n          alt=\"Right arrow\"\n          src=\"@/assets/images/icons/arrow-right.svg\"\n        />\n\n        <img\n          v-if=\"options.rightArrow && options.buttonStyle == 'green-border'\"\n          class=\"arrow-right\"\n          alt=\"Right arrow\"\n          src=\"@/assets/images/icons/arrow-right.svg\"\n        />\n\n        <img\n          v-if=\"options.leftArrow && options.buttonStyle == 'green'\"\n          class=\"arrow-left\"\n          alt=\"Left arrow\"\n          src=\"@/assets/images/icons/arrow-left.svg\"\n        />\n\n        <img\n          v-if=\"options.leftArrow && options.buttonStyle == 'green-border'\"\n          class=\"arrow-left\"\n          alt=\"Left arrow\"\n          src=\"@/assets/images/icons/arrow-green-left.svg\"\n        />\n      </button>\n    </div>\n    <div v-if=\"options.customerSupport\" class=\"customer-support-block\">\n      <customer-support />\n    </div>\n    <div v-if=\"options.helpCenter\" class=\"help-center-block\">\n      <p>\n        Having issues?\n        <a\n          href=\"https://kb.myetherwallet.com/\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n          >Help Center</a\n        >\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport CheckBox from '@/components/Buttons/CheckBox';\nimport CustomerSupport from '@/components/CustomerSupport';\n\nexport default {\n  components: {\n    'check-box': CheckBox,\n    'customer-support': CustomerSupport\n  },\n  props: {\n    options: {\n      type: Object,\n      default: function() {\n        return {};\n      }\n    },\n    buttonDisabled: {\n      type: Boolean,\n      default: false\n    },\n    spinner: {\n      type: Boolean,\n      default: false\n    },\n    clickFunction: {\n      type: Function,\n      default: function() {\n        return;\n      }\n    }\n  },\n  data() {\n    return {\n      onBottomOfPage: false,\n      termsAccepted: this.options.acceptTermsCheckBox\n    };\n  },\n  computed: {\n    diableButton() {\n      if (this.options.terms !== undefined && this.options.terms) {\n        return this.termsAccepted;\n      }\n      return this.buttonDisabled;\n    },\n    buttonClass() {\n      switch (this.options.buttonStyle) {\n        case 'white':\n          return 'standard-button__white';\n        case 'white-border':\n          return 'standard-button__white-border';\n        case 'grey':\n          return 'standard-button__grey';\n        case 'grey-border':\n          return 'standard-button__grey-border';\n        case 'red':\n          return 'standard-button__red';\n        case 'green':\n          return 'standard-button__green';\n        case 'green-border':\n          return 'standard-button__green-border';\n        case 'green-noclick':\n          return 'standard-button__green-noclick';\n        case 'green-transparent':\n          return 'standard-button__green-transparent';\n        case 'blue':\n          return 'standard-button__blue';\n        case 'blue-border':\n          return 'standard-button__blue-border';\n        default:\n      }\n    }\n  },\n  beforeMount() {\n    window.addEventListener('scroll', this.onPageScroll);\n  },\n  beforeDestroy() {\n    window.removeEventListener('scroll', this.onPageScroll);\n  },\n  methods: {\n    updateCheckbox(event) {\n      this.termsAccepted = !event;\n    },\n    onPageScroll() {\n      if (\n        window.innerHeight + window.pageYOffset >=\n        document.body.offsetHeight\n      ) {\n        this.onBottomOfPage = true;\n      } else {\n        this.onBottomOfPage = false;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'StandardButton.scss';\n</style>\n"]}]}