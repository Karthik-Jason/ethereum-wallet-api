{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/dapps/ManageENS/containers/AlreadyOwnedENSContainer/AlreadyOwnedENSContainer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/dapps/ManageENS/containers/AlreadyOwnedENSContainer/AlreadyOwnedENSContainer.vue","mtime":1573477611656},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport InterfaceBottomText from '@/components/InterfaceBottomText';\n\nimport { mapState } from 'vuex';\nexport default {\n  components: {\n    'interface-bottom-text': InterfaceBottomText\n  },\n  props: {\n    labelHash: {\n      type: String,\n      default: ''\n    },\n    nameHash: {\n      type: String,\n      default: ''\n    },\n    owner: {\n      type: String,\n      default: ''\n    },\n    hostName: {\n      type: String,\n      default: ''\n    },\n    tld: {\n      type: String,\n      default: ''\n    },\n    supportedCoins: {\n      type: Object,\n      default: function() {}\n    },\n    resolverMultiCoinSupport: {\n      type: Boolean,\n      default: false\n    },\n    txtRecords: {\n      type: Object,\n      default: function() {}\n    }\n  },\n  computed: {\n    ...mapState(['account']),\n    fullDomainName() {\n      return `${this.hostName}.${this.tld}`;\n    },\n    hasAnyTxt() {\n      for (const i in this.txtRecords) {\n        if (this.txtRecords[i] !== '') {\n          return true;\n        }\n      }\n      return false;\n    }\n  },\n  mounted() {\n    if (this.hostName === '') {\n      this.$router.push('/interface/dapps/manage-ens');\n    }\n  },\n  methods: {\n    manageEns() {\n      this.$router.push('manage');\n    }\n  }\n};\n",{"version":3,"sources":["AlreadyOwnedENSContainer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AlreadyOwnedENSContainer.vue","sourceRoot":"src/dapps/ManageENS/containers/AlreadyOwnedENSContainer","sourcesContent":["<template lang=\"html\">\n  <div class=\"already-owned-container\">\n    <h3>{{ fullDomainName }} {{ $t('dapps.alreadyOwned') }}.</h3>\n    <div class=\"content-container\">\n      <p class=\"label\">{{ $t('dapps.labelHash') }}({{ hostName }}):</p>\n      <p class=\"content\">{{ labelHash }}</p>\n    </div>\n    <div class=\"content-container\">\n      <p class=\"label\">{{ $t('dapps.nameHash') }}({{ fullDomainName }}):</p>\n      <p class=\"content\">{{ nameHash }}</p>\n    </div>\n    <div class=\"content-container\">\n      <p class=\"label\">{{ $t('dapps.owner') }}:</p>\n      <p class=\"content\">{{ owner }}</p>\n    </div>\n    <div v-show=\"resolverMultiCoinSupport\" class=\"content-container\">\n      <h4>{{ $t('dapps.multiCoin') }}:</h4>\n      <div v-for=\"(v, k) in supportedCoins\" v-if=\"v.value\" :key=\"k.id\">\n        <span class=\"currency\">{{ v.symbol }} address: </span>\n        <span class=\"content\">{{ v.value }}</span>\n      </div>\n    </div>\n    <div v-show=\"hasAnyTxt\" class=\"content-container\">\n      <h4>{{ $t('dapps.txtRecord') }}:</h4>\n      <div v-for=\"(value, key) in txtRecords\" v-if=\"value !== ''\" :key=\"key\">\n        <span class=\"currency\">{{ key }}: </span>\n        <span class=\"content\">{{ value }}</span>\n      </div>\n    </div>\n    <div class=\"owner-options\">\n      <button\n        v-if=\"owner.toLowerCase() === account.address.toLowerCase()\"\n        class=\"manage-button\"\n        @click=\"manageEns\"\n      >\n        {{ $t('dapps.manage') }}\n      </button>\n    </div>\n    <interface-bottom-text\n      :link-text=\"$t('interface.helpCenter')\"\n      :question=\"$t('interface.haveIssues')\"\n      link=\"https://kb.myetherwallet.com\"\n    />\n  </div>\n</template>\n\n<script>\nimport InterfaceBottomText from '@/components/InterfaceBottomText';\n\nimport { mapState } from 'vuex';\nexport default {\n  components: {\n    'interface-bottom-text': InterfaceBottomText\n  },\n  props: {\n    labelHash: {\n      type: String,\n      default: ''\n    },\n    nameHash: {\n      type: String,\n      default: ''\n    },\n    owner: {\n      type: String,\n      default: ''\n    },\n    hostName: {\n      type: String,\n      default: ''\n    },\n    tld: {\n      type: String,\n      default: ''\n    },\n    supportedCoins: {\n      type: Object,\n      default: function() {}\n    },\n    resolverMultiCoinSupport: {\n      type: Boolean,\n      default: false\n    },\n    txtRecords: {\n      type: Object,\n      default: function() {}\n    }\n  },\n  computed: {\n    ...mapState(['account']),\n    fullDomainName() {\n      return `${this.hostName}.${this.tld}`;\n    },\n    hasAnyTxt() {\n      for (const i in this.txtRecords) {\n        if (this.txtRecords[i] !== '') {\n          return true;\n        }\n      }\n      return false;\n    }\n  },\n  mounted() {\n    if (this.hostName === '') {\n      this.$router.push('/interface/dapps/manage-ens');\n    }\n  },\n  methods: {\n    manageEns() {\n      this.$router.push('manage');\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'AlreadyOwnedENSContainer.scss';\n</style>\n"]}]}