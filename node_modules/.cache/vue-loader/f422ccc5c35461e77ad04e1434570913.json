{"remainingRequest":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/containers/NotificationsContainer/components/NotificationTypes/NotificationDetails/TransactionDetails.vue?vue&type=style&index=0&id=d164f162&lang=scss&scoped=true&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/containers/NotificationsContainer/components/NotificationTypes/NotificationDetails/TransactionDetails.vue","mtime":1573477611640},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import 'Notification';\n",{"version":3,"sources":["TransactionDetails.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwLA","file":"TransactionDetails.vue","sourceRoot":"src/layouts/ExtensionBrowserAction/containers/ExtensionNotification/components/NotificationTypes/NotificationDetails","sourcesContent":["<template lang=\"html\">\n  <div>\n    <div class=\"notification-header\">{{ $t('header.transactionDetail') }}</div>\n    <div class=\"notification-content\">\n      <ul>\n        <li>\n          <p>{{ $t('header.time') }}:</p>\n          <div class=\"time-date\">\n            <p>{{ timeString(notice) }}</p>\n            <p>{{ dateString(notice) }}</p>\n          </div>\n        </li>\n        <li class=\"notification-type-status\">\n          <p>{{ $t('header.status') }}:</p>\n          <p :class=\"['status', txStatus.class]\">({{ txStatus.text }})</p>\n        </li>\n        <li v-if=\"isTokenTransfer\">\n          <p>{{ $t('header.amount') }}:</p>\n          <p>{{ details.tokenTransferVal }} {{ details.tokenSymbol }}</p>\n        </li>\n        <li v-if=\"!isTokenTransfer\">\n          <p>{{ $t('header.amount') }}:</p>\n          <p>{{ convertToEth(details.amount) }} {{ network.type.name }}</p>\n        </li>\n        <li>\n          <p>{{ $t('common.toAddress') }}:</p>\n          <p>\n            <a\n              :href=\"addressLink(details.tokenTransferTo || details.to)\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              {{ details.tokenTransferTo || details.to }}\n            </a>\n          </p>\n        </li>\n        <li v-if=\"isTokenTransfer\">\n          <p>Via contract:</p>\n          <p>\n            <a\n              :href=\"addressLink(details.to)\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              {{ details.to }}\n            </a>\n          </p>\n        </li>\n        <li>\n          <p>{{ $t('common.gasPrice') }}:</p>\n          <p>{{ convertToGwei(details.gasPrice) }} Gwei</p>\n        </li>\n        <li>\n          <p>{{ $t('common.gasLimit') }}:</p>\n          <p>{{ details.gasLimit }}</p>\n        </li>\n        <li v-if=\"notice.body.gasUsed\">\n          <p>{{ $t('common.txFee') }}:</p>\n          <p>\n            {{ convertToEth(details.gasPrice * details.gasUsed) }}\n            {{ network.type.name }} (${{\n              getFiatValue(details.gasPrice * details.gasUsed)\n            }})\n          </p>\n        </li>\n        <li>\n          <p>{{ $t('header.maxTxFee') }}:</p>\n          <p>\n            {{ convertToEth(details.gasPrice * details.gasLimit) }}\n            {{ network.type.name }} (${{\n              getFiatValue(details.gasPrice * details.gasLimit)\n            }})\n          </p>\n        </li>\n        <li>\n          <p>{{ $t('header.nonce') }}:</p>\n          <p>{{ details.nonce }}</p>\n        </li>\n        <li v-if=\"notice.hash\">\n          <p>{{ $t('header.transactionHash') }}:</p>\n        </li>\n        <li v-if=\"notice.hash\">\n          <p>\n            <a\n              :href=\"hashLink(notice.hash)\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              {{ notice.hash }}\n            </a>\n          </p>\n        </li>\n        <li v-if=\"isError\">\n          <p>{{ $t('header.errorMessage') }}:</p>\n          <p>{{ errorMessage }}</p>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\n\nexport default {\n  props: {\n    notice: {\n      type: Object,\n      default: function() {\n        return {};\n      }\n    },\n    convertToGwei: {\n      type: Function,\n      default: function() {}\n    },\n    convertToEth: {\n      type: Function,\n      default: function() {}\n    },\n    getFiatValue: {\n      type: Function,\n      default: function() {}\n    },\n    dateString: {\n      type: Function,\n      default: function() {}\n    },\n    timeString: {\n      type: Function,\n      default: function() {}\n    },\n    errorMessageString: {\n      type: Function,\n      default: function() {}\n    },\n    hashLink: {\n      type: Function,\n      default: function() {}\n    },\n    addressLink: {\n      type: Function,\n      default: function() {}\n    },\n    processStatus: {\n      type: Function,\n      default: function() {}\n    }\n  },\n  data() {\n    return {\n      unreadCount: 0\n    };\n  },\n  computed: {\n    ...mapState(['web3', 'network', 'notifications', 'wallet']),\n    errorMessage() {\n      return this.errorMessageString(this.notice);\n    },\n    isError() {\n      return this.notice.body.error;\n    },\n    isTokenTransfer() {\n      return (\n        this.notice.body.tokenTransferTo !== undefined &&\n        this.notice.body.tokenTransferTo !== null\n      );\n    },\n    details() {\n      return this.notice.body;\n    },\n    txStatus() {\n      return this.processStatus(this.notice.status);\n    }\n  },\n  methods: {\n    emitShowDetails() {\n      this.$emit('showDetails');\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'Notification';\n</style>\n"]}]}