{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/layouts/AccessWalletLayout/components/NetworkAndAddressModal/NetworkAndAddressModal.vue?vue&type=template&id=78a6518f&scoped=true&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/layouts/AccessWalletLayout/components/NetworkAndAddressModal/NetworkAndAddressModal.vue","mtime":1573477611668},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"b-modal\",\n    {\n      ref: \"networkAndAddress\",\n      staticClass: \"bootstrap-modal nopadding modal-network-and-address\",\n      attrs: {\n        title: _vm.$t(\"accessWallet.networkAndAddress\"),\n        \"hide-footer\": \"\",\n        centered: \"\",\n        static: \"\",\n        lazy: \"\"\n      }\n    },\n    [\n      _c(\"div\", { staticClass: \"modal-content-container\" }, [\n        _c(\n          \"div\",\n          { staticClass: \"collapse-container\" },\n          [\n            _c(\n              \"b-btn\",\n              {\n                directives: [\n                  {\n                    name: \"b-toggle\",\n                    rawName: \"v-b-toggle.collapse1\",\n                    modifiers: { collapse1: true }\n                  }\n                ],\n                staticClass: \"collapse-open-button\",\n                attrs: { variant: \"primary\" }\n              },\n              [\n                _c(\"p\", { staticClass: \"button-number\" }, [_vm._v(\"1\")]),\n                _c(\"div\", { staticClass: \"network\" }, [\n                  _c(\"p\", [_vm._v(_vm._s(_vm.$t(\"common.network\")))]),\n                  _c(\"p\", { staticClass: \"network-name monospace\" }, [\n                    _vm._v(\n                      \"\\n            (\" +\n                        _vm._s(_vm.selectedNetwork.type.name) +\n                        \" - \" +\n                        _vm._s(_vm.selectedNetwork.service) +\n                        \")\\n          \"\n                    )\n                  ])\n                ]),\n                false\n                  ? _c(\"p\", { staticClass: \"right-button\" }, [\n                      _vm._v(_vm._s(_vm.$t(\"common.cancel\")))\n                    ])\n                  : _vm._e()\n              ]\n            ),\n            _c(\n              \"b-collapse\",\n              {\n                staticClass: \"collapse-content\",\n                attrs: { id: \"collapse1\", accordion: \"networkaddraccordion\" }\n              },\n              [\n                _c(\n                  \"ul\",\n                  { staticClass: \"networks\" },\n                  _vm._l(Object.keys(_vm.reorderNetworkList), function(\n                    key,\n                    index\n                  ) {\n                    return _c(\"li\", { key: _vm.$router.path + key + index }, [\n                      _c(\"div\", { staticClass: \"network-title\" }, [\n                        _c(\"div\", { staticClass: \"network-icon-container\" }, [\n                          _vm.Networks[key][0].type.icon\n                            ? _c(\"img\", {\n                                attrs: {\n                                  src: _vm.Networks[key][0].type.icon,\n                                  alt: \"\"\n                                }\n                              })\n                            : _c(\"div\", { staticClass: \"no-icon\" }, [\n                                _c(\"p\", [_vm._v(\"No\")]),\n                                _c(\"p\", [_vm._v(\"Icon\")])\n                              ])\n                        ]),\n                        _c(\"p\", [_vm._v(_vm._s(key))])\n                      ]),\n                      _c(\n                        \"div\",\n                        { staticClass: \"network-content\" },\n                        _vm._l(_vm.Networks[key], function(net) {\n                          return _c(\n                            \"p\",\n                            {\n                              key: net.service,\n                              class:\n                                net.service === _vm.selectedNetwork.service &&\n                                net.type &&\n                                net.type.name === _vm.selectedNetwork.type.name\n                                  ? \"current-network\"\n                                  : \"\",\n                              on: {\n                                click: function($event) {\n                                  return _vm.switchNetwork(net)\n                                }\n                              }\n                            },\n                            [\n                              _vm._v(\n                                \"\\n                \" +\n                                  _vm._s(net.service) +\n                                  \"\\n              \"\n                              )\n                            ]\n                          )\n                        }),\n                        0\n                      )\n                    ])\n                  }),\n                  0\n                )\n              ]\n            )\n          ],\n          1\n        ),\n        _c(\n          \"div\",\n          { staticClass: \"collapse-container\" },\n          [\n            _c(\n              \"b-btn\",\n              {\n                directives: [\n                  {\n                    name: \"b-toggle\",\n                    rawName: \"v-b-toggle.collapse2\",\n                    modifiers: { collapse2: true }\n                  }\n                ],\n                staticClass: \"collapse-open-button\",\n                attrs: { variant: \"primary\" }\n              },\n              [\n                _c(\"p\", { staticClass: \"button-number\" }, [_vm._v(\"2\")]),\n                _c(\"p\", [_vm._v(_vm._s(_vm.$t(\"common.address\")))])\n              ]\n            ),\n            _c(\n              \"b-collapse\",\n              {\n                staticClass: \"collapse-content\",\n                attrs: {\n                  id: \"collapse2\",\n                  accordion: \"networkaddraccordion\",\n                  visible: \"\"\n                }\n              },\n              [\n                _c(\n                  \"div\",\n                  {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: _vm.hardwareWallet.identifier !== _vm.ledgerType,\n                        expression: \"hardwareWallet.identifier !== ledgerType\"\n                      }\n                    ],\n                    staticClass: \"content-container-1\"\n                  },\n                  [\n                    _c(\"div\", { staticClass: \"hd-derivation\" }, [\n                      _c(\"h4\", [\n                        _vm._v(_vm._s(_vm.$t(\"accessWallet.hdDerivationPath\")))\n                      ]),\n                      _c(\n                        \"div\",\n                        { staticClass: \"dropdown-button-container\" },\n                        [\n                          _c(\n                            \"b-dropdown\",\n                            {\n                              staticClass: \"dropdown-button-2\",\n                              attrs: {\n                                id: \"hd-derivation-path\",\n                                text: _vm.getPathLabel(_vm.selectedPath),\n                                right: \"\"\n                              }\n                            },\n                            [\n                              _vm._l(_vm.availablePaths, function(val, key) {\n                                return _c(\n                                  \"b-dropdown-item\",\n                                  {\n                                    key: \"base\" + key,\n                                    class:\n                                      _vm.selectedPath === val.path\n                                        ? \"active\"\n                                        : \"\",\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.changePath(key)\n                                      }\n                                    }\n                                  },\n                                  [_vm._v(_vm._s(val.label))]\n                                )\n                              }),\n                              _c(\"b-dropdown-divider\"),\n                              _c(\"b-dropdown-item\", [\n                                _vm._v(\n                                  \"\\n                  \" +\n                                    _vm._s(_vm.$t(\"accessWallet.customPaths\")) +\n                                    \"\\n                \"\n                                )\n                              ]),\n                              _vm._l(_vm.customPaths, function(val, key) {\n                                return _c(\n                                  \"b-dropdown-item\",\n                                  {\n                                    key: key,\n                                    class:\n                                      _vm.selectedPath === val.path\n                                        ? \"active\"\n                                        : \"\"\n                                  },\n                                  [\n                                    _c(\n                                      \"div\",\n                                      { staticClass: \"custom-networks\" },\n                                      [\n                                        _c(\n                                          \"div\",\n                                          {\n                                            on: {\n                                              click: function($event) {\n                                                return _vm.changePath(key)\n                                              }\n                                            }\n                                          },\n                                          [_vm._v(_vm._s(val.label))]\n                                        ),\n                                        _c(\"span\", [\n                                          _c(\"i\", {\n                                            staticClass: \"fa fa-times-circle\",\n                                            on: {\n                                              click: function($event) {\n                                                $event.preventDefault()\n                                                return _vm.removeCustomPath(val)\n                                              }\n                                            }\n                                          })\n                                        ])\n                                      ]\n                                    )\n                                  ]\n                                )\n                              }),\n                              _c(\n                                \"b-dropdown-item\",\n                                { on: { click: _vm.showCustomPathInput } },\n                                [\n                                  _vm._v(\n                                    \"\\n                  \" +\n                                      _vm._s(\n                                        _vm.$t(\"accessWallet.addCustomPath\")\n                                      ) +\n                                      \"\\n                \"\n                                  )\n                                ]\n                              )\n                            ],\n                            2\n                          )\n                        ],\n                        1\n                      )\n                    ]),\n                    _c(\n                      \"p\",\n                      {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value:\n                              _vm.invalidPath !== \"\" && _vm.customPathInput,\n                            expression: \"invalidPath !== '' && customPathInput\"\n                          }\n                        ],\n                        staticClass: \"error-message-container\"\n                      },\n                      [\n                        _vm._v(\n                          \"\\n            \" +\n                            _vm._s(\n                              _vm.$t(\"accessWallet.invalidPathDesc\", {\n                                path: _vm.invalidPath.path\n                              })\n                            ) +\n                            \"\\n          \"\n                        )\n                      ]\n                    ),\n                    _c(\n                      \"p\",\n                      {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value: !_vm.customPathInput,\n                            expression: \"!customPathInput\"\n                          }\n                        ],\n                        staticClass: \"derivation-brands monospace\"\n                      },\n                      [\n                        _vm._v(\n                          \"\\n            \" +\n                            _vm._s(_vm.getPathLabel(_vm.selectedPath)) +\n                            \" (\" +\n                            _vm._s(_vm.selectedPath) +\n                            \")\\n          \"\n                        )\n                      ]\n                    ),\n                    _c(\n                      \"div\",\n                      {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value: _vm.customPathInput,\n                            expression: \"customPathInput\"\n                          }\n                        ],\n                        staticClass: \"custom-path-container\"\n                      },\n                      [\n                        _c(\"label\", { attrs: { for: \"customPathLabel\" } }, [\n                          _vm._v(_vm._s(_vm.$t(\"common.alias\")))\n                        ]),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.customPath.label,\n                              expression: \"customPath.label\"\n                            }\n                          ],\n                          attrs: {\n                            id: \"customPathLabel\",\n                            placeholder: \"my custom path\"\n                          },\n                          domProps: { value: _vm.customPath.label },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(\n                                _vm.customPath,\n                                \"label\",\n                                $event.target.value\n                              )\n                            }\n                          }\n                        }),\n                        _c(\"label\", { attrs: { for: \"customPathInput\" } }, [\n                          _vm._v(_vm._s(_vm.$t(\"common.path\")))\n                        ]),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.customPath.path,\n                              expression: \"customPath.path\"\n                            }\n                          ],\n                          attrs: {\n                            id: \"customPathInput\",\n                            placeholder: \"m/44'/1'/0'/0\"\n                          },\n                          domProps: { value: _vm.customPath.path },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(\n                                _vm.customPath,\n                                \"path\",\n                                $event.target.value\n                              )\n                            }\n                          }\n                        }),\n                        _c(\n                          \"button\",\n                          {\n                            staticClass: \"submit-button cancel\",\n                            on: { click: _vm.showCustomPathInput }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n              \" +\n                                _vm._s(_vm.$t(\"common.cancel\")) +\n                                \"\\n            \"\n                            )\n                          ]\n                        ),\n                        _c(\n                          \"button\",\n                          {\n                            staticClass: \"submit-button submit\",\n                            on: { click: _vm.addCustomPath }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n              \" +\n                                _vm._s(_vm.$t(\"accessWallet.addCustomPath\")) +\n                                \"\\n            \"\n                            )\n                          ]\n                        )\n                      ]\n                    )\n                  ]\n                ),\n                _c(\"div\", { staticClass: \"content-container-2\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"address-block-container\" },\n                    [\n                      _c(\"div\", { staticClass: \"block-title\" }, [\n                        _c(\"h4\", [\n                          _vm._v(_vm._s(_vm.$t(\"accessWallet.interactAddr\")))\n                        ])\n                      ]),\n                      _c(\n                        \"ul\",\n                        { staticClass: \"address-block table-header fours\" },\n                        [\n                          _c(\"li\", [_vm._v(_vm._s(_vm.$t(\"accessWallet.id\")))]),\n                          _c(\"li\", [_vm._v(_vm._s(_vm.$t(\"common.address\")))]),\n                          _c(\"li\", [_vm._v(_vm._s(_vm.$t(\"common.balance\")))])\n                        ]\n                      ),\n                      _vm._l(_vm.HDAccounts, function(account) {\n                        return _c(\n                          \"ul\",\n                          {\n                            key: account.index,\n                            class: [\n                              _vm.selectedId === \"address\" + account.index\n                                ? \"selected\"\n                                : \"\",\n                              \"address-block address-data fours\"\n                            ],\n                            attrs: {\n                              \"data-address\": \"address\" + account.index\n                            },\n                            on: {\n                              click: function($event) {\n                                return _vm.setAccount(account)\n                              }\n                            }\n                          },\n                          [\n                            _c(\n                              \"li\",\n                              [\n                                _c(\"blockie\", {\n                                  attrs: {\n                                    address: account.account.getChecksumAddressString(),\n                                    size: 8,\n                                    scale: 16,\n                                    width: \"30px\",\n                                    height: \"30px\"\n                                  }\n                                })\n                              ],\n                              1\n                            ),\n                            _c(\"li\", { staticClass: \"monospace\" }, [\n                              _vm._v(\n                                \"\\n                \" +\n                                  _vm._s(\n                                    _vm._f(\"concatAddr\")(\n                                      account.account.getChecksumAddressString()\n                                    )\n                                  ) +\n                                  \"\\n              \"\n                              )\n                            ]),\n                            _c(\"li\", { staticClass: \"monospace\" }, [\n                              _vm._v(\n                                _vm._s(_vm.convertBalance(account.balance))\n                              )\n                            ]),\n                            _c(\"li\", { staticClass: \"user-input-checkbox\" }, [\n                              _c(\n                                \"label\",\n                                {\n                                  staticClass:\n                                    \"checkbox-container checkbox-container-small\"\n                                },\n                                [\n                                  _c(\"input\", {\n                                    attrs: {\n                                      id: \"address\" + account.index,\n                                      type: \"checkbox\"\n                                    },\n                                    on: { click: _vm.unselectAllAddresses }\n                                  }),\n                                  _c(\"span\", {\n                                    staticClass: \"checkmark checkmark-small\"\n                                  })\n                                ]\n                              )\n                            ])\n                          ]\n                        )\n                      })\n                    ],\n                    2\n                  ),\n                  _c(\"div\", { staticClass: \"address-nav\" }, [\n                    _c(\n                      \"span\",\n                      {\n                        on: {\n                          click: function($event) {\n                            return _vm.previousAddressSet()\n                          }\n                        }\n                      },\n                      [_vm._v(\"< \" + _vm._s(_vm.$t(\"common.previous\")))]\n                    ),\n                    _c(\n                      \"span\",\n                      {\n                        on: {\n                          click: function($event) {\n                            return _vm.nextAddressSet()\n                          }\n                        }\n                      },\n                      [_vm._v(_vm._s(_vm.$t(\"common.next\")) + \" >\")]\n                    )\n                  ])\n                ])\n              ]\n            ),\n            _c(\"div\", { staticClass: \"accept-terms\" }, [\n              _c(\n                \"label\",\n                { staticClass: \"checkbox-container\" },\n                [\n                  _vm._v(\n                    \"\\n          \" +\n                      _vm._s(_vm.$t(\"accessWallet.acceptTerms\")) +\n                      \"\\n          \"\n                  ),\n                  _c(\n                    \"router-link\",\n                    { attrs: { to: \"/terms-and-conditions\" } },\n                    [_vm._v(_vm._s(_vm.$t(\"common.terms\")) + \".\")]\n                  ),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.acceptTerms,\n                        expression: \"acceptTerms\"\n                      }\n                    ],\n                    attrs: { type: \"checkbox\" },\n                    domProps: {\n                      checked: Array.isArray(_vm.acceptTerms)\n                        ? _vm._i(_vm.acceptTerms, null) > -1\n                        : _vm.acceptTerms\n                    },\n                    on: {\n                      change: function($event) {\n                        var $$a = _vm.acceptTerms,\n                          $$el = $event.target,\n                          $$c = $$el.checked ? true : false\n                        if (Array.isArray($$a)) {\n                          var $$v = null,\n                            $$i = _vm._i($$a, $$v)\n                          if ($$el.checked) {\n                            $$i < 0 && (_vm.acceptTerms = $$a.concat([$$v]))\n                          } else {\n                            $$i > -1 &&\n                              (_vm.acceptTerms = $$a\n                                .slice(0, $$i)\n                                .concat($$a.slice($$i + 1)))\n                          }\n                        } else {\n                          _vm.acceptTerms = $$c\n                        }\n                      }\n                    }\n                  }),\n                  _c(\"span\", { staticClass: \"checkmark\" })\n                ],\n                1\n              )\n            ]),\n            _c(\n              \"div\",\n              { staticClass: \"button-container\" },\n              [\n                _c(\n                  \"b-btn\",\n                  {\n                    staticClass: \"mid-round-button-green-filled close-button\",\n                    attrs: { disabled: !_vm.isDisabled },\n                    on: {\n                      click: function($event) {\n                        $event.preventDefault()\n                        return _vm.unlockWallet($event)\n                      }\n                    }\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"common.accessMyWallet\")))]\n                )\n              ],\n              1\n            ),\n            _c(\"customer-support\")\n          ],\n          1\n        )\n      ])\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}