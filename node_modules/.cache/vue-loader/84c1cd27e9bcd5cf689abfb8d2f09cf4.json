{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/dapps/ManageENS/containers/ManageENSContainer/ManageENSContainer.vue?vue&type=template&id=ef81b6e4&scoped=true&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/dapps/ManageENS/containers/ManageENSContainer/ManageENSContainer.vue","mtime":1573477611660},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"manage-ens-container\" },\n    [\n      _c(\"h3\", [\n        _vm._v(_vm._s(_vm.$t(\"dapps.manage\")) + \" \" + _vm._s(_vm.domainName))\n      ]),\n      _c(\n        \"b-btn\",\n        {\n          directives: [\n            {\n              name: \"b-toggle\",\n              rawName: \"v-b-toggle.multicoinsec\",\n              modifiers: { multicoinsec: true }\n            },\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: _vm.resolverMultiCoinSupport,\n              expression: \"resolverMultiCoinSupport\"\n            }\n          ],\n          staticClass: \"collapse-open-button\",\n          attrs: { variant: \"primary\" }\n        },\n        [_c(\"p\", [_vm._v(\"Multi coin\")])]\n      ),\n      _c(\n        \"b-collapse\",\n        {\n          staticClass: \"collapse-content\",\n          attrs: {\n            id: \"multicoinsec\",\n            visible: _vm.resolverMultiCoinSupport,\n            accordion: \"manage-ens-accordion\"\n          }\n        },\n        [\n          _c(\"div\", { staticClass: \"form-container\" }, [\n            _c(\n              \"form\",\n              { staticClass: \"manage-multi-coin-form\" },\n              [\n                _c(\n                  \"div\",\n                  { staticClass: \"title-and-dropdown-container\" },\n                  [\n                    _c(\"h4\", [_vm._v(\"Multi-Coin:\")]),\n                    _c(\n                      \"b-dd\",\n                      {\n                        staticClass: \"dropdown-button-2\",\n                        attrs: { text: _vm.selectedCurrency }\n                      },\n                      _vm._l(Object.keys(_vm.supportedCoins), function(\n                        item,\n                        idx\n                      ) {\n                        return _c(\n                          \"b-dd-item\",\n                          {\n                            key: item + idx,\n                            on: {\n                              click: function($event) {\n                                return _vm.addCurrencyInput(item)\n                              }\n                            }\n                          },\n                          [_vm._v(_vm._s(item))]\n                        )\n                      }),\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _vm._l(_vm.currencyInputs, function(v, k) {\n                  return _c(\n                    \"div\",\n                    { key: k.id, staticClass: \"multi-coin-input-container\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"updateResolver\" } }, [\n                        _vm._v(_vm._s(k) + \":\")\n                      ]),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: v.value,\n                            expression: \"v.value\"\n                          }\n                        ],\n                        attrs: {\n                          placeholder: v.name + \" address\",\n                          type: \"text\",\n                          name: \"updateResolver\"\n                        },\n                        domProps: { value: v.value },\n                        on: {\n                          input: function($event) {\n                            if ($event.target.composing) {\n                              return\n                            }\n                            _vm.$set(v, \"value\", $event.target.value)\n                          }\n                        }\n                      }),\n                      _c(\"i\", {\n                        class: [\n                          \"validity-indication fa\",\n                          v.value !== \"\" && !v.validator.validate(v.value)\n                            ? \"error fa-times-circle-o\"\n                            : \"valid fa-check-circle-o\"\n                        ]\n                      }),\n                      _c(\"i\", {\n                        staticClass: \"fa fa-lg fa-times\",\n                        on: {\n                          click: function() {\n                            _vm.removeCoinInput(k)\n                          }\n                        }\n                      })\n                    ]\n                  )\n                }),\n                _c(\"div\", { staticClass: \"multi-coin-submit-container\" }, [\n                  _c(\n                    \"button\",\n                    {\n                      class: _vm.isValidAddresses ? \"\" : \"disabled\",\n                      on: {\n                        click: function($event) {\n                          $event.preventDefault()\n                          return _vm.checkAndSendCurrency($event)\n                        }\n                      }\n                    },\n                    [_vm._v(\"\\n            Save\\n          \")]\n                  )\n                ])\n              ],\n              2\n            )\n          ])\n        ]\n      ),\n      _c(\n        \"b-btn\",\n        {\n          directives: [\n            {\n              name: \"b-toggle\",\n              rawName: \"v-b-toggle.textrecords\",\n              modifiers: { textrecords: true }\n            },\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: _vm.resolverTxtSupport,\n              expression: \"resolverTxtSupport\"\n            }\n          ],\n          staticClass: \"collapse-open-button\",\n          attrs: { variant: \"primary\" }\n        },\n        [_c(\"p\", [_vm._v(\"Text Records\")])]\n      ),\n      _c(\n        \"b-collapse\",\n        {\n          staticClass: \"collapse-content\",\n          attrs: {\n            id: \"textrecords\",\n            visible: !_vm.resolverMultiCoinSupport && _vm.resolverTxtSupport,\n            accordion: \"manage-ens-accordion\"\n          }\n        },\n        [\n          _c(\"div\", { staticClass: \"form-container\" }, [\n            _c(\n              \"form\",\n              { staticClass: \"manage-multi-coin-form\" },\n              [\n                _c(\n                  \"div\",\n                  { staticClass: \"title-and-dropdown-container\" },\n                  [\n                    _c(\"h4\", [_vm._v(\"Text Records:\")]),\n                    _c(\n                      \"b-dd\",\n                      {\n                        staticClass: \"dropdown-button-2\",\n                        attrs: { text: _vm._f(\"capitalize\")(_vm.selectedText) }\n                      },\n                      _vm._l(Object.keys(_vm.txtRecords), function(item, idx) {\n                        return _c(\n                          \"b-dd-item\",\n                          {\n                            key: item + idx,\n                            on: {\n                              click: function($event) {\n                                return _vm.addTxtInput(item)\n                              }\n                            }\n                          },\n                          [_vm._v(_vm._s(_vm._f(\"capitalize\")(item)))]\n                        )\n                      }),\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _vm._l(_vm.txtRecordInputs, function(v, k) {\n                  return _c(\n                    \"div\",\n                    { key: k.id, staticClass: \"multi-coin-input-container\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"updateResolver\" } }, [\n                        _vm._v(_vm._s(_vm._f(\"capitalize\")(k)) + \":\")\n                      ]),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"validate\",\n                            rawName: \"v-validate\",\n                            value: _vm.getValidation(k),\n                            expression: \"getValidation(k)\"\n                          },\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.txtRecordInputs[k],\n                            expression: \"txtRecordInputs[k]\"\n                          }\n                        ],\n                        attrs: {\n                          placeholder: _vm._f(\"capitalize\")(k),\n                          name: k,\n                          type: \"text\"\n                        },\n                        domProps: { value: _vm.txtRecordInputs[k] },\n                        on: {\n                          input: function($event) {\n                            if ($event.target.composing) {\n                              return\n                            }\n                            _vm.$set(\n                              _vm.txtRecordInputs,\n                              k,\n                              $event.target.value\n                            )\n                          }\n                        }\n                      }),\n                      _c(\"i\", {\n                        class: [\n                          \"validity-indication fa\",\n                          !!_vm.txtRecordInputs[k] &&\n                          _vm.txtRecordInputs[k] !== \"\" &&\n                          !_vm.errors.hasOwnProperty(\"\" + k)\n                            ? \"valid fa-check-circle-o\"\n                            : \"error fa-times-circle-o\"\n                        ]\n                      }),\n                      _c(\"i\", {\n                        staticClass: \"fa fa-lg fa-times\",\n                        on: {\n                          click: function() {\n                            _vm.removeTxtInput(k)\n                          }\n                        }\n                      })\n                    ]\n                  )\n                }),\n                _c(\"div\", { staticClass: \"multi-coin-submit-container\" }, [\n                  _c(\n                    \"button\",\n                    {\n                      class: _vm.validTextRecords ? \"disabled\" : \"\",\n                      on: {\n                        click: function($event) {\n                          $event.preventDefault()\n                          return _vm.checkAndSendTxtRecs($event)\n                        }\n                      }\n                    },\n                    [_vm._v(\"\\n            Save\\n          \")]\n                  )\n                ])\n              ],\n              2\n            )\n          ])\n        ]\n      ),\n      _c(\n        \"b-btn\",\n        {\n          directives: [\n            {\n              name: \"b-toggle\",\n              rawName: \"v-b-toggle.transferens\",\n              modifiers: { transferens: true }\n            }\n          ],\n          staticClass: \"collapse-open-button\",\n          attrs: { variant: \"primary\" }\n        },\n        [_c(\"p\", [_vm._v(\"Transfer Domain\")])]\n      ),\n      _c(\n        \"b-collapse\",\n        {\n          staticClass: \"collapse-content\",\n          attrs: {\n            id: \"transferens\",\n            visible: !_vm.resolverMultiCoinSupport && !_vm.resolverTxtSupport,\n            accordion: \"manage-ens-accordion\"\n          }\n        },\n        [\n          _c(\"div\", { staticClass: \"form-container\" }, [\n            _c(\"form\", { staticClass: \"manage-form\" }, [\n              _c(\"div\", { staticClass: \"input-container\" }, [\n                _c(\"label\", { attrs: { for: \"transferEns\" } }, [\n                  _vm._v(_vm._s(_vm.$t(\"dapps.transferEnsTo\")) + \":\")\n                ]),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.transferTo,\n                      expression: \"transferTo\"\n                    }\n                  ],\n                  attrs: {\n                    type: \"text\",\n                    name: \"transferEns\",\n                    placeholder: \"0xDECAF9CD2367cdbb726E904cD6397eDFcAe6068D\"\n                  },\n                  domProps: { value: _vm.transferTo },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.transferTo = $event.target.value\n                    }\n                  }\n                })\n              ]),\n              _c(\"div\", { staticClass: \"submit-container\" }, [\n                _c(\n                  \"button\",\n                  {\n                    class: !_vm.isAddress(_vm.transferTo) ? \"disabled\" : \"\",\n                    attrs: { type: \"submit\" },\n                    on: {\n                      click: function($event) {\n                        $event.preventDefault()\n                        return _vm.transferDomain(_vm.transferTo)\n                      }\n                    }\n                  },\n                  [_vm._v(\"\\n            Transfer\\n          \")]\n                )\n              ])\n            ])\n          ])\n        ]\n      ),\n      _c(\"interface-bottom-text\", {\n        attrs: {\n          \"link-text\": _vm.$t(\"interface.helpCenter\"),\n          question: _vm.$t(\"interface.haveIssues\"),\n          link: \"https://kb.myetherwallet.com\"\n        }\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}