{"remainingRequest":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/containers/HeaderContainer/components/MobileMenu/MobileMenu.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/containers/HeaderContainer/components/MobileMenu/MobileMenu.vue","mtime":1573477611640},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from 'vuex';\nimport MobileMenuButton from './components/MobileMenuButton';\nimport MobileAddressBlock from './components/MobileAddressBlock';\nimport MobileBalanceBlock from './components/MobileBalanceBlock';\nimport MobileNetworkBlock from './components/MobileNetworkBlock';\nimport MobileLanguageSelector from './components/MobileLanguageSelector';\nimport { Misc } from '@/helpers';\n\nexport default {\n  components: {\n    'mobile-menu-button': MobileMenuButton,\n    'mobile-address-block': MobileAddressBlock,\n    'mobile-balance-block': MobileBalanceBlock,\n    'mobile-network-block': MobileNetworkBlock,\n    'mobile-language-selector': MobileLanguageSelector\n  },\n  props: {\n    opensettings: {\n      type: Function,\n      default: function() {}\n    },\n    logout: {\n      type: Function,\n      default: function() {}\n    },\n    buildType: {\n      type: String,\n      default: 'web'\n    }\n  },\n  data() {\n    const isMewCx = Misc.isMewCx();\n    return {\n      localGasPrice: '10',\n      balance: 0,\n      isOnTop: true,\n      isMenuOpen: false,\n      isHomePage: true,\n      langSelectorOpen: false,\n      currentLang: 'English',\n      currentFlag: 'en',\n      isMewCx: isMewCx\n    };\n  },\n  computed: {\n    ...mapState(['account', 'blockNumber'])\n  },\n  watch: {\n    $route(newVal) {\n      if (newVal.path.includes('interface')) {\n        this.isHomePage = false;\n      } else {\n        this.isHomePage = true;\n      }\n    }\n  },\n  mounted() {\n    window.onscroll = () => {\n      this.onPageScroll();\n    };\n  },\n  methods: {\n    langChange(data) {\n      this.currentLang = data;\n    },\n    flagChange(data) {\n      this.currentFlag = data;\n    },\n    scrollTop() {\n      window.scrollTo(0, 0);\n    },\n    onPageScroll() {\n      const topPos = this.$root.$el.getBoundingClientRect().top;\n      this.isPageOnTop = !(topPos < -150);\n      if (topPos < -150) {\n        this.isOnTop = false;\n      } else {\n        this.isOnTop = true;\n      }\n    }\n  }\n};\n",{"version":3,"sources":["MobileMenu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MobileMenu.vue","sourceRoot":"src/containers/HeaderContainer/components/MobileMenu","sourcesContent":["<template>\n  <div class=\"mobile-menu\">\n    <mobile-language-selector\n      v-show=\"!isMewCx\"\n      :open=\"langSelectorOpen\"\n      @isopen=\"langSelectorOpen = false\"\n      @currentlang=\"langChange\"\n      @currentflag=\"flagChange\"\n    />\n\n    <!-- Mobile menu header ************************************ -->\n    <div\n      :class=\"!isOnTop && !isMenuOpen ? 'small-menu' : ''\"\n      class=\"mobile-menu-header\"\n    >\n      <router-link\n        to=\"/\"\n        aria-label=\"Home\"\n        @click.native=\"\n          scrollTop();\n          isMenuOpen = false;\n        \"\n      >\n        <div\n          :class=\"!isOnTop && !isMenuOpen ? 'small-menu' : ''\"\n          class=\"logo-image--container\"\n        >\n          <img\n            :src=\"require(`@/assets/images/short-hand-logo-${buildType}.png`)\"\n            class=\"logo\"\n            alt\n          />\n        </div>\n      </router-link>\n      <div class=\"mobile-menu-button--container\">\n        <a\n          href=\"https://ccswap.myetherwallet.com/#/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <div class=\"buy-eth\">\n            <img src=\"@/assets/images/icons/buy-eth.svg\" alt />\n            <p>Buy ETH</p>\n          </div>\n        </a>\n        <mobile-menu-button\n          :ismenuopen=\"isMenuOpen\"\n          @click.native=\"isMenuOpen = !isMenuOpen\"\n        />\n      </div>\n    </div>\n    <!-- Mobile menu header ************************************ -->\n    <!-- Mobile menu shadow backdrop ************************************ -->\n    <div\n      :class=\"isMenuOpen ? 'menu-open' : ''\"\n      class=\"mobile-menu-shadow-backdrop\"\n    ></div>\n    <!-- Mobile menu shadow backdrop ************************************ -->\n    <!-- Mobile menu content ************************************ -->\n    <div\n      :class=\"isMenuOpen ? 'menu-open' : ''\"\n      class=\"mobile-menu-content--container\"\n    >\n      <div class=\"mobile-menu-content\">\n        <div v-if=\"account.address\" class=\"block--container\">\n          <mobile-balance-block />\n          <mobile-network-block :block-number=\"blockNumber\" />\n        </div>\n        <ul>\n          <li>\n            <router-link\n              to=\"/\"\n              @click.native=\"\n                scrollTop();\n                isMenuOpen = false;\n              \"\n            >\n              <div class=\"menu-link-block\">\n                <div>{{ $t('header.home') }}</div>\n                <i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\n              </div>\n            </router-link>\n          </li>\n          <li v-if=\"isHomePage && !isMewCx\">\n            <router-link to=\"/#about-mew\" @click.native=\"isMenuOpen = false\">\n              <div class=\"menu-link-block\">\n                <div>{{ $t('header.about') }}</div>\n                <i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\n              </div>\n            </router-link>\n          </li>\n          <li v-if=\"isMewCx\">\n            <router-link to=\"/#faqs\" @click.native=\"isMenuOpen = false\">\n              <div class=\"menu-link-block\">\n                <div>{{ $t('common.faqs') }}</div>\n                <i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\n              </div>\n            </router-link>\n          </li>\n          <li>\n            <div\n              class=\"menu-link-block\"\n              @click=\"langSelectorOpen = !langSelectorOpen\"\n            >\n              <div>{{ $t('common.language') }}</div>\n              <div class=\"selected-lang\">\n                <div>{{ currentLang }}</div>\n                <img\n                  :src=\"require(`@/assets/images/flags/${currentFlag}.svg`)\"\n                  alt\n                />\n              </div>\n              <i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\n            </div>\n          </li>\n          <li v-if=\"account.address\">\n            <div class=\"menu-link-block\" @click=\"opensettings\">\n              <div>{{ $t('common.settings') }}</div>\n              <i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\n            </div>\n          </li>\n        </ul>\n        <div v-if=\"account.address\" class=\"logout-button\" @click=\"logout\">\n          <button>{{ $t('common.logout') }}</button>\n        </div>\n      </div>\n    </div>\n    <!-- Mobile menu content ************************************ -->\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport MobileMenuButton from './components/MobileMenuButton';\nimport MobileAddressBlock from './components/MobileAddressBlock';\nimport MobileBalanceBlock from './components/MobileBalanceBlock';\nimport MobileNetworkBlock from './components/MobileNetworkBlock';\nimport MobileLanguageSelector from './components/MobileLanguageSelector';\nimport { Misc } from '@/helpers';\n\nexport default {\n  components: {\n    'mobile-menu-button': MobileMenuButton,\n    'mobile-address-block': MobileAddressBlock,\n    'mobile-balance-block': MobileBalanceBlock,\n    'mobile-network-block': MobileNetworkBlock,\n    'mobile-language-selector': MobileLanguageSelector\n  },\n  props: {\n    opensettings: {\n      type: Function,\n      default: function() {}\n    },\n    logout: {\n      type: Function,\n      default: function() {}\n    },\n    buildType: {\n      type: String,\n      default: 'web'\n    }\n  },\n  data() {\n    const isMewCx = Misc.isMewCx();\n    return {\n      localGasPrice: '10',\n      balance: 0,\n      isOnTop: true,\n      isMenuOpen: false,\n      isHomePage: true,\n      langSelectorOpen: false,\n      currentLang: 'English',\n      currentFlag: 'en',\n      isMewCx: isMewCx\n    };\n  },\n  computed: {\n    ...mapState(['account', 'blockNumber'])\n  },\n  watch: {\n    $route(newVal) {\n      if (newVal.path.includes('interface')) {\n        this.isHomePage = false;\n      } else {\n        this.isHomePage = true;\n      }\n    }\n  },\n  mounted() {\n    window.onscroll = () => {\n      this.onPageScroll();\n    };\n  },\n  methods: {\n    langChange(data) {\n      this.currentLang = data;\n    },\n    flagChange(data) {\n      this.currentFlag = data;\n    },\n    scrollTop() {\n      window.scrollTo(0, 0);\n    },\n    onPageScroll() {\n      const topPos = this.$root.$el.getBoundingClientRect().top;\n      this.isPageOnTop = !(topPos < -150);\n      if (topPos < -150) {\n        this.isOnTop = false;\n      } else {\n        this.isOnTop = true;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'MobileMenu.scss';\n</style>\n"]}]}