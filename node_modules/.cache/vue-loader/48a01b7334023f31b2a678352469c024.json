{"remainingRequest":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/layouts/InterfaceLayout/containers/SwapContainer/components/SwapAddressSelector/SwapAddressSelector.vue?vue&type=template&id=5c1b3fbb&scoped=true&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/layouts/InterfaceLayout/containers/SwapContainer/components/SwapAddressSelector/SwapAddressSelector.vue","mtime":1573477612064},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"drop-down-address-selector\" }, [\n    _c(\"div\", { staticClass: \"dropdown--title\" }, [\n      _c(\"h4\", [_vm._v(_vm._s(_vm.title))]),\n      _c(\n        \"button\",\n        {\n          staticClass: \"title-button prevent-user-select\",\n          on: {\n            click: function($event) {\n              return _vm.copyToClipboard(_vm.$refs.addressInput)\n            }\n          }\n        },\n        [_vm._v(\"\\n      \" + _vm._s(_vm.$t(\"common.copy\")) + \"\\n    \")]\n      )\n    ]),\n    _c(\"div\", { staticClass: \"dropdown--content\" }, [\n      _c(\n        \"div\",\n        {\n          staticClass: \"dropdown-input-box\",\n          class: _vm.dropdownOpen ? \"dropdown-open\" : \"\"\n        },\n        [\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.selectedAddress,\n                expression: \"selectedAddress\"\n              }\n            ],\n            ref: \"addressInput\",\n            attrs: { type: \"text\", placeholder: \"Please enter the address\" },\n            domProps: { value: _vm.selectedAddress },\n            on: {\n              focus: function($event) {\n                _vm.dropdownOpen = false\n              },\n              input: function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.selectedAddress = $event.target.value\n              }\n            }\n          }),\n          !_vm.validAddress\n            ? _c(\"div\", { staticClass: \"blockie-place-holder-image\" })\n            : _vm._e(),\n          _vm.validAddress\n            ? _c(\n                \"div\",\n                { staticClass: \"selected-address-blockie\" },\n                [\n                  _c(\"blockie\", {\n                    attrs: {\n                      address: _vm.selectedAddress,\n                      width: \"30px\",\n                      height: \"30px\"\n                    }\n                  }),\n                  _vm.isToken(_vm.currency)\n                    ? _c(\"div\", [\n                        _c(\"img\", {\n                          staticClass: \"currency-icon\",\n                          attrs: {\n                            src: require(\"@/assets/images/currency/eth.svg\"),\n                            alt: \"\"\n                          }\n                        })\n                      ])\n                    : _c(\"div\", [\n                        _c(\"i\", {\n                          class: [\n                            \"currency-icon\",\n                            \"as-font\",\n                            \"cc\",\n                            _vm.getIcon(_vm.currency),\n                            \"cc-icon\"\n                          ]\n                        })\n                      ])\n                ],\n                1\n              )\n            : _vm._e(),\n          _c(\n            \"div\",\n            {\n              staticClass: \"dropdown-open-button\",\n              on: {\n                click: function($event) {\n                  _vm.dropdownOpen = !_vm.dropdownOpen\n                }\n              }\n            },\n            [\n              !_vm.dropdownOpen\n                ? _c(\"i\", {\n                    staticClass: \"fa fa-chevron-down\",\n                    attrs: { \"aria-hidden\": \"true\" }\n                  })\n                : _vm._e(),\n              _vm.dropdownOpen\n                ? _c(\"i\", {\n                    staticClass: \"fa fa-chevron-up\",\n                    attrs: { \"aria-hidden\": \"true\" }\n                  })\n                : _vm._e()\n            ]\n          )\n        ]\n      ),\n      _vm.dropdownOpen\n        ? _c(\"div\", { staticClass: \"dropdown-list-box\" }, [\n            _c(\n              \"ul\",\n              _vm._l(_vm.addresses, function(addr) {\n                return _c(\n                  \"li\",\n                  {\n                    key: addr.key,\n                    on: {\n                      click: function($event) {\n                        return _vm.listedAddressClick(addr.address)\n                      }\n                    }\n                  },\n                  [\n                    _c(\n                      \"div\",\n                      { staticClass: \"list-blockie\" },\n                      [\n                        _c(\"blockie\", {\n                          attrs: {\n                            address: addr.address,\n                            width: \"30px\",\n                            height: \"30px\"\n                          }\n                        }),\n                        _c(\"img\", {\n                          staticClass: \"currency-icon\",\n                          attrs: {\n                            src: require(\"@/assets/images/currency/eth.svg\"),\n                            alt: \"\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\"div\", { staticClass: \"address-block\" }, [\n                      _c(\"p\", { staticClass: \"listed-address\" }, [\n                        _vm._v(\n                          \"\\n              \" +\n                            _vm._s(addr.address) +\n                            \"\\n            \"\n                        )\n                      ])\n                    ]),\n                    addr.address === _vm.currentAddress\n                      ? _c(\"p\", { staticClass: \"address-note\" }, [\n                          _vm._v(\n                            \"\\n            \" +\n                              _vm._s(_vm.$t(\"interface.myAddr\")) +\n                              \"\\n          \"\n                          )\n                        ])\n                      : _vm._e(),\n                    _vm.toAddressCheckMark\n                      ? _c(\"i\", {\n                          staticClass: \"fa fa-check-circle good-button\",\n                          attrs: { \"aria-hidden\": \"true\" }\n                        })\n                      : _vm._e()\n                  ]\n                )\n              }),\n              0\n            )\n          ])\n        : _vm._e()\n    ]),\n    _c(\n      \"div\",\n      {\n        directives: [\n          {\n            name: \"show\",\n            rawName: \"v-show\",\n            value: _vm.validityState === 2,\n            expression: \"validityState === 2\"\n          }\n        ],\n        staticClass: \"error-message-container\"\n      },\n      [\n        _c(\"p\", [\n          _vm._v(\n            _vm._s(_vm.$t(\"interface.notValidAddr\", { currency: _vm.currency }))\n          )\n        ])\n      ]\n    ),\n    _c(\n      \"div\",\n      {\n        directives: [\n          {\n            name: \"show\",\n            rawName: \"v-show\",\n            value: _vm.validityState === 3,\n            expression: \"validityState === 3\"\n          }\n        ],\n        staticClass: \"warn-message-container\"\n      },\n      [\n        _c(\"p\", [\n          _vm._v(\n            \"\\n      \" +\n              _vm._s(\n                _vm.$t(\"interface.unableToValidateAddress\", {\n                  currency: _vm.currency\n                })\n              ) +\n              \"\\n    \"\n          )\n        ])\n      ]\n    ),\n    _c(\n      \"div\",\n      {\n        directives: [\n          {\n            name: \"show\",\n            rawName: \"v-show\",\n            value: _vm.validityState === 4,\n            expression: \"validityState === 4\"\n          }\n        ],\n        staticClass: \"warn-message-container\"\n      },\n      [_c(\"p\", [_vm._v(\"\\n      \" + _vm._s(_vm.EnsAddress) + \"\\n    \")])]\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}