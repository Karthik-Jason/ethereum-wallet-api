{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/layouts/ViewWalletInfoLayout/ViewWalletInfoLayout.vue?vue&type=template&id=32f64d60&scoped=true&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/layouts/ViewWalletInfoLayout/ViewWalletInfoLayout.vue","mtime":1573477612088},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"view-wallet-info-layout\" },\n    [\n      _c(\"interface-balance-modal\", {\n        ref: \"balance\",\n        attrs: { balance: _vm.balance }\n      }),\n      _c(\"view-private-key-modal\", { ref: \"viewPriv\" }),\n      _c(\"print-modal\", {\n        ref: \"printModal\",\n        attrs: { address: _vm.account.address }\n      }),\n      _vm._m(0),\n      _c(\"div\", { staticClass: \"wallet-info-container\" }, [\n        _c(\"div\", { staticClass: \"wallet-info\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"wallet-info-header\" },\n            [\n              _c(\"h3\", [_vm._v(\"Wallet Information\")]),\n              _c(\"router-link\", { attrs: { to: \"/interface\" } }, [\n                _vm._v(\"Access Wallet\")\n              ])\n            ],\n            1\n          ),\n          _c(\"div\", { staticClass: \"balance-container\" }, [\n            _c(\"div\", { staticClass: \"balance-main-container\" }, [\n              _c(\"h4\", [_vm._v(\"Balance\")]),\n              _c(\"div\", { staticClass: \"balance-and-buttons\" }, [\n                _c(\"p\", [\n                  _c(\n                    \"b\",\n                    {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: !_vm.fetchingBalance,\n                          expression: \"!fetchingBalance\"\n                        }\n                      ]\n                    },\n                    [_vm._v(_vm._s(_vm.balance))]\n                  ),\n                  _c(\"i\", {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: _vm.fetchingBalance,\n                        expression: \"fetchingBalance\"\n                      }\n                    ],\n                    staticClass: \"fa fa-spinner fa-lg fa-spin\"\n                  }),\n                  _vm._v(\"\\n              ETH\\n            \")\n                ]),\n                _c(\"div\", { staticClass: \"balance-button-container\" }, [\n                  _c(\"i\", {\n                    staticClass: \"fa fa-refresh fa-lg\",\n                    on: { click: _vm.fetchBalance }\n                  }),\n                  _c(\"img\", {\n                    attrs: {\n                      src: require(\"@/assets/images/icons/more-black.svg\")\n                    },\n                    on: { click: _vm.openBalance }\n                  })\n                ])\n              ])\n            ])\n          ]),\n          _c(\"div\", { staticClass: \"account-details\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"blockie-container\" },\n              [\n                _c(\"blockie\", {\n                  attrs: {\n                    address: _vm.account.address,\n                    width: \"80px\",\n                    height: \"80px\"\n                  }\n                }),\n                _c(\n                  \"h3\",\n                  {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: _vm.hasNickname,\n                        expression: \"hasNickname\"\n                      }\n                    ]\n                  },\n                  [_vm._v(_vm._s(_vm.account.nickname) + \"'s wallet\")]\n                ),\n                _c(\"div\", { staticClass: \"address-copy-container\" }, [\n                  _c(\"input\", {\n                    ref: \"copyAddress\",\n                    domProps: { value: _vm.account.address }\n                  }),\n                  _c(\"p\", [\n                    _vm._v(_vm._s(_vm._f(\"concatAddr\")(_vm.account.address)))\n                  ]),\n                  _c(\"img\", {\n                    attrs: {\n                      src: require(\"@/assets/images/icons/copy-colored.svg\")\n                    },\n                    on: { click: _vm.copy }\n                  })\n                ])\n              ],\n              1\n            ),\n            _c(\n              \"div\",\n              { staticClass: \"other-options\" },\n              [\n                _vm._l(_vm.otherOptions, function(option) {\n                  return _c(\n                    \"div\",\n                    {\n                      key: option.key,\n                      class: [\n                        _vm.disableItem(option.key) ? \"item-disabled\" : \"\",\n                        \"option-item\"\n                      ],\n                      on: { click: option.func }\n                    },\n                    [\n                      _c(\"img\", {\n                        attrs: {\n                          src: _vm.disableItem(option.key)\n                            ? option.iconDisabled\n                            : option.icon\n                        }\n                      }),\n                      _c(\"p\", [_vm._v(_vm._s(option.name))])\n                    ]\n                  )\n                }),\n                _c(\"a\", {\n                  ref: \"downloadFile\",\n                  attrs: {\n                    href: _vm.walletJson,\n                    download: _vm.filename,\n                    target: \"_blank\"\n                  }\n                })\n              ],\n              2\n            )\n          ])\n        ]),\n        _c(\n          \"div\",\n          { staticClass: \"wallet-tokens\" },\n          [\n            _c(\"interface-tokens\", {\n              attrs: {\n                tokens: _vm.tokens,\n                \"get-token-balance\": _vm.getTokenBalance,\n                \"received-tokens\": !_vm.loading,\n                \"reset-token-selection\": _vm.setTokensWithBalance,\n                \"fetch-tokens\": _vm.fetchTokens,\n                ads: false,\n                address: _vm.account.address\n              }\n            })\n          ],\n          1\n        )\n      ])\n    ],\n    1\n  )\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"title\" }, [\n      _c(\"h2\", [_vm._v(\"View Wallet Info\")]),\n      _c(\"p\", [\n        _vm._v(\n          \"\\n      Check your transaction history, download a new keystore file, print a\\n      paper wallet, and more!\\n    \"\n        )\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}