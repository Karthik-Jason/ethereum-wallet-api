{"remainingRequest":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/layouts/InterfaceLayout/components/InterfaceBalance/InterfaceBalance.vue?vue&type=style&index=0&id=2f239be1&lang=scss&scoped=true&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/layouts/InterfaceLayout/components/InterfaceBalance/InterfaceBalance.vue","mtime":1573477611964},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import 'InterfaceBalance.scss';\n",{"version":3,"sources":["InterfaceBalance.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgHA","file":"InterfaceBalance.vue","sourceRoot":"src/layouts/InterfaceLayout/components/InterfaceBalance","sourcesContent":["<template>\n  <div class=\"info-block-container\">\n    <interface-balance-modal ref=\"balance\" :balance=\"balance\" />\n    <div class=\"info-block balance\">\n      <div class=\"block-image\">\n        <div class=\"icon-border\">\n          <img alt class=\"icon\" src=\"~@/assets/images/icons/wallet.svg\" />\n        </div>\n      </div>\n      <div class=\"block-content\">\n        <div class=\"information-container\">\n          <h2>{{ $t('common.balance') }}</h2>\n          <div class=\"balance-text-container\">\n            <div v-show=\"balance !== undefined\" class=\"balance-text\">\n              <p>\n                {{ balance }}\n                <span>\n                  {{ network.type.currencyName }}\n                </span>\n              </p>\n            </div>\n            <i v-show=\"balance === undefined\" class=\"fa fa-spin fa-spinner\" />\n          </div>\n        </div>\n        <div class=\"icon-container\">\n          <b-btn\n            id=\"balanceCheck\"\n            class=\"custom-tooltip\"\n            @click=\"balanceModalOpen\"\n          >\n            <img alt src=\"~@/assets/images/icons/more.svg\" />\n          </b-btn>\n          <b-btn\n            id=\"refreshBalance\"\n            class=\"custom-tooltip\"\n            @click=\"fetchBalance\"\n          >\n            <img\n              v-show=\"!fetchingBalance\"\n              alt\n              src=\"~@/assets/images/icons/change.svg\"\n            />\n            <i v-show=\"fetchingBalance\" class=\"fa fa-lg fa-spinner fa-spin\" />\n          </b-btn>\n          <b-popover\n            content=\"Check Balance\"\n            target=\"balanceCheck\"\n            placement=\"top\"\n            triggers=\"hover\"\n            title\n          />\n          <b-popover\n            content=\"Refresh Balance\"\n            target=\"refreshBalance\"\n            placement=\"top\"\n            triggers=\"hover\"\n            title\n          />\n        </div>\n        <!-- .icon-container -->\n      </div>\n      <!-- .block-content -->\n    </div>\n  </div>\n</template>\n\n<script>\nimport InterfaceBalanceModal from '../InterfaceBalanceModal';\nimport { mapState } from 'vuex';\nexport default {\n  components: {\n    'interface-balance-modal': InterfaceBalanceModal\n  },\n  props: {\n    balance: {\n      type: String,\n      default: '0'\n    },\n    getBalance: {\n      type: Function,\n      default: function() {}\n    }\n  },\n  data() {\n    return {\n      fetchingBalance: false\n    };\n  },\n  computed: {\n    ...mapState(['network'])\n  },\n  watch: {\n    balance() {\n      this.fetchingBalance = false;\n    }\n  },\n  methods: {\n    balanceModalOpen() {\n      this.$refs.balance.$refs.balance.show();\n    },\n    fetchBalance() {\n      this.fetchingBalance = true;\n      setTimeout(() => {\n        this.getBalance();\n        this.fetchingBalance = false;\n      }, 1000);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'InterfaceBalance.scss';\n</style>\n"]}]}