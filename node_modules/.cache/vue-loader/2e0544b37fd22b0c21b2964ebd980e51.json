{"remainingRequest":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/containers/HeaderContainer/HeaderContainer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/containers/HeaderContainer/HeaderContainer.vue","mtime":1573477611640},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from 'vuex';\nimport store from 'store';\nimport { Misc, Toast } from '@/helpers';\nimport Blockie from '@/components/Blockie';\nimport NotificationsContainer from '@/containers/NotificationsContainer';\nimport UserReminderButton from '@/components/UserReminderButton';\nimport SettingsModal from '@/components/SettingsModal';\nimport LogoutModal from '@/components/LogoutModal';\nimport IssueLogModal from '@/components/IssueLogModal';\nimport BigNumber from 'bignumber.js';\nimport MobileMenu from './components/MobileMenu';\nimport DisconnectedModal from '@/components/DisconnectedModal';\nimport ExtensionNotification from '@/layouts/ExtensionBrowserAction/containers/ExtensionNotification';\nimport DecisionTree from '@/components/DecisionTree';\n\nconst events = {\n  issueModal: 'issueModal',\n  mewConnectDisconnected: 'mewConnectDisconnected'\n};\n\nexport default {\n  components: {\n    blockie: Blockie,\n    notification: NotificationsContainer,\n    'settings-modal': SettingsModal,\n    'logout-modal': LogoutModal,\n    'issue-log-modal': IssueLogModal,\n    'user-reminder-button': UserReminderButton,\n    'mobile-menu': MobileMenu,\n    'disconnected-modal': DisconnectedModal,\n    'extension-notification': ExtensionNotification,\n    'decision-tree': DecisionTree\n  },\n  data() {\n    const isMewCx = Misc.isMewCx();\n    return {\n      supportedLanguages: [\n        // { name: 'Deutsch', flag: 'de', langCode: 'de_DL' },\n        // { name: 'Ελληνικά', flag: 'gr', langCode: 'gr_GR' },\n        { name: 'English', flag: 'en', langCode: 'en_US' },\n        { name: 'Español', flag: 'es', langCode: 'es_ES' },\n        // { name: 'Farsi', flag: 'ir', langCode: 'ir_IR' },\n        // { name: 'Suomi', flag: 'fi', langCode: 'fi_FI' },\n        // { name: 'Magyar', flag: 'hu', langCode: 'hu_HU' },\n        // { name: 'Haitian Creole', flag: 'ht', langCode: 'ht_HT' },\n        // { name: 'Bahasa Indonesia', flag: 'id', langCode: 'id_ID' },\n        // { name: 'Italiano', flag: 'it', langCode: 'it_IT' },\n        { name: '日本語', flag: 'ja', langCode: 'ja_JP' },\n        { name: '한국어', flag: 'ko', langCode: 'ko_KR' },\n        // { name: 'Nederlands', flag: 'nl', langCode: 'nl_NL' },\n        // { name: 'Norsk Bokmål', flag: 'no', langCode: 'no_NO' },\n        // { name: 'Polski', flag: 'pl', langCode: 'pl_PL' },\n        // { name: 'Português', flag: 'pt', langCode: 'pt_PT' },\n        { name: 'Русский', flag: 'ru', langCode: 'ru_RU' },\n        // { name: 'ภาษาไทย', flag: 'th', langCode: 'th_TH' },\n        // { name: 'Türkçe', flag: 'tr', langCode: 'tr_TR' },\n        // { name: 'Tiếng Việt', flag: 'vn', langCode: 'vn_VN' },\n        { name: '简体中文', flag: 'zh-Hans', langCode: 'zh_CN' },\n        { name: '繁體中文', flag: 'tw', langCode: 'zh_TW' }\n      ],\n      currentName: 'English',\n      currentFlag: 'en',\n      isPageOnTop: true,\n      isMobileMenuOpen: false,\n      isHomePage: true,\n      showGetFreeWallet: false,\n      gasPrice: '0',\n      error: {},\n      resolver: () => {},\n      isMewCx: isMewCx,\n      buildType: BUILD_TYPE\n    };\n  },\n  computed: {\n    ...mapState(['network', 'web3', 'account', 'gettingStartedDone']),\n    showButtons() {\n      if (\n        this.address === null &&\n        (this.$route.fullPath === '/' ||\n          this.$route.fullPath === '/#about-mew' ||\n          this.$route.fullPath === '/#faqs' ||\n          this.$route.fullPath === '/convert-units' ||\n          this.$route.fullPath === '/team')\n      ) {\n        return true;\n      }\n      return false;\n    },\n    explorerUrl() {\n      return this.network.type.blockExplorerAddr.replace(\n        '[[address]]',\n        this.address\n      );\n    },\n    serviceUrl() {\n      return Misc.getService(this.network.type.blockExplorerAddr);\n    },\n    address() {\n      return this.account.address;\n    }\n  },\n  watch: {\n    $route(newVal) {\n      if (newVal.path.includes('interface')) {\n        this.isHomePage = false;\n      } else {\n        this.isHomePage = true;\n      }\n    },\n    address() {\n      this.setHighGasPrice();\n    },\n    web3() {\n      this.setHighGasPrice();\n    }\n  },\n  created() {\n    this.$eventHub.$on('open-settings', this.openSettings);\n  },\n  mounted() {\n    if (Misc.doesExist(store.get('locale'))) {\n      const storedLocale = this.supportedLanguages.find(item => {\n        return item.langCode === store.get('locale');\n      });\n      this._i18n.locale = store.get('locale');\n      this.currentFlag = storedLocale.flag;\n    } else {\n      const storedLocale = this.supportedLanguages.find(item => {\n        return item.langCode === this._i18n.locale;\n      });\n      store.set('locale', storedLocale.langCode);\n      this.currentFlag = storedLocale.flag;\n    }\n\n    this.currentName = this.supportedLanguages.find(\n      item => item.flag === this.currentFlag\n    ).name;\n\n    // On load, if page is not on top, apply small menu and show scroll top button\n    this.onPageScroll();\n\n    // On scroll,  if page is not on top, apply small menu and show scroll top button\n    window.onscroll = () => {\n      this.onPageScroll();\n    };\n\n    this.$eventHub.$on('issueModal', (error, resolve) => {\n      let errorPop = store.get('errorPop') || 0;\n      errorPop += 1;\n      store.set('errorPop', errorPop);\n      if (store.get('neverReport')) {\n        resolve(false);\n      } else {\n        this.$refs.issuelog.$refs.issuelog.show();\n        this.error = error;\n        this.resolver = resolve;\n      }\n    });\n\n    this.$eventHub.$on('mewConnectDisconnected', () => {\n      this.isMobileMenuOpen = false;\n      this.$refs.mewConnectDisconnected.$refs.disconnected.show();\n      this.$refs.mewConnectDisconnected.$refs.disconnected.$on('hidden', () => {\n        this.$router.push('/access-my-wallet');\n      });\n    });\n  },\n  beforeDestroy() {\n    Object.values(events).forEach(evt => {\n      this.$eventHub.$off(evt);\n    });\n    this.$eventHub.$off('open-settings');\n  },\n  methods: {\n    setHighGasPrice() {\n      this.web3.eth\n        .getGasPrice()\n        .then(res => {\n          this.gasPrice = new BigNumber(res).toString();\n        })\n        .catch(e => {\n          Toast.responseHandler(e, Toast.ERROR);\n        });\n    },\n    openSettings() {\n      this.$refs.settings.$refs.settings.show();\n      this.$refs.settings.$refs.settings.$on('hidden', () => {\n        this.isMobileMenuOpen = false;\n      });\n    },\n    languageItemClicked(e) {\n      const code = e.target.parentNode.getAttribute('data-language-code');\n      const flag = e.target.parentNode.getAttribute('data-flag-name');\n\n      this.$i18n.locale = code;\n      this.currentName = e.target.innerText.replace(/^\\s+|\\s+$|\\s+(?=\\s)/g, '');\n      this.currentFlag = flag;\n      store.set('locale', code);\n    },\n    logout() {\n      this.$refs.logout.$refs.logout.show();\n      this.$refs.logout.$refs.logout.$on('hidden', () => {\n        this.isMobileMenuOpen = false;\n      });\n    },\n    onPageScroll() {\n      const topPos = this.$root.$el.getBoundingClientRect().top;\n      this.isPageOnTop = !(topPos < -150);\n      if (topPos < -150) {\n        this.showGetFreeWallet = true;\n      }\n    }\n  }\n};\n",{"version":3,"sources":["HeaderContainer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HeaderContainer.vue","sourceRoot":"src/containers/HeaderContainer","sourcesContent":["<template>\n  <div class=\"header\">\n    <decision-tree />\n    <router-link\n      v-show=\"\n        $route.fullPath === '/create-wallet' ||\n          ($route.fullPath === '/access-my-wallet' && !isMewCx)\n      \"\n      to=\"/getting-started\"\n    >\n      <user-reminder-button />\n    </router-link>\n    <mobile-menu\n      :opensettings=\"openSettings\"\n      :logout=\"logout\"\n      :build-type=\"buildType\"\n    />\n\n    <!-- Modals ***************************************** -->\n    <disconnected-modal ref=\"mewConnectDisconnected\" />\n    <settings-modal\n      v-if=\"address !== null\"\n      ref=\"settings\"\n      :gas-price=\"gasPrice\"\n      :address=\"address\"\n    />\n    <logout-modal ref=\"logout\" />\n    <issue-log-modal\n      v-if=\"Object.keys.length > 0\"\n      ref=\"issuelog\"\n      :error=\"error\"\n      :resolver=\"resolver\"\n    />\n\n    <!-- Desktop menu *********************************** -->\n    <div class=\"fixed-header-wrap\">\n      <div\n        ref=\"fixedHeader\"\n        :class=\"[\n          !isPageOnTop && !isMobileMenuOpen && 'tiny-header',\n          isMobileMenuOpen && 'fixed-header-border-bottom'\n        ]\"\n        class=\"fixed-header\"\n      >\n        <div\n          :class=\"[\n            (isMobileMenuOpen || !isPageOnTop) && 'mobile-menu-boxshadow',\n            address !== null ? '' : 'page-container'\n          ]\"\n        >\n          <div class=\"header-container\">\n            <router-link\n              aria-label=\"Home\"\n              to=\"/\"\n              @click.native=\"isMobileMenuOpen = false\"\n            >\n              <div class=\"top-logo\">\n                <img\n                  :class=\"[\n                    !isPageOnTop && !isMobileMenuOpen\n                      ? `logo-small${!isMewCx ? '' : '-' + buildType}`\n                      : '',\n                    `logo-large${!isMewCx ? '' : '-' + buildType}`\n                  ]\"\n                  :src=\"\n                    require(`@/assets/images/short-hand-logo-${buildType}.png`)\n                  \"\n                  alt\n                />\n              </div>\n            </router-link>\n            <div class=\"top-menu\">\n              <b-nav>\n                <b-nav-item\n                  href=\"https://ccswap.myetherwallet.com/#/\"\n                  target=\"_blank\"\n                  class=\"buy-eth\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <img\n                    alt\n                    class=\"buy-eth-icon\"\n                    src=\"@/assets/images/icons/buy-eth.svg\"\n                  />\n                  Buy ETH\n                </b-nav-item>\n                <b-nav-item v-if=\"isHomePage\" to=\"/\" exact>{{\n                  $t('header.home')\n                }}</b-nav-item>\n                <b-nav-item v-if=\"isHomePage && !isMewCx\" to=\"/#about-mew\">\n                  {{ $t('header.about') }}\n                </b-nav-item>\n                <b-nav-item-dropdown\n                  v-if=\"address !== null\"\n                  right\n                  no-caret\n                  class=\"tx-history-menu\"\n                >\n                  <template slot=\"button-content\">\n                    <p>Transaction History</p>\n                  </template>\n                  <b-dropdown-item :href=\"explorerUrl\" target=\"_blank\">\n                    <p>{{ serviceUrl }} ({{ network.type.name }})</p>\n                  </b-dropdown-item>\n                  <b-dropdown-item\n                    v-show=\"network.type.name === 'ETH'\"\n                    :href=\"'https://ethplorer.io/address/' + address\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >Ethplorer (Tokens)</b-dropdown-item\n                  >\n                </b-nav-item-dropdown>\n                <b-nav-item v-if=\"!isMewCx\" to=\"/#faqs\">{{\n                  $t('common.faqs')\n                }}</b-nav-item>\n                <div v-show=\"!isMewCx\" class=\"language-menu-container\">\n                  <div class=\"arrows\">\n                    <i class=\"fa fa-angle-down\" aria-hidden=\"true\" />\n                  </div>\n                  <b-nav-item-dropdown\n                    class=\"language-menu\"\n                    extra-toggle-classes=\"nav-link-custom\"\n                    right\n                  >\n                    <template slot=\"button-content\">\n                      <div class=\"current-language-flag\">\n                        <img\n                          v-if=\"currentFlag !== null\"\n                          :src=\"\n                            require(`@/assets/images/flags/${currentFlag}.svg`)\n                          \"\n                          alt\n                          class=\"show\"\n                        />\n                        <p>{{ currentName }}</p>\n                      </div>\n                    </template>\n                    <b-dropdown-item\n                      v-for=\"language in supportedLanguages\"\n                      :active=\"$root._i18n.locale === language.langCode\"\n                      :key=\"language.key\"\n                      :data-language-code=\"language.langCode\"\n                      :data-flag-name=\"language.flag\"\n                      @click=\"languageItemClicked\"\n                      >{{ language.name }}</b-dropdown-item\n                    >\n                  </b-nav-item-dropdown>\n                </div>\n                <div class=\"notification-menu-container\">\n                  <notification\n                    v-if=\"\n                      $route.fullPath.includes('view-wallet-info') ||\n                        $route.fullPath.includes('interface')\n                    \"\n                    ref=\"notification\"\n                  />\n                  <extension-notification\n                    v-if=\"\n                      isMewCx &&\n                        !$route.fullPath.includes('view-wallet-info') &&\n                        !$route.fullPath.includes('interface')\n                    \"\n                    ref=\"extensionNotification\"\n                  />\n                </div>\n                <b-nav-item\n                  v-if=\"showButtons && !isPageOnTop && !isMewCx\"\n                  :class=\"[\n                    showGetFreeWallet ? 'show' : 'hide',\n                    'get-free-wallet first-button nopadding'\n                  ]\"\n                  to=\"/create-wallet\"\n                >\n                  <div class=\"get-free-wallet-button\">New Wallet</div>\n                </b-nav-item>\n                <b-nav-item\n                  v-if=\"showButtons && !isPageOnTop && !isMewCx\"\n                  :class=\"[\n                    showGetFreeWallet ? 'show' : 'hide',\n                    'get-free-wallet nopadding'\n                  ]\"\n                  to=\"/access-my-wallet\"\n                >\n                  <div class=\"access-button\">Access</div>\n                </b-nav-item>\n                <b-nav-item-dropdown\n                  v-if=\"address !== null\"\n                  right\n                  no-caret\n                  extra-toggle-classes=\"identicon-dropdown\"\n                  class=\"settings-menu\"\n                >\n                  <template slot=\"button-content\">\n                    <div class=\"settings-container\">\n                      <blockie\n                        :address=\"address\"\n                        width=\"35px\"\n                        height=\"35px\"\n                        class=\"blockie-image\"\n                      />\n                      <i class=\"fa fa-angle-down\" aria-hidden=\"true\" />\n                    </div>\n                  </template>\n                  <b-dropdown-item @click=\"openSettings\"\n                    >Settings</b-dropdown-item\n                  >\n                  <b-dropdown-item @click=\"logout\">Log out</b-dropdown-item>\n                </b-nav-item-dropdown>\n              </b-nav>\n            </div>\n            <!-- .top-menu -->\n          </div>\n          <!-- .header-container -->\n        </div>\n        <!-- .page-container -->\n      </div>\n    </div>\n    <!-- Desktop menu *********************************** -->\n  </div>\n  <!-- .header -->\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport store from 'store';\nimport { Misc, Toast } from '@/helpers';\nimport Blockie from '@/components/Blockie';\nimport NotificationsContainer from '@/containers/NotificationsContainer';\nimport UserReminderButton from '@/components/UserReminderButton';\nimport SettingsModal from '@/components/SettingsModal';\nimport LogoutModal from '@/components/LogoutModal';\nimport IssueLogModal from '@/components/IssueLogModal';\nimport BigNumber from 'bignumber.js';\nimport MobileMenu from './components/MobileMenu';\nimport DisconnectedModal from '@/components/DisconnectedModal';\nimport ExtensionNotification from '@/layouts/ExtensionBrowserAction/containers/ExtensionNotification';\nimport DecisionTree from '@/components/DecisionTree';\n\nconst events = {\n  issueModal: 'issueModal',\n  mewConnectDisconnected: 'mewConnectDisconnected'\n};\n\nexport default {\n  components: {\n    blockie: Blockie,\n    notification: NotificationsContainer,\n    'settings-modal': SettingsModal,\n    'logout-modal': LogoutModal,\n    'issue-log-modal': IssueLogModal,\n    'user-reminder-button': UserReminderButton,\n    'mobile-menu': MobileMenu,\n    'disconnected-modal': DisconnectedModal,\n    'extension-notification': ExtensionNotification,\n    'decision-tree': DecisionTree\n  },\n  data() {\n    const isMewCx = Misc.isMewCx();\n    return {\n      supportedLanguages: [\n        // { name: 'Deutsch', flag: 'de', langCode: 'de_DL' },\n        // { name: 'Ελληνικά', flag: 'gr', langCode: 'gr_GR' },\n        { name: 'English', flag: 'en', langCode: 'en_US' },\n        { name: 'Español', flag: 'es', langCode: 'es_ES' },\n        // { name: 'Farsi', flag: 'ir', langCode: 'ir_IR' },\n        // { name: 'Suomi', flag: 'fi', langCode: 'fi_FI' },\n        // { name: 'Magyar', flag: 'hu', langCode: 'hu_HU' },\n        // { name: 'Haitian Creole', flag: 'ht', langCode: 'ht_HT' },\n        // { name: 'Bahasa Indonesia', flag: 'id', langCode: 'id_ID' },\n        // { name: 'Italiano', flag: 'it', langCode: 'it_IT' },\n        { name: '日本語', flag: 'ja', langCode: 'ja_JP' },\n        { name: '한국어', flag: 'ko', langCode: 'ko_KR' },\n        // { name: 'Nederlands', flag: 'nl', langCode: 'nl_NL' },\n        // { name: 'Norsk Bokmål', flag: 'no', langCode: 'no_NO' },\n        // { name: 'Polski', flag: 'pl', langCode: 'pl_PL' },\n        // { name: 'Português', flag: 'pt', langCode: 'pt_PT' },\n        { name: 'Русский', flag: 'ru', langCode: 'ru_RU' },\n        // { name: 'ภาษาไทย', flag: 'th', langCode: 'th_TH' },\n        // { name: 'Türkçe', flag: 'tr', langCode: 'tr_TR' },\n        // { name: 'Tiếng Việt', flag: 'vn', langCode: 'vn_VN' },\n        { name: '简体中文', flag: 'zh-Hans', langCode: 'zh_CN' },\n        { name: '繁體中文', flag: 'tw', langCode: 'zh_TW' }\n      ],\n      currentName: 'English',\n      currentFlag: 'en',\n      isPageOnTop: true,\n      isMobileMenuOpen: false,\n      isHomePage: true,\n      showGetFreeWallet: false,\n      gasPrice: '0',\n      error: {},\n      resolver: () => {},\n      isMewCx: isMewCx,\n      buildType: BUILD_TYPE\n    };\n  },\n  computed: {\n    ...mapState(['network', 'web3', 'account', 'gettingStartedDone']),\n    showButtons() {\n      if (\n        this.address === null &&\n        (this.$route.fullPath === '/' ||\n          this.$route.fullPath === '/#about-mew' ||\n          this.$route.fullPath === '/#faqs' ||\n          this.$route.fullPath === '/convert-units' ||\n          this.$route.fullPath === '/team')\n      ) {\n        return true;\n      }\n      return false;\n    },\n    explorerUrl() {\n      return this.network.type.blockExplorerAddr.replace(\n        '[[address]]',\n        this.address\n      );\n    },\n    serviceUrl() {\n      return Misc.getService(this.network.type.blockExplorerAddr);\n    },\n    address() {\n      return this.account.address;\n    }\n  },\n  watch: {\n    $route(newVal) {\n      if (newVal.path.includes('interface')) {\n        this.isHomePage = false;\n      } else {\n        this.isHomePage = true;\n      }\n    },\n    address() {\n      this.setHighGasPrice();\n    },\n    web3() {\n      this.setHighGasPrice();\n    }\n  },\n  created() {\n    this.$eventHub.$on('open-settings', this.openSettings);\n  },\n  mounted() {\n    if (Misc.doesExist(store.get('locale'))) {\n      const storedLocale = this.supportedLanguages.find(item => {\n        return item.langCode === store.get('locale');\n      });\n      this._i18n.locale = store.get('locale');\n      this.currentFlag = storedLocale.flag;\n    } else {\n      const storedLocale = this.supportedLanguages.find(item => {\n        return item.langCode === this._i18n.locale;\n      });\n      store.set('locale', storedLocale.langCode);\n      this.currentFlag = storedLocale.flag;\n    }\n\n    this.currentName = this.supportedLanguages.find(\n      item => item.flag === this.currentFlag\n    ).name;\n\n    // On load, if page is not on top, apply small menu and show scroll top button\n    this.onPageScroll();\n\n    // On scroll,  if page is not on top, apply small menu and show scroll top button\n    window.onscroll = () => {\n      this.onPageScroll();\n    };\n\n    this.$eventHub.$on('issueModal', (error, resolve) => {\n      let errorPop = store.get('errorPop') || 0;\n      errorPop += 1;\n      store.set('errorPop', errorPop);\n      if (store.get('neverReport')) {\n        resolve(false);\n      } else {\n        this.$refs.issuelog.$refs.issuelog.show();\n        this.error = error;\n        this.resolver = resolve;\n      }\n    });\n\n    this.$eventHub.$on('mewConnectDisconnected', () => {\n      this.isMobileMenuOpen = false;\n      this.$refs.mewConnectDisconnected.$refs.disconnected.show();\n      this.$refs.mewConnectDisconnected.$refs.disconnected.$on('hidden', () => {\n        this.$router.push('/access-my-wallet');\n      });\n    });\n  },\n  beforeDestroy() {\n    Object.values(events).forEach(evt => {\n      this.$eventHub.$off(evt);\n    });\n    this.$eventHub.$off('open-settings');\n  },\n  methods: {\n    setHighGasPrice() {\n      this.web3.eth\n        .getGasPrice()\n        .then(res => {\n          this.gasPrice = new BigNumber(res).toString();\n        })\n        .catch(e => {\n          Toast.responseHandler(e, Toast.ERROR);\n        });\n    },\n    openSettings() {\n      this.$refs.settings.$refs.settings.show();\n      this.$refs.settings.$refs.settings.$on('hidden', () => {\n        this.isMobileMenuOpen = false;\n      });\n    },\n    languageItemClicked(e) {\n      const code = e.target.parentNode.getAttribute('data-language-code');\n      const flag = e.target.parentNode.getAttribute('data-flag-name');\n\n      this.$i18n.locale = code;\n      this.currentName = e.target.innerText.replace(/^\\s+|\\s+$|\\s+(?=\\s)/g, '');\n      this.currentFlag = flag;\n      store.set('locale', code);\n    },\n    logout() {\n      this.$refs.logout.$refs.logout.show();\n      this.$refs.logout.$refs.logout.$on('hidden', () => {\n        this.isMobileMenuOpen = false;\n      });\n    },\n    onPageScroll() {\n      const topPos = this.$root.$el.getBoundingClientRect().top;\n      this.isPageOnTop = !(topPos < -150);\n      if (topPos < -150) {\n        this.showGetFreeWallet = true;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'HeaderContainer.scss';\n</style>\n"]}]}