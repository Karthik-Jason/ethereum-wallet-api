{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/layouts/ConvertUnits/components/UnitInput/UnitInput.vue?vue&type=style&index=0&id=83d33176&lang=scss&scoped=true&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/layouts/ConvertUnits/components/UnitInput/UnitInput.vue","mtime":1574664278290},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/css-loader/index.js","mtime":1574664275862},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1574664277774},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/postcss-loader/src/index.js","mtime":1574664277114},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/sass-loader/dist/cjs.js","mtime":1574664277374},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js","mtime":1574664277774}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import 'UnitInput.scss';\n",{"version":3,"sources":["UnitInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqIA","file":"UnitInput.vue","sourceRoot":"src/layouts/ConvertUnits/components/UnitInput","sourcesContent":["<template>\n  <div class=\"unit-input\">\n    <div class=\"wrap\">\n      <div class=\"block-left\">\n        <div class=\"select-block\">\n          <dropdown-unit-selector\n            :options=\"options\"\n            :current-selected=\"selectedLeft\"\n            :left=\"true\"\n            @updateSelected=\"updateCurrency\"\n          />\n        </div>\n        <div>\n          <input\n            v-model=\"valueLeft\"\n            type=\"number\"\n            step=\"any\"\n            placeholder=\"Amount\"\n          />\n        </div>\n      </div>\n\n      <div class=\"block-center\">\n        <div class=\"convert-icon\">\n          <img src=\"~@/assets/images/icons/swap-widget.svg\" alt />\n        </div>\n      </div>\n\n      <div class=\"block-right\">\n        <div class=\"select-block\">\n          <dropdown-unit-selector\n            :options=\"options\"\n            :current-selected=\"selectedRight\"\n            :left=\"false\"\n            @updateSelected=\"updateCurrency\"\n          />\n        </div>\n        <div>\n          <input\n            v-model=\"valueRight\"\n            type=\"number\"\n            placeholder=\"Amount\"\n            step=\"any\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { BigNumber } from 'bignumber.js';\nimport { mapState } from 'vuex';\nimport DropDownUnitSelector from '../DropDownUnitSelector';\nimport utils from 'web3-utils';\n\nexport default {\n  components: {\n    'dropdown-unit-selector': DropDownUnitSelector\n  },\n  props: {\n    options: {\n      type: Array,\n      default: function() {\n        return [];\n      }\n    }\n  },\n  data() {\n    return {\n      selectedLeft: 'wei',\n      selectedRight: 'ether',\n      valueLeft: 1000000000000000000,\n      valueRight: 1\n    };\n  },\n  computed: {\n    ...mapState(['web3'])\n  },\n  watch: {\n    valueLeft(newVal) {\n      this.valueRight = this.convertFromTo(\n        newVal,\n        this.selectedLeft,\n        this.selectedRight\n      );\n    },\n    valueRight(newVal) {\n      this.valueLeft = this.convertFromTo(\n        newVal,\n        this.selectedRight,\n        this.selectedLeft\n      );\n    },\n    selectedLeft(newVal) {\n      this.valueRight = this.convertFromTo(\n        this.valueLeft,\n        newVal,\n        this.selectedRight\n      );\n    },\n    selectedRight(newVal) {\n      this.valueLeft = this.convertFromTo(\n        this.valueRight,\n        newVal,\n        this.selectedLeft\n      );\n    }\n  },\n  methods: {\n    getValueOfUnit(unit) {\n      unit = unit ? unit.toLowerCase() : 'ether';\n      const unitValue = utils.unitMap[unit];\n      return new BigNumber(unitValue, 10);\n    },\n    convertFromTo(amt, from, to) {\n      return new BigNumber(String(amt))\n        .times(this.getValueOfUnit(from))\n        .div(this.getValueOfUnit(to))\n        .toString(10);\n    },\n    updateCurrency(e) {\n      if (e[1] === 'left') {\n        this.selectedLeft = e[0];\n      } else {\n        this.selectedRight = e[0];\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'UnitInput.scss';\n</style>\n"]}]}