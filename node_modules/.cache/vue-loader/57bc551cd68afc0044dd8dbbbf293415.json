{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/containers/HeaderContainer/components/MobileMenu/components/MobileNetworkBlock/MobileNetworkBlock.vue?vue&type=template&id=139e424c&scoped=true&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/containers/HeaderContainer/components/MobileMenu/components/MobileNetworkBlock/MobileNetworkBlock.vue","mtime":1573477611640},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"mobile-network-block\" },\n    [\n      _c(\"interface-network-modal\", { ref: \"interfaceNetworkModal\" }),\n      _c(\"div\", { staticClass: \"wrap\" }, [\n        _c(\"div\", { staticClass: \"top-block\" }, [\n          _c(\"div\", { staticClass: \"block-title\" }, [\n            _vm._v(\"\\n        \" + _vm._s(_vm.$t(\"common.network\")) + \"\\n      \")\n          ]),\n          _c(\n            \"button\",\n            {\n              staticClass: \"change-button\",\n              on: { click: _vm.networkModalOpen }\n            },\n            [\n              _vm._v(\n                \"\\n        \" + _vm._s(_vm.$t(\"common.change\")) + \"\\n      \"\n              )\n            ]\n          )\n        ]),\n        _c(\"div\", { staticClass: \"bottom-block\" }, [\n          _vm.account.identifier !== _vm.identifier\n            ? _c(\"p\", { staticClass: \"network\" }, [\n                _vm._v(\n                  \"\\n        \" +\n                    _vm._s(\n                      _vm.network.service + \"(\" + _vm.network.type.name + \")\"\n                    ) +\n                    \"\\n      \"\n                )\n              ])\n            : _vm._e(),\n          _c(\"p\", { staticClass: \"last-block\" }, [\n            _vm._v(\n              \"\\n        \" +\n                _vm._s(_vm.$t(\"interface.lastBlock\")) +\n                \"# : \" +\n                _vm._s(_vm.blockNumber) +\n                \"\\n      \"\n            )\n          ]),\n          _c(\"i\", {\n            directives: [\n              {\n                name: \"show\",\n                rawName: \"v-show\",\n                value: _vm.parsedNetwork === \"\",\n                expression: \"parsedNetwork === ''\"\n              }\n            ],\n            staticClass: \"fa fa-spinner fa-spin\"\n          })\n        ])\n      ])\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}