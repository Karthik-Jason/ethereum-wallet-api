{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/components/Buttons/CheckBox/CheckBox.vue?vue&type=style&index=0&id=9cfa9dfe&lang=scss&scoped=true&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/components/Buttons/CheckBox/CheckBox.vue","mtime":1574664278190},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/css-loader/index.js","mtime":1574664275862},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1574664277774},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/postcss-loader/src/index.js","mtime":1574664277114},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/sass-loader/dist/cjs.js","mtime":1574664277374},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js","mtime":1574664277774}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import 'CheckBox.scss';\n",{"version":3,"sources":["CheckBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA","file":"CheckBox.vue","sourceRoot":"src/components/Buttons/CheckBox","sourcesContent":["<template>\n  <div class=\"check-box\">\n    <label class=\"check-box-container\">\n      <input type=\"checkbox\" @click=\"checkBoxClicked\" /><span\n        class=\"checkmark\"\n      ></span>\n      <span v-if=\"terms\" class=\"terms\">\n        To access my wallet, I accept\n        <router-link :to=\"{ name: 'TermsAndConditionsLayout' }\" target=\"_blank\">\n          Terms\n        </router-link>\n        .</span\n      >\n    </label>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    terms: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      checkboxChecked: false\n    };\n  },\n  methods: {\n    checkBoxClicked() {\n      this.checkboxChecked = !this.checkboxChecked;\n      this.$emit('changeStatus', this.checkboxChecked);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'CheckBox.scss';\n</style>\n"]}]}