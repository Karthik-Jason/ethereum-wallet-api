{"remainingRequest":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/dapps/MakerDai/containers/ProxyMigrateCDP/ProxyMigrateCDP.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/dapps/MakerDai/containers/ProxyMigrateCDP/ProxyMigrateCDP.vue","mtime":1573477611656},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from 'vuex';\nimport InterfaceContainerTitle from '@/layouts/InterfaceLayout/components/InterfaceContainerTitle';\nimport InterfaceBottomText from '@/components/InterfaceBottomText';\nimport BottomHelpLink from '@/components/BottomHelpLink';\nimport Blockie from '@/components/Blockie';\nimport CloseCdpModal from '../../components/CloseCdpModal';\nimport MoveCdpModal from '../../components/MoveCdpModal';\nimport {\n  displayFixedPercent,\n  displayFixedValue,\n  displayPercentValue\n} from '../../helpers';\n\nimport BigNumber from 'bignumber.js';\n\nconst toBigNumber = num => {\n  return new BigNumber(num);\n};\n\nexport default {\n  components: {\n    'interface-container-title': InterfaceContainerTitle,\n    'interface-bottom-text': InterfaceBottomText,\n    'close-cdp-modal': CloseCdpModal,\n    'move-cdp-modal': MoveCdpModal,\n    blockie: Blockie,\n    'help-link': BottomHelpLink\n  },\n  props: {\n    openCloseModal: {\n      type: Boolean,\n      default: false\n    },\n    openMoveModal: {\n      type: Boolean,\n      default: false\n    },\n    tokensWithBalance: {\n      type: Array,\n      default: function() {\n        return [];\n      }\n    },\n    getBalance: {\n      type: Function,\n      default: function() {}\n    },\n    makerActive: {\n      type: Boolean,\n      default: false\n    },\n    cdps: {\n      type: Array,\n      default: function() {\n        return [];\n      }\n    },\n    availableCdps: {\n      type: Object,\n      default: function() {\n        return {};\n      }\n    },\n    getCdp: {\n      type: Function,\n      default: function() {}\n    },\n    hasCdp: {\n      type: Function,\n      default: function() {}\n    },\n    values: {\n      type: Object,\n      default: function() {\n        return {\n          maxPethDraw: '',\n          maxEthDraw: '',\n          maxUsdDraw: '',\n          ethCollateral: '',\n          pethCollateral: '',\n          usdCollateral: '',\n          debtValue: '',\n          maxDai: '',\n          collateralRatio: '',\n          cdpId: '',\n          stabilityFee: '',\n          minEth: '',\n          liquidationRatio: '',\n          wethToPethRatio: '',\n          liquidationPenalty: '',\n          targetPrice: '',\n          pethPrice: ''\n        };\n      }\n    },\n    ethPrice: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    pethPrice: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    liquidationPenalty: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    stabilityFee: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    liquidationRatio: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    wethToPethRatio: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    pethMin: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    priceService: {\n      type: Object,\n      default: function() {\n        return {};\n      }\n    },\n    cdpService: {\n      type: Object,\n      default: function() {\n        return {};\n      }\n    },\n    proxyService: {\n      type: Object,\n      default: function() {\n        return {};\n      }\n    }\n  },\n  data() {\n    return {\n      loaded: false,\n      ethQty: 0,\n      daiQty: 0,\n      selectedCdp: '',\n      cdpId: '',\n      cdp: {},\n      maxDaiDraw: toBigNumber(0),\n      maxWithDraw: toBigNumber(0),\n      maxWithDrawUSD: toBigNumber(0),\n      maxPethDraw: toBigNumber(0),\n      maxEthDraw: toBigNumber(0)\n    };\n  },\n  computed: {\n    ...mapState(['account', 'gasPrice', 'web3', 'network', 'ens']),\n    collateralRatioColoring() {\n      if (this.values) {\n        if (this.values.collateralRatio >= 2) {\n          return 'green';\n        } else if (\n          this.values.collateralRatio >= 1.75 &&\n          this.values.collateralRatio < 2\n        ) {\n          return 'orange';\n        }\n        return 'red';\n      }\n      return '';\n    },\n    liquidationPriceDisplay() {\n      if (this.values) {\n        const value = displayFixedValue(this.values.liquidationPrice, 2);\n        if (new BigNumber(value).gt(0)) {\n          return value;\n        }\n        return '--';\n      }\n      return '--';\n    },\n    collaterlizationRatioDisplay() {\n      if (this.values) {\n        return displayFixedPercent(this.values.collateralRatio);\n      }\n      return '--';\n    },\n    cdpIdDisplay() {\n      if (this.values) {\n        return this.values.cdpId;\n      }\n      return '--';\n    },\n    liquidationRatioDisplay() {\n      if (this.values) {\n        return displayFixedValue(displayPercentValue(this.liquidationRatio));\n      }\n      return '--';\n    },\n    liquidationPenaltyDisplay() {\n      if (this.values) {\n        return displayFixedValue(displayPercentValue(this.liquidationPenalty));\n      }\n      return '--';\n    },\n    stabilityFeeDisplay() {\n      if (this.values) {\n        return displayFixedValue(displayPercentValue(this.stabilityFee));\n      }\n      return '--';\n    },\n    ethPriceDisplay() {\n      if (this.values) {\n        return displayFixedValue(this.ethPrice, 2);\n      }\n      return '--';\n    },\n    maxPethDrawDisplay() {\n      if (this.values) {\n        return displayFixedValue(this.values.maxPethDraw, 5);\n      }\n      return '--';\n    },\n    zeroDebt() {\n      return toBigNumber(this.values.debtValue).eq(0);\n    },\n    maxEthDrawDisplay() {\n      if (this.values) {\n        return this.values.maxEthDraw;\n      }\n      return '--';\n    },\n    maxUsdDrawDisplay() {\n      if (this.values) {\n        return displayFixedValue(this.values.maxUsdDraw, 2);\n      }\n      return '--';\n    },\n    ethCollateral() {\n      if (this.values) {\n        return displayFixedValue(this.values.ethCollateral, 5, true);\n      }\n      return '--';\n    },\n    pethCollateral() {\n      if (this.values) {\n        return displayFixedValue(this.values.pethCollateral, 5, true);\n      }\n      return '--';\n    },\n    usdCollateral() {\n      if (this.values) {\n        return displayFixedValue(this.values.usdCollateral, 2);\n      }\n      return '--';\n    },\n    debtValueDisplay() {\n      if (this.values) {\n        return displayFixedValue(this.values.debtValue, 2);\n      }\n      return '--';\n    },\n    debtValue() {\n      if (this.values) {\n        return this.values.debtValue;\n      }\n      return '--';\n    },\n    maxDai() {\n      if (this.values) {\n        return this.values.maxDai;\n      }\n      return '--';\n    },\n    maxUsd() {\n      if (this.values) {\n        return displayFixedValue(this.values.maxDai, 2);\n      }\n      return '--';\n    }\n  },\n  async mounted() {\n    this.cdpId = this.$route.params.cdpId;\n    if (this.makerActive) {\n      this.loaded = true;\n      if (this.cdpId) {\n        this.$emit('activeCdpId', this.cdpId);\n      }\n    }\n  },\n  methods: {\n    showClose() {},\n    showMove() {},\n    displayPercentValue,\n    displayFixedValue,\n    async isReady() {},\n    async migrateCdp() {\n      this.$emit('migrateCdp', this.cdpId);\n    }\n  }\n};\n",{"version":3,"sources":["ProxyMigrateCDP.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ProxyMigrateCDP.vue","sourceRoot":"src/dapps/MakerDai/containers/ProxyMigrateCDP","sourcesContent":["<template>\n  <div>\n    <div class=\"manage-container\">\n      <!-- ==================================================== -->\n      <div class=\"title-content-container\">\n        <p class=\"cpd-title\">{{ $t('dappsMaker.cdpPortal') }}</p>\n        <p class=\"cdp-id\">\n          {{ $t('dappsMaker.positionLabel', { value: cdpIdDisplay }) }}\n        </p>\n      </div>\n      <!-- ==================================================== -->\n      <!-- 1st row-->\n      <!-- ==================================================== -->\n      <div class=\"information-blocks\">\n        <div class=\"block-item\">\n          <div class=\"block-title\">\n            <p>{{ $t('dappsMaker.liquidPrice') }} (ETH/USD)</p>\n            <div class=\"blue\">\n              <span class=\"blue-bold\">{{ liquidationPriceDisplay }}</span>\n              USD\n            </div>\n          </div>\n          <div class=\"block-content\">\n            <div class=\"item\">\n              <p>{{ $t('dappsMaker.currentPrice') }}(ETH/USD)</p>\n              <div>{{ ethPriceDisplay }} <span>USD</span></div>\n            </div>\n            <div class=\"item\">\n              <p>{{ $t('dappsMaker.liquidationPenalty') }}</p>\n              <div>{{ liquidationPenaltyDisplay }}%</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"block-item\">\n          <div class=\"block-title\">\n            <p>{{ $t('dappsMaker.collateralRatio') }}</p>\n            <div :class=\"collateralRatioColoring\">\n              <span>{{ collaterlizationRatioDisplay }}%</span>\n            </div>\n          </div>\n          <div class=\"block-content\">\n            <div class=\"item\">\n              <p>{{ $t('dappsMaker.minimumRatio') }}</p>\n              <div>{{ liquidationRatioDisplay }}%</div>\n            </div>\n            <div class=\"item\">\n              <p>{{ $t('dappsMaker.stabilityFee') }}</p>\n              <div>{{ stabilityFeeDisplay }}%</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- ==================================================== -->\n      <!--2nd row-->\n      <!-- ==================================================== -->\n      <div class=\"information-single-block\">\n        <div class=\"block-item\">\n          <div class=\"block-title\">\n            <p>{{ $t('dappsMaker.ethCollateral') }}</p>\n          </div>\n\n          <div class=\"block-content-container\">\n            <div class=\"block-content\">\n              <div class=\"item\">\n                <p>{{ $t('dappsMaker.deposited') }}</p>\n                <div>\n                  {{ ethCollateral }}\n                  <span>ETH</span>\n                </div>\n                <div>\n                  {{ pethCollateral }}\n                  <span>PETH</span> /\n                  {{ usdCollateral }}\n                  <span>USD</span>\n                </div>\n              </div>\n            </div>\n            <div class=\"block-content\">\n              <div class=\"item\">\n                <p>{{ $t('dappsMaker.maxWithDraw') }}</p>\n                <div>\n                  {{ maxEthDrawDisplay }}\n                  <span>ETH</span>\n                </div>\n                <div>\n                  {{ maxPethDrawDisplay }}\n                  <span>PETH</span> /\n                  {{ maxUsdDrawDisplay }}\n                  <span>USD</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- ==================================================== -->\n\n      <!-- 3rd row-->\n      <!-- ==================================================== -->\n      <div class=\"information-single-block\">\n        <div class=\"block-item\">\n          <div class=\"block-title\">\n            <p>{{ $t('dappsMaker.daiPosition') }}</p>\n          </div>\n\n          <div class=\"block-content-container\">\n            <div class=\"block-content\">\n              <div class=\"item\">\n                <p>{{ $t('dappsMaker.generated') }}</p>\n                <div>{{ debtValue }} <span>DAI</span></div>\n                <div>\n                  {{ debtValueDisplay }}\n                  <span>USD</span>\n                </div>\n              </div>\n            </div>\n            <div class=\"block-content\">\n              <div class=\"item\">\n                <p>{{ $t('dappsMaker.maxAvailable') }}</p>\n                <div>\n                  {{ maxDai }}\n                  <span>DAI</span>\n                </div>\n                <div>\n                  {{ maxUsd }}\n                  <span>USD</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- ==================================================== -->\n    </div>\n    <help-link />\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport InterfaceContainerTitle from '@/layouts/InterfaceLayout/components/InterfaceContainerTitle';\nimport InterfaceBottomText from '@/components/InterfaceBottomText';\nimport BottomHelpLink from '@/components/BottomHelpLink';\nimport Blockie from '@/components/Blockie';\nimport CloseCdpModal from '../../components/CloseCdpModal';\nimport MoveCdpModal from '../../components/MoveCdpModal';\nimport {\n  displayFixedPercent,\n  displayFixedValue,\n  displayPercentValue\n} from '../../helpers';\n\nimport BigNumber from 'bignumber.js';\n\nconst toBigNumber = num => {\n  return new BigNumber(num);\n};\n\nexport default {\n  components: {\n    'interface-container-title': InterfaceContainerTitle,\n    'interface-bottom-text': InterfaceBottomText,\n    'close-cdp-modal': CloseCdpModal,\n    'move-cdp-modal': MoveCdpModal,\n    blockie: Blockie,\n    'help-link': BottomHelpLink\n  },\n  props: {\n    openCloseModal: {\n      type: Boolean,\n      default: false\n    },\n    openMoveModal: {\n      type: Boolean,\n      default: false\n    },\n    tokensWithBalance: {\n      type: Array,\n      default: function() {\n        return [];\n      }\n    },\n    getBalance: {\n      type: Function,\n      default: function() {}\n    },\n    makerActive: {\n      type: Boolean,\n      default: false\n    },\n    cdps: {\n      type: Array,\n      default: function() {\n        return [];\n      }\n    },\n    availableCdps: {\n      type: Object,\n      default: function() {\n        return {};\n      }\n    },\n    getCdp: {\n      type: Function,\n      default: function() {}\n    },\n    hasCdp: {\n      type: Function,\n      default: function() {}\n    },\n    values: {\n      type: Object,\n      default: function() {\n        return {\n          maxPethDraw: '',\n          maxEthDraw: '',\n          maxUsdDraw: '',\n          ethCollateral: '',\n          pethCollateral: '',\n          usdCollateral: '',\n          debtValue: '',\n          maxDai: '',\n          collateralRatio: '',\n          cdpId: '',\n          stabilityFee: '',\n          minEth: '',\n          liquidationRatio: '',\n          wethToPethRatio: '',\n          liquidationPenalty: '',\n          targetPrice: '',\n          pethPrice: ''\n        };\n      }\n    },\n    ethPrice: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    pethPrice: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    liquidationPenalty: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    stabilityFee: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    liquidationRatio: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    wethToPethRatio: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    pethMin: {\n      type: BigNumber,\n      default: toBigNumber(0)\n    },\n    priceService: {\n      type: Object,\n      default: function() {\n        return {};\n      }\n    },\n    cdpService: {\n      type: Object,\n      default: function() {\n        return {};\n      }\n    },\n    proxyService: {\n      type: Object,\n      default: function() {\n        return {};\n      }\n    }\n  },\n  data() {\n    return {\n      loaded: false,\n      ethQty: 0,\n      daiQty: 0,\n      selectedCdp: '',\n      cdpId: '',\n      cdp: {},\n      maxDaiDraw: toBigNumber(0),\n      maxWithDraw: toBigNumber(0),\n      maxWithDrawUSD: toBigNumber(0),\n      maxPethDraw: toBigNumber(0),\n      maxEthDraw: toBigNumber(0)\n    };\n  },\n  computed: {\n    ...mapState(['account', 'gasPrice', 'web3', 'network', 'ens']),\n    collateralRatioColoring() {\n      if (this.values) {\n        if (this.values.collateralRatio >= 2) {\n          return 'green';\n        } else if (\n          this.values.collateralRatio >= 1.75 &&\n          this.values.collateralRatio < 2\n        ) {\n          return 'orange';\n        }\n        return 'red';\n      }\n      return '';\n    },\n    liquidationPriceDisplay() {\n      if (this.values) {\n        const value = displayFixedValue(this.values.liquidationPrice, 2);\n        if (new BigNumber(value).gt(0)) {\n          return value;\n        }\n        return '--';\n      }\n      return '--';\n    },\n    collaterlizationRatioDisplay() {\n      if (this.values) {\n        return displayFixedPercent(this.values.collateralRatio);\n      }\n      return '--';\n    },\n    cdpIdDisplay() {\n      if (this.values) {\n        return this.values.cdpId;\n      }\n      return '--';\n    },\n    liquidationRatioDisplay() {\n      if (this.values) {\n        return displayFixedValue(displayPercentValue(this.liquidationRatio));\n      }\n      return '--';\n    },\n    liquidationPenaltyDisplay() {\n      if (this.values) {\n        return displayFixedValue(displayPercentValue(this.liquidationPenalty));\n      }\n      return '--';\n    },\n    stabilityFeeDisplay() {\n      if (this.values) {\n        return displayFixedValue(displayPercentValue(this.stabilityFee));\n      }\n      return '--';\n    },\n    ethPriceDisplay() {\n      if (this.values) {\n        return displayFixedValue(this.ethPrice, 2);\n      }\n      return '--';\n    },\n    maxPethDrawDisplay() {\n      if (this.values) {\n        return displayFixedValue(this.values.maxPethDraw, 5);\n      }\n      return '--';\n    },\n    zeroDebt() {\n      return toBigNumber(this.values.debtValue).eq(0);\n    },\n    maxEthDrawDisplay() {\n      if (this.values) {\n        return this.values.maxEthDraw;\n      }\n      return '--';\n    },\n    maxUsdDrawDisplay() {\n      if (this.values) {\n        return displayFixedValue(this.values.maxUsdDraw, 2);\n      }\n      return '--';\n    },\n    ethCollateral() {\n      if (this.values) {\n        return displayFixedValue(this.values.ethCollateral, 5, true);\n      }\n      return '--';\n    },\n    pethCollateral() {\n      if (this.values) {\n        return displayFixedValue(this.values.pethCollateral, 5, true);\n      }\n      return '--';\n    },\n    usdCollateral() {\n      if (this.values) {\n        return displayFixedValue(this.values.usdCollateral, 2);\n      }\n      return '--';\n    },\n    debtValueDisplay() {\n      if (this.values) {\n        return displayFixedValue(this.values.debtValue, 2);\n      }\n      return '--';\n    },\n    debtValue() {\n      if (this.values) {\n        return this.values.debtValue;\n      }\n      return '--';\n    },\n    maxDai() {\n      if (this.values) {\n        return this.values.maxDai;\n      }\n      return '--';\n    },\n    maxUsd() {\n      if (this.values) {\n        return displayFixedValue(this.values.maxDai, 2);\n      }\n      return '--';\n    }\n  },\n  async mounted() {\n    this.cdpId = this.$route.params.cdpId;\n    if (this.makerActive) {\n      this.loaded = true;\n      if (this.cdpId) {\n        this.$emit('activeCdpId', this.cdpId);\n      }\n    }\n  },\n  methods: {\n    showClose() {},\n    showMove() {},\n    displayPercentValue,\n    displayFixedValue,\n    async isReady() {},\n    async migrateCdp() {\n      this.$emit('migrateCdp', this.cdpId);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'ProxyMigrateCDP';\n</style>\n"]}]}