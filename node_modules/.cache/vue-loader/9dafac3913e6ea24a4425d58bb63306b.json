{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/layouts/InterfaceLayout/containers/SignMessageContainer/SignMessageContainer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/layouts/InterfaceLayout/containers/SignMessageContainer/SignMessageContainer.vue","mtime":1574677256192},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/babel-loader/lib/index.js","mtime":1574664275010},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js","mtime":1574664277774}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from 'vuex';\nimport { Toast } from '@/helpers';\nimport InterfaceBottomText from '@/components/InterfaceBottomText';\nimport InterfaceContainerTitle from '../../components/InterfaceContainerTitle';\nimport SignatureModal from '../../components/SignatureModal';\n\nexport default {\n  name: 'SignMessage',\n  components: {\n    'interface-bottom-text': InterfaceBottomText,\n    'interface-container-title': InterfaceContainerTitle,\n    'signature-modal-modal': SignatureModal\n  },\n  data() {\n    return {\n      message: '',\n      signature: ''\n    };\n  },\n  computed: {\n    ...mapState(['account', 'web3'])\n  },\n  mounted() {\n    this.$refs.signatureModal.$refs.signatureModal.$on('hidden', () => {\n      this.signature = '';\n    });\n  },\n  methods: {\n    signMessage() {\n      try {\n        this.web3.eth\n          .sign(this.message, this.account.address)\n          .then(_signedMessage => {\n            this.signature = JSON.stringify(\n              {\n                address: this.account.address,\n                msg: this.message,\n                sig: _signedMessage,\n                version: '3',\n                signer: this.account.isHardware\n                  ? this.account.identifier\n                  : 'MEW'\n              },\n              null,\n              2\n            );\n            this.$refs.signatureModal.$refs.signatureModal.show();\n          })\n          .catch(e => {\n            Toast.responseHandler(e, Toast.ERROR);\n          });\n      } catch (e) {\n        Toast.responseHandler(e, Toast.ERROR);\n      }\n    },\n    copyToClipboard() {\n      this.$refs.signature.select();\n      document.execCommand('copy');\n      window.getSelection().removeAllRanges();\n      Toast.responseHandler('Copied', Toast.INFO);\n    },\n    deleteInputText() {\n      this.signature = '';\n      this.message = '';\n    }\n  }\n};\n",{"version":3,"sources":["SignMessageContainer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SignMessageContainer.vue","sourceRoot":"src/layouts/InterfaceLayout/containers/SignMessageContainer","sourcesContent":["<template>\n  <div class=\"sign-message-container\">\n    <signature-modal-modal ref=\"signatureModal\" :signature=\"signature\" />\n    <interface-container-title :title=\"$t('common.signMessage')\" />\n    <div class=\"content-container\">\n      <div class=\"send-form\">\n        <p>{{ $t('interface.signMessageDesc') }}</p>\n        <div class=\"title-container\">\n          <div class=\"title\">\n            <h4>{{ $t('interface.txSideMenuMessage') }}</h4>\n          </div>\n        </div>\n\n        <div class=\"the-form\">\n          <textarea\n            v-validate=\"'required'\"\n            v-model=\"message\"\n            name=\"message\"\n            class=\"custom-textarea-1\"\n          />\n          <span v-show=\"errors.has('message')\">\n            {{ errors.first('message') }}\n          </span>\n        </div>\n      </div>\n\n      <div class=\"submit-button-container\">\n        <div class=\"buttons\">\n          <button\n            :class=\"[\n              message.length > 0 ? '' : 'disabled',\n              'submit-button large-round-button-green-filled clickable'\n            ]\"\n            @click=\"signMessage\"\n          >\n            {{ $t('common.sign') }}\n          </button>\n        </div>\n        <!-- <interface-bottom-text\n          :link-text=\"$t('interface.helpCenter')\"\n          :question=\"$t('interface.haveIssues')\"\n          link=\"https://kb.myetherwallet.com\"\n        /> -->\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport { Toast } from '@/helpers';\nimport InterfaceBottomText from '@/components/InterfaceBottomText';\nimport InterfaceContainerTitle from '../../components/InterfaceContainerTitle';\nimport SignatureModal from '../../components/SignatureModal';\n\nexport default {\n  name: 'SignMessage',\n  components: {\n    'interface-bottom-text': InterfaceBottomText,\n    'interface-container-title': InterfaceContainerTitle,\n    'signature-modal-modal': SignatureModal\n  },\n  data() {\n    return {\n      message: '',\n      signature: ''\n    };\n  },\n  computed: {\n    ...mapState(['account', 'web3'])\n  },\n  mounted() {\n    this.$refs.signatureModal.$refs.signatureModal.$on('hidden', () => {\n      this.signature = '';\n    });\n  },\n  methods: {\n    signMessage() {\n      try {\n        this.web3.eth\n          .sign(this.message, this.account.address)\n          .then(_signedMessage => {\n            this.signature = JSON.stringify(\n              {\n                address: this.account.address,\n                msg: this.message,\n                sig: _signedMessage,\n                version: '3',\n                signer: this.account.isHardware\n                  ? this.account.identifier\n                  : 'MEW'\n              },\n              null,\n              2\n            );\n            this.$refs.signatureModal.$refs.signatureModal.show();\n          })\n          .catch(e => {\n            Toast.responseHandler(e, Toast.ERROR);\n          });\n      } catch (e) {\n        Toast.responseHandler(e, Toast.ERROR);\n      }\n    },\n    copyToClipboard() {\n      this.$refs.signature.select();\n      document.execCommand('copy');\n      window.getSelection().removeAllRanges();\n      Toast.responseHandler('Copied', Toast.INFO);\n    },\n    deleteInputText() {\n      this.signature = '';\n      this.message = '';\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'SignMessageContainer.scss';\n</style>\n"]}]}