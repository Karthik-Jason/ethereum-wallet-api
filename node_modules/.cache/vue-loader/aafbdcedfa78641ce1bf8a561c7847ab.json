{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/layouts/CreateWalletLayout/containers/ByMnemonicContainer/components/VerificationModal/VerificationModal.vue?vue&type=template&id=7f0bad1d&scoped=true&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/layouts/CreateWalletLayout/containers/ByMnemonicContainer/components/VerificationModal/VerificationModal.vue","mtime":1574664278290},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1574664277774},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js","mtime":1574664277774}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-modal',{ref:\"verification\",staticClass:\"bootstrap-modal-wide verification nopadding\",attrs:{\"hide-footer\":\"\",\"centered\":\"\",\"title\":\"Verification\",\"static\":\"\",\"lazy\":\"\"}},[_c('div',{staticClass:\"content-block\"},[_c('p',{staticClass:\"block-title\"},[_vm._v(\"\\n      Please enter and fill out the empty boxes below to verify your mnemonic\\n      phrase key.\\n    \")]),_c('div',{staticClass:\"phrases\"},[_c('ul',_vm._l((_vm.mnemonicValues),function(value,index){return _c('li',{key:index,staticClass:\"word\",attrs:{\"data-index\":index}},[_vm._v(\"\\n          \"+_vm._s(index + 1)+\".\"),_c('span',[_vm._v(_vm._s(value))]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.inputs[index]),expression:\"inputs[index]\"}],staticClass:\"hidden\",attrs:{\"type\":\"text\",\"name\":\"\",\"autocomplete\":\"off\"},domProps:{\"value\":(_vm.inputs[index])},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.inputs, index, $event.target.value)}}})])}),0)]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.errorMsg.length > 0),expression:\"errorMsg.length > 0\"}],staticClass:\"error-msg-container\"},[_vm._v(\"\\n      \"+_vm._s(_vm.errorMsg)+\"\\n    \")]),_c('div',{staticClass:\"button-container\"},[_c('div',{class:[\n          _vm.loading ? 'disabled' : '',\n          'verify-button large-round-button-green-filled'\n        ],on:{\"click\":_vm.verifyMnemonic}},[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.loading),expression:\"!loading\"}]},[_vm._v(\" Verify \")]),_c('i',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.loading),expression:\"loading\"}],staticClass:\"fa fa-lg fa-spin fa-spinner\"})])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}