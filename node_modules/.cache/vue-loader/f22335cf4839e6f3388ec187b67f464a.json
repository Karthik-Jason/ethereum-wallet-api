{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/containers/HeaderContainer/components/MobileMenu/components/MobileNetworkBlock/MobileNetworkBlock.vue?vue&type=style&index=0&id=139e424c&lang=scss&scoped=true&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/containers/HeaderContainer/components/MobileMenu/components/MobileNetworkBlock/MobileNetworkBlock.vue","mtime":1573477611640},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import 'MobileNetworkBlock.scss';\n",{"version":3,"sources":["MobileNetworkBlock.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA","file":"MobileNetworkBlock.vue","sourceRoot":"src/containers/HeaderContainer/components/MobileMenu/components/MobileNetworkBlock","sourcesContent":["<template>\n  <div class=\"mobile-network-block\">\n    <interface-network-modal ref=\"interfaceNetworkModal\" />\n    <div class=\"wrap\">\n      <div class=\"top-block\">\n        <div class=\"block-title\">\n          {{ $t('common.network') }}\n        </div>\n        <button class=\"change-button\" @click=\"networkModalOpen\">\n          {{ $t('common.change') }}\n        </button>\n      </div>\n      <div class=\"bottom-block\">\n        <p v-if=\"account.identifier !== identifier\" class=\"network\">\n          {{ network.service + '(' + network.type.name + ')' }}\n        </p>\n        <!--<p v-show=\"parsedNetwork !== ''\" class=\"network\">M{{ parsedNetwork }}</p>-->\n\n        <p class=\"last-block\">\n          {{ $t('interface.lastBlock') }}# : {{ blockNumber }}\n        </p>\n        <i v-show=\"parsedNetwork === ''\" class=\"fa fa-spinner fa-spin\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport InterfaceNetworkModal from '@/layouts/InterfaceLayout/components/InterfaceNetworkModal';\nimport { mapState } from 'vuex';\nimport { WEB3_WALLET } from '@/wallets/bip44/walletTypes';\n\nexport default {\n  components: {\n    'interface-network-modal': InterfaceNetworkModal\n  },\n  props: {\n    blockNumber: {\n      type: Number,\n      default: 0\n    }\n  },\n  data() {\n    return {\n      parsedNetwork: 0,\n      identifier: WEB3_WALLET\n    };\n  },\n  computed: {\n    ...mapState(['network', 'account', 'web3'])\n  },\n  watch: {\n    blockNumber(newVal) {\n      this.parsedNetwork = parseInt(newVal);\n    }\n  },\n  mounted() {\n    if (this.blockNumber && this.blockNumber !== undefined) {\n      this.parsedNetwork = parseInt(this.blockNumber);\n    }\n  },\n  methods: {\n    networkModalOpen() {\n      if (this.account.identifier !== this.identifier) {\n        this.$refs.interfaceNetworkModal.$refs.network.show();\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'MobileNetworkBlock.scss';\n</style>\n"]}]}