{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/layouts/InterfaceLayout/containers/NFTManagerContainer/components/NftCustomAddModal/NftCustomAddModal.vue?vue&type=template&id=2550482b&scoped=true&lang=html&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/layouts/InterfaceLayout/containers/NFTManagerContainer/components/NftCustomAddModal/NftCustomAddModal.vue","mtime":1573477612020},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"b-modal\",\n        {\n          ref: \"modal\",\n          staticClass: \"bootstrap-modal nopadding max-height-1\",\n          attrs: {\n            title: _vm.$t(\"dapps.addCustomNFT\"),\n            \"hide-footer\": \"\",\n            centered: \"\"\n          },\n          on: { hidden: _vm.resetCompState }\n        },\n        [\n          _c(\n            \"form\",\n            {\n              staticClass: \"tokens-modal-body\",\n              on: {\n                keydown: function($event) {\n                  if (\n                    !$event.type.indexOf(\"key\") &&\n                    _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                  ) {\n                    return null\n                  }\n                  $event.preventDefault()\n                }\n              }\n            },\n            [\n              _c(\"div\", [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"validate\",\n                      rawName: \"v-validate\",\n                      value: \"required\",\n                      expression: \"'required'\"\n                    },\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.contractAddress,\n                      expression: \"contractAddress\"\n                    }\n                  ],\n                  class: [\n                    \"custom-input-text-1\",\n                    _vm.contractAddress !== \"\" && !_vm.validAddress\n                      ? \"invalid-address\"\n                      : \"\"\n                  ],\n                  attrs: {\n                    name: \"Address\",\n                    type: \"text\",\n                    placeholder: \"Token Contract Address\"\n                  },\n                  domProps: { value: _vm.contractAddress },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.contractAddress = $event.target.value\n                    }\n                  }\n                }),\n                _c(\n                  \"span\",\n                  {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: _vm.contractAddress !== \"\" && !_vm.validAddress,\n                        expression: \"contractAddress !== '' && !validAddress\"\n                      }\n                    ],\n                    staticClass: \"error-message\"\n                  },\n                  [_vm._v(\"\\n          Invalid address given.\\n        \")]\n                ),\n                _c(\n                  \"span\",\n                  {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: _vm.nonStandardMessage,\n                        expression: \"nonStandardMessage\"\n                      }\n                    ]\n                  },\n                  [\n                    _vm._v(\n                      \"\\n          NFT token contract doesn't include a required method to add as a\\n          custom NFT or you do not have\\n        \"\n                    )\n                  ]\n                ),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"validate\",\n                      rawName: \"v-validate\",\n                      value: \"required\",\n                      expression: \"'required'\"\n                    },\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.tokenSymbol,\n                      expression: \"tokenSymbol\"\n                    }\n                  ],\n                  staticClass: \"custom-input-text-1\",\n                  attrs: {\n                    name: \"Symbol\",\n                    type: \"text\",\n                    placeholder: \"NFT name\"\n                  },\n                  domProps: { value: _vm.tokenSymbol },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.tokenSymbol = $event.target.value\n                    }\n                  }\n                })\n              ]),\n              _c(\n                \"div\",\n                { staticClass: \"button-block\" },\n                [\n                  _c(\n                    \"button\",\n                    {\n                      class: [\n                        _vm.allFieldsValid ? \"\" : \"disabled\",\n                        \"save-button large-round-button-green-filled clickable\"\n                      ],\n                      on: {\n                        click: function($event) {\n                          $event.preventDefault()\n                          return _vm.addCustom(\n                            _vm.contractAddress,\n                            _vm.tokenSymbol\n                          )\n                        }\n                      }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n          \" +\n                          _vm._s(_vm.$t(\"interface.save\")) +\n                          \"\\n        \"\n                      )\n                    ]\n                  ),\n                  _c(\"interface-bottom-text\", {\n                    attrs: {\n                      \"link-text\": _vm.$t(\"interface.helpCenter\"),\n                      question: _vm.$t(\"interface.dontKnow\"),\n                      link: \"https://kb.myetherwallet.com\"\n                    }\n                  })\n                ],\n                1\n              )\n            ]\n          )\n        ]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}