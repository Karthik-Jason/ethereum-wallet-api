{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/layouts/CreateWalletLayout/containers/ByJsonFileContainer/ByJsonFileContainer.vue?vue&type=style&index=0&id=46d5fa01&lang=scss&scoped=true&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/layouts/CreateWalletLayout/containers/ByJsonFileContainer/ByJsonFileContainer.vue","mtime":1574664278290},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/css-loader/index.js","mtime":1574664275862},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1574664277774},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/postcss-loader/src/index.js","mtime":1574664277114},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/sass-loader/dist/cjs.js","mtime":1574664277374},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js","mtime":1574664277774}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import 'ByJsonFileContainer-desktop.scss';\n@import 'ByJsonFileContainer-tablet.scss';\n@import 'ByJsonFileContainer-mobile.scss';\n",{"version":3,"sources":["ByJsonFileContainer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmJA;AACA;AACA","file":"ByJsonFileContainer.vue","sourceRoot":"src/layouts/CreateWalletLayout/containers/ByJsonFileContainer","sourcesContent":["<template>\n  <div class=\"create-wallet-by-json-file\">\n    <success-modal\n      ref=\"successModal\"\n      message=\"You have created a wallet successfully\"\n      link-to=\"/access-my-wallet\"\n      link-message=\"Access My Wallet\"\n    />\n    <div class=\"wrap\">\n      <div class=\"nav-tab-user-input-box\">\n        <b-tabs>\n          <div class=\"progress-bar\" />\n          <b-tab :title=\"$t('createWallet.byJsonFile')\" active>\n            <div class=\"title-block\">\n              <div class=\"title-popover\">\n                <h3>{{ $t('createWallet.byJsonFileSaveKeystore') }}</h3>\n              </div>\n            </div>\n            <div class=\"contents\">\n              <by-json-block\n                v-for=\"content in contents\"\n                :img=\"content.img\"\n                :title=\"content.title\"\n                :desc=\"content.desc\"\n                :key=\"content.title\"\n              />\n            </div>\n            <div class=\"user-input-container\">\n              <div class=\"user-input\">\n                <div class=\"user-button\">\n                  <a\n                    :href=\"walletJson\"\n                    :class=\"[\n                      { disable: !downloadable },\n                      'next-button',\n                      'large-round-button-green-filled',\n                      'nopadding'\n                    ]\"\n                    :download=\"name\"\n                    @click=\"downloadDone()\"\n                  >\n                    <span v-if=\"downloadable\">{{\n                      $t('createWallet.byJsonFileDownloadKeyFile')\n                    }}</span>\n                    <div v-if=\"!downloadable\" class=\"generating\">\n                      <i class=\"fa fa-spinner fa-lg fa-spin\" />\n                      <p>Please wait while we generate your keystore file...</p>\n                    </div>\n                  </a>\n                </div>\n              </div>\n            </div>\n          </b-tab>\n        </b-tabs>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport SuccessModal from '@/containers/ConfirmationContainer/components/SuccessModal/SuccessModal.vue';\nimport ByJsonBlock from '../../components/ByJsonBlock';\n\nimport noLose from '@/assets/images/icons/no-lose.svg';\nimport noShare from '@/assets/images/icons/no-share.svg';\nimport makeBackup from '@/assets/images/icons/make-a-backup.svg';\nimport walletWorker from 'worker-loader!@/workers/wallet.worker.js';\nimport { Toast, Wallet, Configs } from '@/helpers';\nimport { mapState } from 'vuex';\nimport createBlob from '@/helpers/createBlob.js';\n\nexport default {\n  components: {\n    'by-json-block': ByJsonBlock,\n    'success-modal': SuccessModal\n  },\n  props: {\n    password: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      contents: [\n        {\n          title: this.$t('createWallet.byJsonFileDontLoseTitle'),\n          desc: this.$t('createWallet.byJsonFileDontLoseDesc'),\n          img: noLose\n        },\n        {\n          title: this.$t('createWallet.byJsonFileDontShareTitle'),\n          desc: this.$t('createWallet.byJsonFileDontShareDesc'),\n          img: noShare\n        },\n        {\n          title: this.$t('createWallet.byJsonFileMakeBackupTitle'),\n          desc: this.$t('createWallet.byJsonFileMakeBackupDesc'),\n          img: makeBackup\n        }\n      ],\n      downloadable: false,\n      walletJson: '',\n      name: ''\n    };\n  },\n  computed: {\n    ...mapState(['online'])\n  },\n  mounted() {\n    if (this.online && window.Worker && window.origin !== 'null') {\n      const worker = new walletWorker();\n      worker.postMessage({ type: 'createWallet', data: [this.password] });\n      worker.onmessage = e => {\n        this.walletJson = createBlob(e.data.walletJson, 'mime');\n        this.downloadable = true;\n        this.name = e.data.name.toString();\n      };\n      worker.onerror = function(e) {\n        Toast.responseHandler(e, false);\n      };\n    } else {\n      const _wallet = this.createWallet(this.password);\n      this.walletJson = createBlob(_wallet.walletJson, 'mime');\n      this.downloadable = true;\n      this.name = _wallet.name.toString();\n    }\n  },\n  methods: {\n    downloadDone() {\n      this.$refs.successModal.$refs.success.show();\n    },\n    createWallet(password) {\n      const createdWallet = {};\n      const wallet = new Wallet.generate();\n      createdWallet.walletJson = wallet.toV3(password, {\n        kdf: Configs.wallet.kdf,\n        n: Configs.wallet.n\n      });\n      createdWallet.name = wallet.getV3Filename();\n      return createdWallet;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'ByJsonFileContainer-desktop.scss';\n@import 'ByJsonFileContainer-tablet.scss';\n@import 'ByJsonFileContainer-mobile.scss';\n</style>\n"]}]}