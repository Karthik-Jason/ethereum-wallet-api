{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/dapps/BuySubdomain/BuySubdomain.vue?vue&type=style&index=0&id=f810d2f6&lang=scss&scoped=true&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/src/dapps/BuySubdomain/BuySubdomain.vue","mtime":1574677173337},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/css-loader/index.js","mtime":1574664275862},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1574664277774},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/postcss-loader/src/index.js","mtime":1574664277114},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/sass-loader/dist/cjs.js","mtime":1574664277374},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/cache-loader/dist/cjs.js","mtime":1574664275186},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-api/node_modules/vue-loader/lib/index.js","mtime":1574664277774}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import 'BuySubdomain.scss';\n",{"version":3,"sources":["BuySubdomain.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmMA","file":"BuySubdomain.vue","sourceRoot":"src/dapps/BuySubdomain","sourcesContent":["<template>\n  <div class=\"buy-subdomain-container\">\n    <back-button />\n    <div class=\"buy-subdomain-content\">\n      <div class=\"buy-subdomain-form-container\">\n        <div class=\"title\">\n          <h4>{{ $t('interface.nameYourWallet') }}</h4>\n        </div>\n        <div class=\"form\">\n          <div class=\"subdomain-input\">\n            <input\n              :placeholder=\"$t('dapps.subDomainPlaceholder')\"\n              :class=\"hasError ? 'errorInput' : ''\"\n              type=\"text\"\n              @input=\"debounceInput\"\n            />\n            <button type=\"button\" @click=\"query\">Check</button>\n          </div>\n          <p v-if=\"hasError\" class=\"errorText\">\n            <span>Invalid symbols</span>\n          </p>\n        </div>\n        <div v-show=\"results.length > 0\" class=\"result-section\">\n          <div class=\"title\">\n            <h4>{{ $t('dapps.allSubDomains') }}</h4>\n          </div>\n          <div class=\"results-container\">\n            <div\n              v-for=\"(item, index) in sortedResults\"\n              :key=\"domainName + item.domain + index\"\n              :class=\"[item.active ? '' : 'disabled', 'result-item']\"\n            >\n              <span class=\"domain-name\"\n                >{{ domainName }}.{{ item.domain }}.eth</span\n              >\n              <div class=\"buy-button-container\">\n                <span class=\"amt\"\n                  >{{ web3.utils.fromWei(item.price, 'ether') }} ETH</span\n                >\n                <button @click=\"buyDomain(item)\">\n                  <span v-if=\"item.active\">{{ $t('dapps.buy') }}</span>\n                  <span v-else>\n                    <i class=\"fa fa-times\" />\n                  </span>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div>\n        <!-- <interface-bottom-text\n          :link-text=\"$t('interface.helpCenter')\"\n          :question=\"$t('interface.haveIssues')\"\n          link=\"https://kb.myetherwallet.com\"\n        /> -->\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport InterfaceBottomText from '@/components/InterfaceBottomText';\nimport BackButton from '@/layouts/InterfaceLayout/components/BackButton';\nimport SubdomainAbi from '@/helpers/subdomainAbi.js';\nimport domains from './domains.json';\nimport normalise from '@/helpers/normalise';\nimport BigNumber from 'bignumber.js';\nimport web3 from 'web3';\nimport { mapState } from 'vuex';\nimport StandardButton from '@/components/Buttons/StandardButton';\nimport { Toast } from '@/helpers';\nexport default {\n  components: {\n    'interface-bottom-text': InterfaceBottomText,\n    'back-button': BackButton,\n    'standard-button': StandardButton\n  },\n  data() {\n    return {\n      subdomainContract: function() {},\n      ensContract: function() {},\n      results: [],\n      domainName: '',\n      knownRegistrarInstances: {},\n      hasError: false\n    };\n  },\n  computed: {\n    ...mapState(['ethDonationAddress', 'ens', 'account', 'web3']),\n    sortedResults() {\n      const newArr = this.results;\n      newArr.sort((a, b) => {\n        const ab = new BigNumber(a.price).gt(b.price)\n          ? -1\n          : new BigNumber(a.price).eq(b.price)\n          ? 0\n          : 1;\n        return ab;\n      });\n      const taken = newArr.filter(item => {\n        return item.active === false;\n      });\n      const available = newArr.filter(item => {\n        return item.active === true;\n      });\n      return available.concat(taken);\n    }\n  },\n  watch: {\n    domainName() {\n      this.query();\n    }\n  },\n  mounted() {\n    const web3C = this.web3.eth.Contract;\n    domains.forEach(domain => {\n      const updatedDomain = Object.assign({}, domain);\n      updatedDomain.contract = new web3C(SubdomainAbi, domain.registrar);\n      this.knownRegistrarInstances[domain.name] = updatedDomain;\n    });\n  },\n  methods: {\n    debounceInput: web3.utils._.debounce(function(e) {\n      try {\n        this.domainName = normalise(e.target.value);\n        this.hasError = false;\n      } catch (e) {\n        Toast.responseHandler(e, Toast.WARN);\n        this.hasError = true;\n        return;\n      }\n    }, 1500),\n    async query() {\n      this.results = [];\n      const sha3 = this.web3.utils.sha3;\n      if (this.domainName.length > 1) {\n        for (const key in this.knownRegistrarInstances) {\n          const getSubdomain = await this.knownRegistrarInstances[\n            key\n          ].contract.methods\n            .query(sha3(key), this.domainName)\n            .call();\n          getSubdomain.version = this.knownRegistrarInstances[key].version;\n          if (getSubdomain[0] !== '') {\n            getSubdomain.active = true;\n          } else {\n            getSubdomain.active = false;\n            getSubdomain.domain = key;\n          }\n          this.results.push(getSubdomain);\n        }\n      }\n    },\n    async buyDomain(item) {\n      const domain = this.web3.utils.sha3(item.domain);\n      const subdomain = this.domainName;\n      const ownerAddress = this.account.address;\n      const referrerAddress = this.ethDonationAddress;\n      const resolverAddress = await this.ens.resolver('resolver.eth').addr();\n      const itemContract = this.knownRegistrarInstances[item.domain];\n      const data = await (item.version === '1.0'\n        ? itemContract.contract.methods\n            .register(\n              domain,\n              subdomain,\n              ownerAddress,\n              referrerAddress,\n              resolverAddress\n            )\n            .encodeABI()\n        : itemContract.contract.methods\n            .register(\n              domain,\n              subdomain,\n              ownerAddress,\n              resolverAddress,\n              referrerAddress\n            )\n            .encodeABI());\n      const raw = {\n        from: ownerAddress,\n        data: data,\n        to: itemContract.registrar,\n        value: item.price\n      };\n      this.web3.eth.sendTransaction(raw).catch(err => {\n        Toast.responseHandler(err, false);\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'BuySubdomain.scss';\n</style>\n"]}]}