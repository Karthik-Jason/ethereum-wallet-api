{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/layouts/InterfaceLayout/containers/SignMessageContainer/SignMessageContainer.vue?vue&type=template&id=0c5d3c5d&scoped=true&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/layouts/InterfaceLayout/containers/SignMessageContainer/SignMessageContainer.vue","mtime":1573477612052},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"sign-message-container\" },\n    [\n      _c(\"signature-modal-modal\", {\n        ref: \"signatureModal\",\n        attrs: { signature: _vm.signature }\n      }),\n      _c(\"interface-container-title\", {\n        attrs: { title: _vm.$t(\"common.signMessage\") }\n      }),\n      _c(\"div\", { staticClass: \"content-container\" }, [\n        _c(\"div\", { staticClass: \"send-form\" }, [\n          _c(\"p\", [_vm._v(_vm._s(_vm.$t(\"interface.signMessageDesc\")))]),\n          _c(\"div\", { staticClass: \"title-container\" }, [\n            _c(\"div\", { staticClass: \"title\" }, [\n              _c(\"h4\", [_vm._v(_vm._s(_vm.$t(\"interface.txSideMenuMessage\")))])\n            ])\n          ]),\n          _c(\"div\", { staticClass: \"the-form\" }, [\n            _c(\"textarea\", {\n              directives: [\n                {\n                  name: \"validate\",\n                  rawName: \"v-validate\",\n                  value: \"required\",\n                  expression: \"'required'\"\n                },\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.message,\n                  expression: \"message\"\n                }\n              ],\n              staticClass: \"custom-textarea-1\",\n              attrs: { name: \"message\" },\n              domProps: { value: _vm.message },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.message = $event.target.value\n                }\n              }\n            }),\n            _c(\n              \"span\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.errors.has(\"message\"),\n                    expression: \"errors.has('message')\"\n                  }\n                ]\n              },\n              [\n                _vm._v(\n                  \"\\n          \" +\n                    _vm._s(_vm.errors.first(\"message\")) +\n                    \"\\n        \"\n                )\n              ]\n            )\n          ])\n        ]),\n        _c(\n          \"div\",\n          { staticClass: \"submit-button-container\" },\n          [\n            _c(\"div\", { staticClass: \"buttons\" }, [\n              _c(\n                \"button\",\n                {\n                  class: [\n                    _vm.message.length > 0 ? \"\" : \"disabled\",\n                    \"submit-button large-round-button-green-filled clickable\"\n                  ],\n                  on: { click: _vm.signMessage }\n                },\n                [\n                  _vm._v(\n                    \"\\n          \" +\n                      _vm._s(_vm.$t(\"common.sign\")) +\n                      \"\\n        \"\n                  )\n                ]\n              )\n            ]),\n            _c(\"interface-bottom-text\", {\n              attrs: {\n                \"link-text\": _vm.$t(\"interface.helpCenter\"),\n                question: _vm.$t(\"interface.haveIssues\"),\n                link: \"https://kb.myetherwallet.com\"\n              }\n            })\n          ],\n          1\n        )\n      ])\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}