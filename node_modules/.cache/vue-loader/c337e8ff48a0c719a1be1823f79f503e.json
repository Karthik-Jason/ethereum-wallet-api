{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/dapps/ManageENS/containers/CreateCommitmentContainer/CreateCommitmentContainer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/dapps/ManageENS/containers/CreateCommitmentContainer/CreateCommitmentContainer.vue","mtime":1573477611656},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport InterfaceBottomText from '@/components/InterfaceBottomText';\nimport { mapState } from 'vuex';\n\nexport default {\n  components: {\n    'interface-bottom-text': InterfaceBottomText\n  },\n  props: {\n    hostName: {\n      type: String,\n      default: ''\n    },\n    createCommitment: {\n      type: Function,\n      default: function() {}\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    tld: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      duration: '1'\n    };\n  },\n  computed: {\n    ...mapState(['account']),\n    fullDomainName() {\n      return `${this.hostName}.${this.tld}`;\n    },\n    info() {\n      const balance = this.account.balance;\n      if (balance === '0') {\n        return {\n          disable: true,\n          msg: 'You have no balance to send a Tx'\n        };\n      }\n      return {\n        disable: false,\n        msg: ''\n      };\n    }\n  },\n  watch: {\n    duration(newVal) {\n      this.$emit('updateDuration', Number(newVal));\n    }\n  },\n  mounted() {\n    if (this.hostName === '') {\n      this.$router.push('/interface/dapps/manage-ens');\n    }\n  }\n};\n",{"version":3,"sources":["CreateCommitmentContainer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CreateCommitmentContainer.vue","sourceRoot":"src/dapps/ManageENS/containers/CreateCommitmentContainer","sourcesContent":["<template lang=\"html\">\n  <div class=\"transfer-registrar-container\">\n    <div class=\"transfer-registrar-content\">\n      <h3>Congratulations! {{ fullDomainName }} is available!</h3>\n      <p>Do you want to register {{ fullDomainName }}?</p>\n      <div class=\"secret-phrase-container\">\n        <label for=\"range-slider\"\n          >How many years do you want to keep the name?</label\n        >\n        <b-form-input\n          id=\"range-slider\"\n          v-model=\"duration\"\n          type=\"range\"\n          min=\"1\"\n          max=\"20\"\n          step=\"1\"\n        />\n        <div>{{ duration > 1 ? `${duration} years` : `${duration} year` }}</div>\n      </div>\n      <div class=\"transfer-registrar-button\">\n        <button\n          :class=\"[\n            'large-round-button-green-filled',\n            loading ? 'disabled' : '',\n            info.disable ? 'disabled' : ''\n          ]\"\n          @click=\"createCommitment\"\n        >\n          <span v-show=\"!loading\">\n            Register\n          </span>\n          <i v-show=\"loading\" class=\"fa fa-spinner fa-spin\" />\n        </button>\n        <span v-show=\"info.disable\"> {{ info.msg }} </span>\n      </div>\n    </div>\n    <interface-bottom-text\n      :link-text=\"$t('interface.helpCenter')\"\n      :question=\"$t('interface.haveIssues')\"\n      link=\"https://kb.myetherwallet.com\"\n    />\n  </div>\n</template>\n\n<script>\nimport InterfaceBottomText from '@/components/InterfaceBottomText';\nimport { mapState } from 'vuex';\n\nexport default {\n  components: {\n    'interface-bottom-text': InterfaceBottomText\n  },\n  props: {\n    hostName: {\n      type: String,\n      default: ''\n    },\n    createCommitment: {\n      type: Function,\n      default: function() {}\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    tld: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      duration: '1'\n    };\n  },\n  computed: {\n    ...mapState(['account']),\n    fullDomainName() {\n      return `${this.hostName}.${this.tld}`;\n    },\n    info() {\n      const balance = this.account.balance;\n      if (balance === '0') {\n        return {\n          disable: true,\n          msg: 'You have no balance to send a Tx'\n        };\n      }\n      return {\n        disable: false,\n        msg: ''\n      };\n    }\n  },\n  watch: {\n    duration(newVal) {\n      this.$emit('updateDuration', Number(newVal));\n    }\n  },\n  mounted() {\n    if (this.hostName === '') {\n      this.$router.push('/interface/dapps/manage-ens');\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'CreateCommitmentContainer.scss';\n</style>\n"]}]}