{"remainingRequest":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/layouts/InterfaceLayout/components/InterfaceNetwork/InterfaceNetwork.vue?vue&type=template&id=213f6bbe&scoped=true&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/layouts/InterfaceLayout/components/InterfaceNetwork/InterfaceNetwork.vue","mtime":1573477611964},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"info-block-container\" },\n    [\n      _c(\"interface-network-modal\", { ref: \"network\" }),\n      _c(\"div\", { staticClass: \"info-block network\" }, [\n        _c(\"div\", { staticClass: \"block-image\" }, [\n          _c(\"div\", { staticClass: \"network-type\" }, [\n            _c(\"div\", { staticClass: \"icon-block\" }, [\n              _c(\"img\", {\n                staticClass: \"icon\",\n                attrs: { src: _vm.network.type.icon, alt: \"\" }\n              })\n            ])\n          ])\n        ]),\n        _c(\"div\", { staticClass: \"block-content\" }, [\n          _c(\"div\", { staticClass: \"information-container\" }, [\n            _c(\"div\", { staticClass: \"title-and-helper\" }, [\n              _c(\"h2\", [_vm._v(_vm._s(_vm.$t(\"interface.network\")))])\n            ]),\n            _vm.account.identifier !== _vm.identifier\n              ? _c(\"p\", [\n                  _vm._v(\n                    \"\\n          \" +\n                      _vm._s(\n                        _vm.network.service + \"(\" + _vm.network.type.name + \")\"\n                      ) +\n                      \"\\n        \"\n                  )\n                ])\n              : _c(\"p\", [\n                  _vm._v(\n                    _vm._s(\"Web3 Provider\" + \"(\" + _vm.network.type.name + \")\")\n                  )\n                ]),\n            _c(\"p\", [\n              _vm._v(\n                \"\\n          \" +\n                  _vm._s(_vm.$t(\"interface.lastBlock\")) +\n                  \"# :\\n          \"\n              ),\n              _c(\n                \"span\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.parsedNetwork !== \"\",\n                      expression: \"parsedNetwork !== ''\"\n                    }\n                  ]\n                },\n                [_vm._v(\" \" + _vm._s(_vm.parsedNetwork))]\n              ),\n              _c(\"i\", {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.parsedNetwork === \"\",\n                    expression: \"parsedNetwork === ''\"\n                  }\n                ],\n                staticClass: \"fa fa-spinner fa-spin\"\n              })\n            ])\n          ]),\n          _c(\n            \"div\",\n            { staticClass: \"icon-container\" },\n            [\n              _vm.account.identifier !== _vm.identifier\n                ? _c(\n                    \"button\",\n                    {\n                      staticClass: \"change-button\",\n                      attrs: { id: \"networkModal\" },\n                      on: { click: _vm.networkModalOpen }\n                    },\n                    [_vm._v(\"\\n          Change\\n        \")]\n                  )\n                : _vm._e(),\n              _c(\"b-popover\", {\n                attrs: {\n                  content: \"Open Networks\",\n                  target: \"networkModal\",\n                  placement: \"top\",\n                  triggers: \"hover\",\n                  title: \"\"\n                }\n              })\n            ],\n            1\n          )\n        ])\n      ])\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}