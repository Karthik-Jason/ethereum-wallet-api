{"remainingRequest":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/layouts/AccessWalletLayout/containers/AccessMyWalletContainer/AccessMyWalletContainer.vue?vue&type=style&index=0&id=710ed840&lang=scss&scoped=true&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/layouts/AccessWalletLayout/containers/AccessMyWalletContainer/AccessMyWalletContainer.vue","mtime":1573477611668},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import 'AccessMyWalletContainer-desktop.scss';\n@import 'AccessMyWalletContainer-tablet.scss';\n@import 'AccessMyWalletContainer-mobile.scss';\n",{"version":3,"sources":["AccessMyWalletContainer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoTA;AACA;AACA","file":"AccessMyWalletContainer.vue","sourceRoot":"src/layouts/AccessWalletLayout/containers/AccessMyWalletContainer","sourcesContent":["<template>\n  <div class=\"access-my-wallet-options\">\n    <ledger-app-modal\n      ref=\"ledgerAppModal\"\n      :networks=\"Networks\"\n      @hardwareWalletOpen=\"hardwareWalletOpen\"\n    />\n    <mew-connect-modal\n      ref=\"mewconnectModal\"\n      :network-and-address-open=\"networkAndAddressOpen\"\n    />\n\n    <hardware-modal\n      ref=\"hardwareModal\"\n      :ledger-app-open=\"ledgerAppModalOpen\"\n      :network-and-address-open=\"networkAndAddressOpen\"\n      :open-finney=\"finneyModalOpen\"\n      :open-xwallet=\"xwalletModalOpen\"\n      @hardwareRequiresPassword=\"hardwarePasswordModalOpen\"\n      @hardwareWalletOpen=\"hardwareWalletOpen\"\n    />\n\n    <hardware-password-modal\n      ref=\"hardwarePasswordModal\"\n      :wallet-constructor=\"walletConstructor\"\n      :hardware-brand=\"hardwareBrand\"\n      @hardwareWalletOpen=\"hardwareWalletOpen\"\n    />\n\n    <network-and-address-modal\n      ref=\"networkandaddressModal\"\n      :hardware-wallet=\"hardwareWallet\"\n    />\n\n    <metamask-modal\n      ref=\"metamaskModal\"\n      :is-meta-mask=\"isMetaMask\"\n      :web3-wallet-exists=\"web3WalletExists\"\n    />\n\n    <software-modal\n      ref=\"softwareModal\"\n      :open-password=\"passwordOpen\"\n      :open-private-key-input=\"privateKeyOpen\"\n      :open-mnemonic-phrase-input=\"mnemonicphraseModalOpen\"\n      @file=\"fileUploaded\"\n    />\n\n    <password-modal ref=\"passwordModal\" :file=\"file\" />\n\n    <private-key-modal ref=\"privatekeyModal\" />\n\n    <mnemonic-modal\n      ref=\"mnemonicPhraseModal\"\n      :hardware-wallet-open=\"hardwareWalletOpen\"\n    />\n\n    <wallet-password-modal />\n    <finney-modal ref=\"finney\" />\n    <xwallet-modal ref=\"xwallet\" />\n    <enter-pin-number-modal />\n\n    <div class=\"wrap\">\n      <div class=\"page-container\">\n        <div class=\"title\">\n          <h2>{{ $t('common.accessMyWallet') }}</h2>\n          <h5>\n            {{ $t('common.noWallet') }}\n            <router-link :to=\"'/create-wallet'\" class=\"nounderline\">\n              {{ $t('common.createANewWallet') }}\n            </router-link>\n          </h5>\n        </div>\n        <div class=\"buttons-container\">\n          <access-wallet-button\n            v-for=\"(button, index) in buttons\"\n            :key=\"button.title + index\"\n            :func=\"button.func\"\n            :img=\"button.img\"\n            :img-disabled=\"button.imgDisabled\"\n            :title=\"button.title\"\n            :desc=\"button.desc\"\n            :recommend=\"button.recommend\"\n            :tooltip=\"button.tooltip\"\n            :disabled=\"button.disabled\"\n            :classname=\"button.classname\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport FinneyModal from '../../components/FinneyModal';\nimport AccessWalletButton from '../../components/AccessWalletButton';\nimport HardwareModal from '../../components/HardwareModal';\nimport HardwarePasswordModal from '../../components/HardwarePasswordModal';\nimport Web3WalletModal from '../../components/Web3WalletModal';\nimport MewConnectModal from '../../components/MewConnectModal';\nimport NetworkAndAddressModal from '../../components/NetworkAndAddressModal';\nimport PasswordModal from '../../components/PasswordModal';\nimport PrivateKeyModal from '../../components/PrivateKeyModal';\nimport SoftwareModal from '../../components/SoftwareModal';\nimport MnemonicPasswordModal from '../../components/MnemonicPasswordModal';\nimport MnemonicModal from '../../components/MnemonicModal';\nimport LedgerAppModal from '../../components/LedgerAppModal';\nimport WalletPasswordModal from '@/components/WalletPasswordModal';\nimport EnterPinNumberModal from '@/components/EnterPinNumberModal';\nimport XwalletModal from '../../components/XwalletModal';\n\nimport mewConnectImg from '@/assets/images/icons/button-mewconnect.svg';\nimport hardwareImg from '@/assets/images/icons/button-hardware.svg';\nimport web3Img from '@/assets/images/icons/button-web3.svg';\nimport softwareImg from '@/assets/images/icons/button-software.svg';\n\nimport mewConnectImgDisabled from '@/assets/images/icons/button-mewconnect-disabled.svg';\nimport hardwareImgDisabled from '@/assets/images/icons/button-hardware-disabled.svg';\nimport web3ImgDisabled from '@/assets/images/icons/button-web3-disabled.svg';\nimport softwareImgDisabled from '@/assets/images/icons/button-software-disabled.svg';\n\nimport { mapState } from 'vuex';\nimport { Toast } from '@/helpers';\n\nimport DetectRTC from 'detectrtc';\n\nexport default {\n  components: {\n    'mew-connect-modal': MewConnectModal,\n    'network-and-address-modal': NetworkAndAddressModal,\n    'hardware-modal': HardwareModal,\n    'hardware-password-modal': HardwarePasswordModal,\n    'metamask-modal': Web3WalletModal,\n    'software-modal': SoftwareModal,\n    'password-modal': PasswordModal,\n    'private-key-modal': PrivateKeyModal,\n    'mnemonic-modal': MnemonicModal,\n    'mnemonic-password-modal': MnemonicPasswordModal,\n    'access-wallet-button': AccessWalletButton,\n    'wallet-password-modal': WalletPasswordModal,\n    'enter-pin-number-modal': EnterPinNumberModal,\n    'ledger-app-modal': LedgerAppModal,\n    'finney-modal': FinneyModal,\n    'xwallet-modal': XwalletModal\n  },\n  data() {\n    return {\n      file: {},\n      phrase: '',\n      hardwareWallet: {},\n      hardwareAddresses: [],\n      walletConstructor: function() {},\n      hardwareBrand: '',\n      buttons: [\n        {\n          func: this.mewConnectModalOpen,\n          title: this.$t('common.mewConnect'),\n          desc: this.$t('accessWallet.mewConnectDesc'),\n          recommend: '',\n          tooltip: '',\n          img: mewConnectImg,\n          imgDisabled: mewConnectImgDisabled,\n          disabled: false,\n          classname: 'button-mewconnect'\n        },\n        {\n          func: this.hardwareModalOpen,\n          title: this.$t('common.hardware'),\n          desc:\n            'Ledger wallet, FINNEY, Trezor, BitBox, Secalot, KeepKey, XWallet',\n          recommend: '',\n          tooltip: '',\n          img: hardwareImg,\n          imgDisabled: hardwareImgDisabled,\n          disabled: false,\n          classname: 'button-hardware'\n        },\n        {\n          func: this.web3WalletModal,\n          title: 'Web3 Wallet',\n          desc: this.$t('accessWallet.web3WalletDesc'),\n          recommend: '',\n          tooltip: '',\n          img: web3Img,\n          imgDisabled: web3ImgDisabled,\n          disabled: false,\n          classname: 'button-metamask'\n        },\n        {\n          func: this.softwareModalOpen,\n          title: this.$t('accessWallet.software'),\n          desc: this.$t('accessWallet.softwareDesc'),\n          recommend: this.$t('accessWallet.notRecommended'),\n          tooltip: '',\n          img: softwareImg,\n          imgDisabled: softwareImgDisabled,\n          disabled: false,\n          classname: 'button-software'\n        }\n      ],\n      isMetaMask: false,\n      web3WalletExists: false\n    };\n  },\n  computed: {\n    ...mapState(['online', 'Networks'])\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.buttons.forEach(btn => {\n        btn.disabled = this.isDisabled(btn.classname);\n      });\n\n      this.checkWeb3();\n      this.checkIsMetamask();\n    });\n  },\n  methods: {\n    checkIsMetamask() {\n      this.isMetaMask = window.ethereum && window.ethereum.isMetaMask;\n    },\n    checkWeb3() {\n      this.web3WalletExists =\n        typeof window.ethereum !== 'undefined' ||\n        typeof window.web3 !== 'undefined';\n    },\n    isDisabled(className) {\n      switch (className) {\n        case 'button-mewconnect':\n          return !(this.online && DetectRTC.isWebRTCSupported);\n        case 'button-hardware':\n          return !this.online;\n        default:\n          return false;\n      }\n    },\n    mewConnectModalOpen() {\n      this.$refs.mewconnectModal.$refs.mewConnect.show();\n    },\n    ledgerAppModalOpen() {\n      this.$refs.ledgerAppModal.$refs.ledgerApp.show();\n    },\n    networkAndAddressOpen() {\n      this.$refs.networkandaddressModal.$refs.networkAndAddress.show();\n    },\n    hardwareModalOpen() {\n      this.$refs.hardwareModal.$refs.hardware.show();\n    },\n    web3WalletModal() {\n      this.checkWeb3();\n      this.checkIsMetamask();\n      this.$refs.metamaskModal.$refs.metamask.show();\n    },\n    softwareModalOpen() {\n      this.$refs.softwareModal.$refs.software.show();\n    },\n    passwordOpen() {\n      this.$refs.softwareModal.$refs.software.hide();\n      this.$refs.passwordModal.$refs.password.show();\n    },\n    privateKeyOpen() {\n      this.$refs.softwareModal.$refs.software.hide();\n      this.$refs.privatekeyModal.$refs.privateKey.show();\n    },\n    installWeb3WalletModalOpen() {\n      this.$refs.installWeb3WalletModal.$refs.installmetamask.show();\n    },\n    mnemonicphraseModalOpen() {\n      this.$refs.mnemonicPhraseModal.$refs.mnemonicPhrase.show();\n      this.$refs.softwareModal.$refs.software.hide();\n    },\n    // mnemonicphrasePasswordModalOpen(phrase) {\n    //   this.phrase = phrase;\n    //   this.$refs.mnemonicPhraseModal.$refs.mnemonicPhrase.hide();\n    //   this.$refs.mnemonicPhrasePassword.$refs.password.show();\n    // },\n    fileUploaded(e) {\n      this.file = e;\n      this.passwordOpen();\n    },\n    hardwarePasswordModalOpen(hardwareNeedingPassword) {\n      this.walletConstructor = hardwareNeedingPassword.walletConstructor;\n      this.hardwareBrand = hardwareNeedingPassword.hardwareBrand;\n      this.$refs.hardwareModal.$refs.hardware.hide();\n      this.$refs.hardwarePasswordModal.$refs.password.show();\n    },\n    finneyModalOpen() {\n      this.$refs.finney.$refs.finneyModal.show();\n    },\n    xwalletModalOpen() {\n      this.$refs.xwallet.$refs.xwalletModal.show();\n    },\n    hardwareWalletOpen(wallet) {\n      // if (this.$refs.mnemonicPhrasePassword.$refs.password.visible) {\n      //   this.$refs.mnemonicPhrasePassword.$refs.password.hide();\n      // }\n      try {\n        this.hardwareWallet = wallet;\n        this.networkAndAddressOpen();\n      } catch (e) {\n        Toast.responseHandler(e, false);\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'AccessMyWalletContainer-desktop.scss';\n@import 'AccessMyWalletContainer-tablet.scss';\n@import 'AccessMyWalletContainer-mobile.scss';\n</style>\n"]}]}