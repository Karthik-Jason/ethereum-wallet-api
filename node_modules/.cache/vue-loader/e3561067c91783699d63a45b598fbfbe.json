{"remainingRequest":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/layouts/DappSubmissionLayout/containers/AboutYourDappContainer/AboutYourDappContainer.vue?vue&type=style&index=0&id=5c786b9f&lang=scss&scoped=true&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/layouts/DappSubmissionLayout/containers/AboutYourDappContainer/AboutYourDappContainer.vue","mtime":1573477611680},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import 'AboutYourDappContainer.scss';\n@import '../AboutYourDappTeamContainer.scss';\n",{"version":3,"sources":["AboutYourDappContainer.vue"],"names":[],"mappingsknBA;AACA","file":"AboutYourDappContainer.vue","sourceRoot":"src/layouts/DappSubmissionLayout/containers/AboutYourDappContainer","sourcesContent":["<template>\n  <div class=\"about-your-dapp mb-5 mt-5\">\n    <b-form onsubmit=\"return false;\">\n      <b-form-group>\n        <label class=\"dapp-label\">Dapp name</label>\n        <div class=\"dapp-input\">\n          <b-form-input\n            v-validate=\"'required'\"\n            id=\"dappName\"\n            v-model=\"form.dappName\"\n            name=\"name\"\n            type=\"text\"\n            @update=\"updateName\"\n          >\n          </b-form-input>\n          <span>*</span>\n        </div>\n        <p v-if=\"errors.has('name')\" class=\"error\">\n          {{ errors.first('name') }}\n        </p>\n      </b-form-group>\n      <b-form-group>\n        <label class=\"dapp-label\">Category</label>\n        <div class=\"dapp-input\">\n          <label class=\"dapp-select-label\">\n            <b-form-select\n              v-validate=\"'required'\"\n              id=\"dappCategory\"\n              :options=\"dappCategories\"\n              v-model=\"form.category\"\n              name=\"category\"\n              @change=\"updateCategory\"\n            ></b-form-select>\n          </label>\n          <span>*</span>\n        </div>\n        <p v-if=\"errors.has('category')\" class=\"error\">\n          {{ errors.first('category') }}\n        </p>\n      </b-form-group>\n      <b-form-group class=\"input-tags-group tags-form-group\">\n        <label class=\"dapp-label\"\n          >Tags\n          <popover\n            :popcontent=\"$t('dappsSubmission.tags')\"\n            class=\"dapp-popover\"\n          ></popover>\n        </label>\n        <div class=\"input-tags-container\">\n          <div class=\"tag-wrapper\">\n            <div ref=\"tagHolder\" class=\"tag-holder\">\n              <tag-component\n                v-for=\"(tag, idx) in displayTags\"\n                ref=\"tagContainer\"\n                :name=\"tag\"\n                :delete-func=\"deleteTag\"\n                :idx=\"idx\"\n                :key=\"tag + idx\"\n              />\n            </div>\n            <div class=\"dapp-input\">\n              <input\n                id=\"dappTags\"\n                ref=\"dappTagsInput\"\n                v-model=\"tagInput\"\n                class=\"dapp-tags-input\"\n                type=\"text\"\n                @keyup=\"onKeyDown\"\n              />\n            </div>\n          </div>\n          <span>*</span>\n        </div>\n        <p v-if=\"dappTagsError\" class=\"error\">\n          The tags field is required\n        </p>\n      </b-form-group>\n      <div class=\"suggested-tags-container mb-3\">\n        <p class=\"title\">Suggested Tags</p>\n        <p class=\"tags\">\n          <span @click=\"addTags('games')\">Games</span>\n          <span @click=\"addTags('defi lending')\">Defi Lending</span>\n          <span @click=\"addTags('social')\">Social</span>\n          <span @click=\"addTags('finance')\">Finance</span>\n          <span @click=\"addTags('wallet')\">Wallet</span>\n        </p>\n      </div>\n      <b-form-group id=\"form-group-description\">\n        <label class=\"dapp-label\">Description</label>\n        <b-form-invalid-feedback id=\"form-group-description\">\n          This is a required field.\n        </b-form-invalid-feedback>\n        <div class=\"dapp-input\">\n          <b-form-textarea\n            v-validate=\"'max:800|required'\"\n            v-model=\"form.description\"\n            name=\"description\"\n            placeholder=\"800 characters\"\n            rows=\"7\"\n            size=\"lg\"\n            @update=\"updateDescription\"\n            @change=\"updateDisableBtn(errors)\"\n          ></b-form-textarea>\n          <span>*</span>\n        </div>\n        <p v-if=\"errors.has('description')\" class=\"error\">\n          {{ errors.first('description') }}\n        </p>\n      </b-form-group>\n      <b-form-group>\n        <label class=\"dapp-label\"\n          >Is your Dapp available for use in the United States?</label\n        >\n        <div class=\"dapp-input\">\n          <label class=\"dapp-select-label\">\n            <b-form-select\n              v-validate=\"'required'\"\n              id=\"dappUsMarket\"\n              :options=\"dappUsMarketOptions\"\n              v-model=\"form.usMarket\"\n              name=\"field\"\n              @change=\"updateUsMarket\"\n            ></b-form-select>\n          </label>\n          <span>*</span>\n        </div>\n        <p v-if=\"errors.has('field')\" class=\"error\">\n          {{ errors.first('field') }}\n        </p>\n      </b-form-group>\n      <b-form-group>\n        <label class=\"dapp-label\">Dapp status</label>\n        <div class=\"dapp-input\">\n          <label class=\"dapp-select-label\">\n            <b-form-select\n              v-validate=\"'required'\"\n              id=\"dappStatus\"\n              :options=\"dappStatusOptions\"\n              v-model=\"form.dappStatus\"\n              name=\"status\"\n              @change=\"updateDappStatus\"\n            ></b-form-select>\n          </label>\n          <span>*</span>\n        </div>\n        <p v-if=\"errors.has('status')\" class=\"error\">\n          {{ errors.first('status') }}\n        </p>\n      </b-form-group>\n      <b-form-group>\n        <label class=\"dapp-label\"\n          >Mock user flow\n          <popover\n            :popcontent=\"$t('dappsSubmission.mockUserFlow')\"\n            class=\"dapp-popover\"\n          ></popover>\n        </label>\n        <p class=\"dapp-text-info mb-3\">\n          Dimensions must be 1200px width by 630px height; JPEG or PDF file\n          only; Image size no large than 5MB\n        </p>\n        <div class=\"dapp-input\">\n          <label for=\"customUpload\" class=\"upload-btn-wrapper\">\n            <div class=\"fake-input\">\n              <p class=\"file-name\">{{ form.mockFlowFile.name }}</p>\n            </div>\n            <button class=\"upload-btn\">Upload</button>\n          </label>\n          <input\n            id=\"customUpload\"\n            ref=\"mockUserFlow\"\n            class=\"mock-user-flow-input\"\n            type=\"file\"\n            @change=\"onMockFileChange\"\n          />\n          <span>*</span>\n        </div>\n        <p v-show=\"mockFileError\" class=\"error\">\n          {{ mockFileError }}\n        </p>\n      </b-form-group>\n      <b-form-group>\n        <label class=\"dapp-label\"\n          >Contract address\n          <popover\n            :popcontent=\"$t('dappsSubmission.contractAddress')\"\n            class=\"dapp-popover\"\n          ></popover>\n        </label>\n        <div class=\"dapp-input\">\n          <b-form-input\n            v-validate=\"'required'\"\n            id=\"contractAddress\"\n            v-model=\"form.contractAddress\"\n            name=\"address\"\n            type=\"text\"\n            @update=\"onContractAddressChange\"\n          >\n          </b-form-input>\n          <span>*</span>\n        </div>\n        <p v-if=\"errors.has('address')\" class=\"error\">\n          {{ errors.first('address') }}\n        </p>\n        <p v-if=\"contractAddressErr\" class=\"error\">\n          {{ contractAddressErr }}\n        </p>\n      </b-form-group>\n      <b-form-group>\n        <label class=\"dapp-label\">\n          <span class=\"dapp-icon-label\"> Dapp icon </span>\n          <popover\n            :popcontent=\"$t('dappsSubmission.dappIcon')\"\n            class=\"dapp-popover\"\n          ></popover>\n          <label v-if=\"form.dappIconUrl\" for=\"dappIcon\" class=\"replace-label\"\n            >Replace</label\n          >\n        </label>\n        <div class=\"image-wrapper\">\n          <div\n            :class=\"form.dappIconUrl ? 'dapp-icon-uploaded ' : ''\"\n            class=\"image-container\"\n          >\n            <label class=\"image-label\" for=\"dappIcon\">\n              <div class=\"image-placeholder\">\n                <i v-if=\"!form.dappIconUrl\" class=\"fa fa-cloud-upload\"></i>\n                <h4 class=\"image-text\">\n                  Drop your icon here, or select a file from your computer.\n                </h4>\n                <p class=\"image-requirements\">\n                  JPEG or PNG, at least 192px * 192px\n                </p>\n              </div>\n              <img\n                v-if=\"form.dappIconUrl\"\n                :src=\"form.dappIconUrl\"\n                class=\"dapp-icon-img\"\n              />\n              <b-form-file\n                id=\"dappIcon\"\n                drop-placeholder=\"Drop your icon here\"\n                type=\"file\"\n                @change=\"onDappIconChange\"\n              ></b-form-file>\n            </label>\n          </div>\n          <span\n            :class=\"form.dappIconUrl ? 'uploaded-required-icon' : ''\"\n            class=\"required-icon\"\n            >*</span\n          >\n        </div>\n        <p v-show=\"dappIconError\" class=\"error\">\n          {{ dappIconError }}\n        </p>\n      </b-form-group>\n      <b-form-group>\n        <label class=\"dapp-label\"\n          >Banner\n          <popover\n            :popcontent=\"$t('dappsSubmission.banner')\"\n            class=\"dapp-popover\"\n          ></popover>\n          <label v-if=\"form.bannerUrl\" for=\"bannerImage\" class=\"replace-label\"\n            >Replace</label\n          >\n        </label>\n        <div class=\"image-wrapper\">\n          <div\n            :class=\"form.bannerUrl ? 'banner-uploaded ' : ''\"\n            class=\"image-container\"\n          >\n            <label class=\"image-label\" for=\"bannerImage\">\n              <div class=\"image-placeholder\">\n                <i v-if=\"!form.bannerUrl\" class=\"fa fa-cloud-upload\"></i>\n                <h4 class=\"image-text\">\n                  Drop your image here, or select a file from your computer.\n                </h4>\n                <p class=\"image-requirements\">\n                  JPEG or PNG, at least 1200px * 206px\n                </p>\n              </div>\n              <img\n                v-if=\"form.bannerUrl\"\n                :src=\"form.bannerUrl\"\n                class=\"banner-img\"\n              />\n              <b-form-file\n                id=\"bannerImage\"\n                accept=\"image/*\"\n                drop-placeholder=\"Drop your banner here\"\n                type=\"file\"\n                @change=\"onBannerChange\"\n              >\n              </b-form-file>\n            </label>\n          </div>\n          <span\n            :class=\"form.bannerUrl ? 'uploaded-required-icon' : ''\"\n            class=\"required-icon\"\n            >*</span\n          >\n        </div>\n        <p v-show=\"bannerError\" class=\"error\">\n          {{ bannerError }}\n        </p>\n      </b-form-group>\n      <b-form-group>\n        <label class=\"dapp-label\">Dapp website</label>\n        <b-form-input\n          v-validate=\"'url:require_protocol'\"\n          id=\"dappWebsite\"\n          v-model=\"form.dappWebsite\"\n          name=\"website\"\n          placeholder=\"URL link\"\n          type=\"text\"\n          @change=\"updateDisableBtn(errors)\"\n        ></b-form-input>\n        <p v-if=\"errors.has('website')\" class=\"error\">\n          {{ errors.first('website') }}\n        </p>\n      </b-form-group>\n      <b-form-group>\n        <label class=\"dapp-label\"\n          >Dapp contract audit\n          <popover\n            :popcontent=\"$t('dappsSubmission.contractAudit')\"\n            class=\"dapp-popover\"\n          ></popover>\n        </label>\n        <label class=\"dapp-select-label\">\n          <b-form-select\n            id=\"dappContract\"\n            v-model=\"form.contractAudit\"\n            :options=\"dappContractOptions\"\n          ></b-form-select>\n        </label>\n      </b-form-group>\n    </b-form>\n  </div>\n</template>\n\n<script>\nimport TagComponentVue from '../../components/TagComponent/TagComponent.vue';\nimport PopOver from '@/components/PopOver';\nimport { isAddress } from '@/helpers/addressUtils';\n\nexport default {\n  components: {\n    'tag-component': TagComponentVue,\n    popover: PopOver\n  },\n  props: {\n    updateName: {\n      type: Function,\n      default: () => {}\n    },\n    updateCategory: {\n      type: Function,\n      default: () => {}\n    },\n    updateTags: {\n      type: Function,\n      default: () => {}\n    },\n    updateDescription: {\n      type: Function,\n      default: () => {}\n    },\n    updateDisableBtn: {\n      type: Function,\n      default: () => {}\n    },\n    updateUsMarket: {\n      type: Function,\n      default: () => {}\n    },\n    updateDappStatus: {\n      type: Function,\n      default: () => {}\n    },\n    updateMockFlow: {\n      type: Function,\n      default: () => {}\n    },\n    updateContractAddress: {\n      type: Function,\n      default: () => {}\n    },\n    updateDappIcon: {\n      type: Function,\n      default: () => {}\n    },\n    updateBanner: {\n      type: Function,\n      default: () => {}\n    },\n    form: {\n      type: Object,\n      default: function() {\n        return {};\n      }\n    }\n  },\n  data() {\n    return {\n      tag: '',\n      tags: [],\n      dappCategories: [\n        { value: null, text: 'Please select' },\n        { value: 'Games', text: 'Games' },\n        { value: 'Social', text: 'Social' },\n        { value: 'Finance', text: 'Finance' },\n        { value: 'Infrastructure', text: 'Infrastructure' },\n        { value: 'Exchanges', text: 'Exchanges' },\n        { value: 'Development', text: 'Development' },\n        { value: 'Media', text: 'Media' },\n        { value: 'Wallet', text: 'Wallet' },\n        { value: 'Security', text: 'Security' },\n        { value: 'Property', text: 'Property' },\n        { value: 'Marketplaces', text: 'Marketplaces' },\n        { value: 'Governance', text: 'Governance' },\n        { value: 'Storage', text: 'Storage' },\n        { value: 'Identity', text: 'Identity' },\n        { value: 'Energy', text: 'Energy' },\n        { value: 'Insurance', text: 'Insurance' },\n        { value: 'Health', text: 'Health' },\n        { value: 'Other', text: 'Other' }\n      ],\n      dappUsMarketOptions: [\n        { value: null, text: 'Please select' },\n        { value: 'Yes', text: 'Yes' },\n        { value: 'No', text: 'No' }\n      ],\n      dappStatusOptions: [\n        { value: null, text: 'Please select' },\n        { value: 'Live', text: 'Live' },\n        { value: 'Beta', text: 'Beta' },\n        { value: 'Prototype', text: 'Prototype' },\n        { value: 'Work in progress', text: 'Work in progress' },\n        { value: 'Concept', text: 'Concept' },\n        { value: 'Stealth', text: 'Stealth' }\n      ],\n      dappContractOptions: [\n        { value: null, text: 'Please select' },\n        { value: 'None in Process', text: 'None in Process' },\n        { value: 'In Process', text: 'In Process' },\n        { value: 'Completed', text: 'Completed' }\n      ],\n      tagInput: '',\n      displayTags: this.form.tags,\n      mockFileError: null,\n      dappIconError: null,\n      bannerError: null,\n      mockFlowImgName: '',\n      dappTagsError: false,\n      contractAddressErr: null,\n      spacePressCount: 0\n    };\n  },\n  methods: {\n    pushTag() {\n      this.displayTags.push(this.tagInput);\n      this.tagInput = '';\n      setTimeout(() => this.updateWidth());\n    },\n    onKeyDown(e) {\n      if (e.keyCode === 32) {\n        this.spacePressCount++;\n      }\n      if (\n        e.keyCode === 13 ||\n        (e.keyCode === 32 && this.spacePressCount === 2)\n      ) {\n        this.tagInput = this.tagInput.replace(/\\s+/g, '');\n        this.tagInput.length > 0 ? this.pushTag() : '';\n        this.spacePressCount = 0;\n      } else if (e.keyCode === 8) {\n        if (this.tagInput.length <= 0) {\n          const lastTag = this.displayTags.splice(\n            this.displayTags.length - 1,\n            1\n          );\n          setTimeout(() => {\n            this.updateWidth();\n            this.tagInput = lastTag.toString();\n          });\n        }\n        this.spacePressCount = 0;\n      }\n      this.dappTagsError = this.displayTags.length === 0;\n      this.updateTags(this.displayTags);\n    },\n    deleteTag(idx) {\n      this.displayTags.splice(idx, 1);\n      this.updateTags(this.displayTags);\n      this.dappTagsError = this.displayTags.length === 0;\n      setTimeout(() => this.updateWidth());\n    },\n    updateWidth() {\n      this.$refs.dappTagsInput.style.paddingLeft =\n        this.$refs.tagHolder.offsetWidth > 0\n          ? `${this.$refs.tagHolder.offsetWidth + 25}px`\n          : '25px';\n    },\n    onMockFileChange(e) {\n      const file = e.target.files[0],\n        img = new Image(),\n        url = URL.createObjectURL(file),\n        vm = this;\n\n      this.form.mockFlowFile = '';\n      this.form.mockFlowUrl = '';\n\n      if (!url) {\n        this.onMockFileChangeError('uploadError');\n      }\n\n      if (file.type === 'application/pdf') {\n        file.size > 5000000\n          ? this.onMockFileChangeError('exceededSize')\n          : this.onMockFileChangeSuccess(file, url);\n      } else {\n        img.src = url;\n\n        img.onload = function() {\n          img.width > 1200 || img.height > 630\n            ? vm.onMockFileChangeError('exceededSize')\n            : vm.onMockFileChangeSuccess(file, url);\n        };\n\n        img.onerror = function() {\n          vm.onMockFileChangeError('uploadError');\n        };\n      }\n    },\n    onMockFileChangeSuccess(file, url) {\n      this.mockFileError = null;\n      this.form.mockFlowFile = file;\n      this.form.mockFlowUrl = url;\n      this.updateMockFlow(false);\n    },\n    onMockFileChangeError(type) {\n      this.mockFileError =\n        type === 'exceededSize'\n          ? 'The image dimensions are too big. Dimensions must be 1200px width by 630px height and less than 5MB.'\n          : 'Upload error. Please try a different file.';\n      this.updateMockFlow(true);\n    },\n    onDappIconChange(e) {\n      const file =\n          e.type === 'drop' ? e.dataTransfer.files[0] : e.target.files[0],\n        img = new Image(),\n        url = URL.createObjectURL(file),\n        vm = this;\n\n      img.src = url;\n      vm.form.dappIconFile = '';\n      vm.form.dappIconUrl = '';\n\n      img.onload = function() {\n        if (img.height > 192 || img.width > 192) {\n          vm.dappIconError =\n            'The image dimensions are too big. Dimensions must be 192px by 192px.';\n          vm.updateDappIcon(true);\n        } else {\n          vm.dappIconError = null;\n          vm.form.dappIconFile = file;\n          vm.form.dappIconUrl = url;\n          vm.updateDappIcon(false);\n        }\n      };\n\n      img.onerror = function() {\n        vm.dappIconError = 'Upload error. Please try a different file.';\n        vm.updateDappIcon(true);\n      };\n    },\n    onBannerChange(e) {\n      const file =\n          e.type === 'drop' ? e.dataTransfer.files[0] : e.target.files[0],\n        img = new Image(),\n        url = URL.createObjectURL(file),\n        vm = this;\n\n      vm.form.bannerFile = '';\n      vm.form.bannerUrl = '';\n      img.src = url;\n\n      img.onload = function() {\n        if (img.width < 1200 || img.height < 206) {\n          vm.bannerError =\n            'The image dimensions are too small. Dimensions must be at least 1200px* 206px.';\n          vm.updateBanner(true);\n        } else {\n          vm.bannerError = null;\n          vm.form.bannerFile = file;\n          vm.form.bannerUrl = url;\n          vm.updateBanner(false);\n        }\n      };\n\n      img.onerror = function() {\n        vm.bannerError = 'Upload error. Please try a different file.';\n        vm.updateBanner(true);\n      };\n    },\n    onContractAddressChange(e) {\n      if (!isAddress(e)) {\n        this.contractAddressErr = 'Please enter a valid address';\n        this.updateMockFlow(true);\n      } else {\n        this.contractAddressErr = null;\n        this.updateMockFlow(false);\n      }\n    },\n    addTags(tag) {\n      this.tagInput = tag;\n      this.pushTag();\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'AboutYourDappContainer.scss';\n@import '../AboutYourDappTeamContainer.scss';\n</style>\n\n<style lang=\"scss\">\n.dapp-label {\n  align-items: center;\n  display: flex;\n  font-size: 16px;\n  margin-bottom: 10px;\n  width: 90%;\n}\n.custom-file-input {\n  height: 100%;\n}\n.custom-file-label {\n  height: 100%;\n  opacity: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &.dragging {\n    opacity: 1;\n    border-color: #05c0a5;\n  }\n}\n\n.custom-file-label::after {\n  opacity: 0;\n}\n</style>\n"]}]}