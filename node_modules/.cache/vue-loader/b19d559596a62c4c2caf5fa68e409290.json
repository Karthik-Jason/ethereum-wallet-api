{"remainingRequest":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/layouts/AccessWalletLayout/components/XwalletModal/XwalletModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/layouts/AccessWalletLayout/components/XwalletModal/XwalletModal.vue","mtime":1573477611668},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport CustomerSupport from '@/components/CustomerSupport';\nimport { MewConnectWallet } from '@/wallets';\nimport { Toast } from '@/helpers';\nimport platform from 'platform';\nimport { mapState } from 'vuex';\nimport IpadModal from '@/components/IpadModal';\n\nexport default {\n  components: {\n    'customer-support': CustomerSupport,\n    'ipad-modal': IpadModal\n  },\n  data() {\n    return {\n      QrCode: '',\n      canDownloadApple: true\n    };\n  },\n  computed: {\n    ...mapState(['path', 'web3'])\n  },\n  mounted() {\n    this.canDownloadApple =\n      platform.product !== null\n        ? platform.product.toLowerCase() !== 'ipad'\n        : true;\n    this.$refs.xwalletModal.$on('show', () => {\n      new MewConnectWallet(this.codeDisplay)\n        .then(wallet => {\n          if (!this.web3.eth) this.$store.dispatch('setWeb3Instance');\n          this.$store.dispatch('decryptWallet', [wallet]).then(() => {\n            this.$router.push({\n              path: 'interface'\n            });\n          });\n        })\n        .catch(e => {\n          Toast.responseHandler(e, false);\n        });\n    });\n    this.$refs.xwalletModal.$on('hidden', () => {\n      // disconnect socket if not connected (the socket should disconnect eventually in all cases)\n    });\n  },\n  methods: {\n    codeDisplay(qrCode) {\n      this.QrCode = qrCode;\n    },\n    openIpadModal() {\n      this.$refs.ipadModal.$refs.ipadModal.show();\n    }\n  }\n};\n",{"version":3,"sources":["XwalletModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"XwalletModal.vue","sourceRoot":"src/layouts/AccessWalletLayout/components/XwalletModal","sourcesContent":["<template>\n  <b-modal\n    ref=\"xwalletModal\"\n    :title=\"$t('accessWallet.xwallettTitle')\"\n    hide-footer\n    class=\"bootstrap-modal nopadding modal-mew-connect\"\n    centered\n  >\n    <div class=\"modal-container\">\n      <ipad-modal ref=\"ipadModal\" />\n      <div class=\"modal-icon\">\n        <qrcode :value=\"QrCode\" :options=\"{ size: 200 }\" />\n      </div>\n      <div class=\"d-block content-container text-center\">\n        <h3 class=\"modal-large-text\">\n          {{ $t('accessWallet.xwalletDesc') }}\n        </h3>\n      </div>\n      <div class=\"appstore-button-container\">\n        <div class=\"links-container\">\n          <a\n            v-if=\"canDownloadApple\"\n            href=\"https://itunes.apple.com/tt/app/xwallet-by-pundi-x/id1321754661\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <img src=\"~@/assets/images/icons/appstore.svg\" height=\"35\" />\n          </a>\n          <div v-else @click=\"openIpadModal\">\n            <img src=\"~@/assets/images/icons/appstore.svg\" height=\"35\" />\n          </div>\n          <a\n            href=\"https://play.google.com/store/apps/details?id=com.pundix.xwallet\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <img src=\"~@/assets/images/icons/google-play.svg\" height=\"35\" />\n          </a>\n        </div>\n        <p class=\"download-now\">{{ $t('accessWallet.mewConnectDesc2') }}</p>\n      </div>\n      <customer-support />\n    </div>\n    <!-- .modal-container -->\n  </b-modal>\n</template>\n\n<script>\nimport CustomerSupport from '@/components/CustomerSupport';\nimport { MewConnectWallet } from '@/wallets';\nimport { Toast } from '@/helpers';\nimport platform from 'platform';\nimport { mapState } from 'vuex';\nimport IpadModal from '@/components/IpadModal';\n\nexport default {\n  components: {\n    'customer-support': CustomerSupport,\n    'ipad-modal': IpadModal\n  },\n  data() {\n    return {\n      QrCode: '',\n      canDownloadApple: true\n    };\n  },\n  computed: {\n    ...mapState(['path', 'web3'])\n  },\n  mounted() {\n    this.canDownloadApple =\n      platform.product !== null\n        ? platform.product.toLowerCase() !== 'ipad'\n        : true;\n    this.$refs.xwalletModal.$on('show', () => {\n      new MewConnectWallet(this.codeDisplay)\n        .then(wallet => {\n          if (!this.web3.eth) this.$store.dispatch('setWeb3Instance');\n          this.$store.dispatch('decryptWallet', [wallet]).then(() => {\n            this.$router.push({\n              path: 'interface'\n            });\n          });\n        })\n        .catch(e => {\n          Toast.responseHandler(e, false);\n        });\n    });\n    this.$refs.xwalletModal.$on('hidden', () => {\n      // disconnect socket if not connected (the socket should disconnect eventually in all cases)\n    });\n  },\n  methods: {\n    codeDisplay(qrCode) {\n      this.QrCode = qrCode;\n    },\n    openIpadModal() {\n      this.$refs.ipadModal.$refs.ipadModal.show();\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'XwalletModal-desktop.scss';\n@import 'XwalletModal-tablet.scss';\n@import 'XwalletModal-mobile.scss';\n</style>\n"]}]}