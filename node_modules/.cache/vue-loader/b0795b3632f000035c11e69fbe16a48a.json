{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/components/StandardInput/StandardInput.vue?vue&type=template&id=4d1f07eb&scoped=true&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/components/StandardInput/StandardInput.vue","mtime":1573477611624},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"standard-input\" }, [\n    _vm.options.title\n      ? _c(\"div\", { staticClass: \"input-title-container\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"input-title-and-helper\" },\n            [\n              _c(\"div\", { staticClass: \"title-and-subtitle\" }, [\n                _c(\"p\", { staticClass: \"input-title\" }, [\n                  _vm._v(_vm._s(_vm.options.title))\n                ]),\n                _vm.options.titleText\n                  ? _c(\"p\", { staticClass: \"input-title-text\" }, [\n                      _vm._v(\n                        \"\\n          \" +\n                          _vm._s(_vm.options.titleText) +\n                          \"\\n        \"\n                      )\n                    ])\n                  : _vm._e()\n              ]),\n              _vm.options.popover\n                ? _c(\"popover\", { attrs: { popcontent: _vm.options.popover } })\n                : _vm._e()\n            ],\n            1\n          ),\n          _c(\"div\", { staticClass: \"the-button-container\" }, [\n            _vm.options.buttonRandom == true\n              ? _c(\"div\", { staticClass: \"the-button random\" }, [\n                  _c(\"i\", {\n                    staticClass: \"fa fa-refresh\",\n                    attrs: { \"aria-hidden\": \"true\" }\n                  }),\n                  _vm._v(\"Random\\n      \")\n                ])\n              : _vm._e(),\n            _vm.options.buttonClear == true\n              ? _c(\"div\", { staticClass: \"the-button clean\" }, [\n                  _vm._v(\"\\n        Clear\\n      \")\n                ])\n              : _vm._e(),\n            _vm.options.buttonCopy == true\n              ? _c(\n                  \"div\",\n                  {\n                    staticClass: \"the-button copy\",\n                    on: { click: _vm.copyToClipboard }\n                  },\n                  [_vm._v(\"\\n        Copy\\n      \")]\n                )\n              : _vm._e(),\n            _vm.options.buttonCustom\n              ? _c(\"div\", { staticClass: \"the-button clean\" }, [\n                  _vm._v(\n                    \"\\n        \" + _vm._s(_vm.options.buttonCustom) + \"\\n      \"\n                  )\n                ])\n              : _vm._e(),\n            _vm.options.topTextInfo\n              ? _c(\"div\", { staticClass: \"the-text info\" }, [\n                  _vm._v(\n                    \"\\n        \" + _vm._s(_vm.options.topTextInfo) + \"\\n      \"\n                  )\n                ])\n              : _vm._e()\n          ])\n        ])\n      : _vm._e(),\n    _c(\n      \"div\",\n      {\n        staticClass: \"input-container\",\n        class: [_vm.borderClass, _vm.options.borderGrey ? \"border-grey\" : \"\"]\n      },\n      [\n        _vm.options.type === \"checkbox\" && !_vm.options.isTextarea\n          ? _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.inputValue,\n                  expression: \"inputValue\"\n                }\n              ],\n              ref: \"inputdata\",\n              class: [\n                _vm.options.rightInputText ? \"right-padding\" : \"\",\n                _vm.options.inputDisabled ? \"disabled\" : \"\"\n              ],\n              attrs: {\n                readonly: _vm.options.readOnly,\n                placeholder: _vm.options.placeHolder,\n                disabled: _vm.options.inputDisabled,\n                name: \"\",\n                type: \"checkbox\"\n              },\n              domProps: {\n                value: _vm.options.value,\n                checked: Array.isArray(_vm.inputValue)\n                  ? _vm._i(_vm.inputValue, _vm.options.value) > -1\n                  : _vm.inputValue\n              },\n              on: {\n                blur: _vm.emitValue,\n                change: function($event) {\n                  var $$a = _vm.inputValue,\n                    $$el = $event.target,\n                    $$c = $$el.checked ? true : false\n                  if (Array.isArray($$a)) {\n                    var $$v = _vm.options.value,\n                      $$i = _vm._i($$a, $$v)\n                    if ($$el.checked) {\n                      $$i < 0 && (_vm.inputValue = $$a.concat([$$v]))\n                    } else {\n                      $$i > -1 &&\n                        (_vm.inputValue = $$a\n                          .slice(0, $$i)\n                          .concat($$a.slice($$i + 1)))\n                    }\n                  } else {\n                    _vm.inputValue = $$c\n                  }\n                }\n              }\n            })\n          : _vm.options.type === \"radio\" && !_vm.options.isTextarea\n          ? _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.inputValue,\n                  expression: \"inputValue\"\n                }\n              ],\n              ref: \"inputdata\",\n              class: [\n                _vm.options.rightInputText ? \"right-padding\" : \"\",\n                _vm.options.inputDisabled ? \"disabled\" : \"\"\n              ],\n              attrs: {\n                readonly: _vm.options.readOnly,\n                placeholder: _vm.options.placeHolder,\n                disabled: _vm.options.inputDisabled,\n                name: \"\",\n                type: \"radio\"\n              },\n              domProps: {\n                value: _vm.options.value,\n                checked: _vm._q(_vm.inputValue, _vm.options.value)\n              },\n              on: {\n                blur: _vm.emitValue,\n                change: function($event) {\n                  _vm.inputValue = _vm.options.value\n                }\n              }\n            })\n          : !_vm.options.isTextarea\n          ? _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.inputValue,\n                  expression: \"inputValue\"\n                }\n              ],\n              ref: \"inputdata\",\n              class: [\n                _vm.options.rightInputText ? \"right-padding\" : \"\",\n                _vm.options.inputDisabled ? \"disabled\" : \"\"\n              ],\n              attrs: {\n                readonly: _vm.options.readOnly,\n                placeholder: _vm.options.placeHolder,\n                disabled: _vm.options.inputDisabled,\n                name: \"\",\n                type: _vm.options.type\n              },\n              domProps: { value: _vm.options.value, value: _vm.inputValue },\n              on: {\n                blur: _vm.emitValue,\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.inputValue = $event.target.value\n                }\n              }\n            })\n          : _vm._e(),\n        _vm.options.isTextarea\n          ? _c(\"textarea\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.inputValue,\n                  expression: \"inputValue\"\n                }\n              ],\n              ref: \"textareadata\",\n              attrs: {\n                readonly: _vm.options.readOnly,\n                placeholder: _vm.options.placeHolder,\n                disabled: _vm.options.inputDisabled\n              },\n              domProps: { value: _vm.inputValue },\n              on: {\n                blur: _vm.emitValue,\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.inputValue = $event.target.value\n                }\n              }\n            })\n          : _vm._e(),\n        _vm.options.rightInputText\n          ? _c(\"p\", { staticClass: \"right-input-text\" }, [\n              _vm._v(\"\\n      \" + _vm._s(_vm.options.rightInputText) + \"\\n    \")\n            ])\n          : _vm._e()\n      ]\n    ),\n    _c(\"div\", { staticClass: \"password-strength-indicator\" }, [\n      _vm.options.passwordStrength === \"1\"\n        ? _c(\"div\", [\n            _c(\"p\", { staticClass: \"strength weak\" }, [\n              _vm._v(\"Weak strength password\")\n            ]),\n            _c(\"p\", { staticClass: \"note\" }, [\n              _vm._v(\n                \"\\n        Your password needs to be minimum 10 charactors long.\\n      \"\n              )\n            ])\n          ])\n        : _vm._e(),\n      _vm.options.passwordStrength === \"2\"\n        ? _c(\"div\", [\n            _c(\"p\", { staticClass: \"strength medium\" }, [\n              _vm._v(\"Medium strength password\")\n            ]),\n            _c(\"p\", { staticClass: \"note\" }, [\n              _vm._v(\"Add numbers to make your password stronger.\")\n            ])\n          ])\n        : _vm._e(),\n      _vm.options.passwordStrength === \"3\"\n        ? _c(\"div\", [\n            _c(\"p\", { staticClass: \"strength strong\" }, [\n              _vm._v(\"Strong strength password\")\n            ]),\n            _c(\"p\", { staticClass: \"note\" }, [\n              _vm._v(\"Good! Your password is very strong.\")\n            ])\n          ])\n        : _vm._e()\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}