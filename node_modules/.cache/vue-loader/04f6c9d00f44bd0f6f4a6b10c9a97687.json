{"remainingRequest":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/components/ExpandingOption/ExpandingOption.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/src/components/ExpandingOption/ExpandingOption.vue","mtime":1573477611544},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/MyEtherWallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  props: {\n    title: {\n      type: String,\n      default: ''\n    },\n    buttonText: {\n      type: String,\n      default: ''\n    },\n    hidebottomborder: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      expanded: false\n    };\n  },\n  methods: {\n    optionExpanded() {\n      this.expanded = !this.expanded;\n      this.$emit('expanded', this.expanded);\n    }\n  }\n};\n",{"version":3,"sources":["ExpandingOption.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ExpandingOption.vue","sourceRoot":"src/components/ExpandingOption","sourcesContent":["<template>\n  <div\n    :class=\"hidebottomborder ? 'hide-bottom-border' : ''\"\n    class=\"expanding-option\"\n  >\n    <div class=\"title-bar-container\">\n      <div class=\"input-title\">{{ title }}</div>\n      <div v-if=\"buttonText !== ''\" class=\"button-text\">{{ buttonText }}</div>\n      <!-- Rounded switch -->\n      <div class=\"switch sliding-switch-white\">\n        <label class=\"switch\">\n          <input type=\"checkbox\" @click=\"optionExpanded\" />\n          <span class=\"slider round\" />\n        </label>\n      </div>\n    </div>\n\n    <div :class=\"expanded ? 'expanded' : ''\" class=\"contnet-container\">\n      <div class=\"content-block\"><slot></slot></div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    title: {\n      type: String,\n      default: ''\n    },\n    buttonText: {\n      type: String,\n      default: ''\n    },\n    hidebottomborder: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      expanded: false\n    };\n  },\n  methods: {\n    optionExpanded() {\n      this.expanded = !this.expanded;\n      this.$emit('expanded', this.expanded);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'ExpandingOption.scss';\n</style>\n"]}]}