{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/containers/HeaderContainer/components/MobileMenu/components/MobileBalanceBlock/MobileBalanceBlock.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/containers/HeaderContainer/components/MobileMenu/components/MobileBalanceBlock/MobileBalanceBlock.vue","mtime":1573477611640},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from 'vuex';\nimport { Toast } from '@/helpers';\nimport BigNumber from 'bignumber.js';\nimport InterfaceBalanceModal from '@/layouts/InterfaceLayout/components/InterfaceBalanceModal';\n\nexport default {\n  components: {\n    'interface-balance-modal': InterfaceBalanceModal\n  },\n  computed: {\n    ...mapState(['network', 'web3', 'account']),\n    accountBalance() {\n      return this.web3.utils.fromWei(\n        new BigNumber(this.account.balance).toFixed(),\n        'ether'\n      );\n    }\n  },\n  methods: {\n    showBalanceModal() {\n      this.getBalance();\n      this.$refs.balanceModal.$refs.balance.show();\n    },\n    getBalance() {\n      if (this.account.address) {\n        this.web3.eth\n          .getBalance(this.account.address.toLowerCase())\n          .then(res => {\n            this.$store.dispatch('setAccountBalance', res);\n          })\n          .catch(err => {\n            Toast.responseHandler(err, Toast.ERROR);\n          });\n      }\n    }\n  }\n};\n",{"version":3,"sources":["MobileBalanceBlock.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MobileBalanceBlock.vue","sourceRoot":"src/containers/HeaderContainer/components/MobileMenu/components/MobileBalanceBlock","sourcesContent":["<template>\n  <div class=\"mobile-address-block\">\n    <interface-balance-modal ref=\"balanceModal\" :balance=\"accountBalance\" />\n    <div class=\"wrap\">\n      <div class=\"top-block\">\n        <div class=\"block-title\">{{ $t('common.balance') }}</div>\n        <button class=\"show-balance-button\" @click=\"showBalanceModal\">\n          <img src=\"~@/assets/images/icons/more.svg\" alt />\n        </button>\n      </div>\n      <div class=\"bottom-block\">\n        <p class=\"the-address\">\n          {{ accountBalance }}\n          {{ network.type.currencyName }}\n        </p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport { Toast } from '@/helpers';\nimport BigNumber from 'bignumber.js';\nimport InterfaceBalanceModal from '@/layouts/InterfaceLayout/components/InterfaceBalanceModal';\n\nexport default {\n  components: {\n    'interface-balance-modal': InterfaceBalanceModal\n  },\n  computed: {\n    ...mapState(['network', 'web3', 'account']),\n    accountBalance() {\n      return this.web3.utils.fromWei(\n        new BigNumber(this.account.balance).toFixed(),\n        'ether'\n      );\n    }\n  },\n  methods: {\n    showBalanceModal() {\n      this.getBalance();\n      this.$refs.balanceModal.$refs.balance.show();\n    },\n    getBalance() {\n      if (this.account.address) {\n        this.web3.eth\n          .getBalance(this.account.address.toLowerCase())\n          .then(res => {\n            this.$store.dispatch('setAccountBalance', res);\n          })\n          .catch(err => {\n            Toast.responseHandler(err, Toast.ERROR);\n          });\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'MobileBalanceBlock.scss';\n</style>\n"]}]}