{"remainingRequest":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/containers/ConfirmationContainer/components/AddressBlock/AddressBlock.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/src/containers/ConfirmationContainer/components/AddressBlock/AddressBlock.vue","mtime":1573477611636},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/karthik/Desktop/myetherwallet/ethereum-wallet-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { isAddress, toChecksumAddress } from '@/helpers/addressUtils';\nimport web3 from 'web3';\nexport default {\n  props: {\n    address: {\n      type: String,\n      default: ''\n    },\n    direction: {\n      type: String,\n      default: ''\n    },\n    value: {\n      type: String,\n      default: ''\n    },\n    currency: {\n      type: String,\n      default: 'eth'\n    },\n    tokenTransferTo: {\n      type: String,\n      default: ''\n    },\n    tokenTransferVal: {\n      type: String,\n      default: ''\n    },\n    tokenSymbol: {\n      type: String,\n      default: ''\n    },\n    icon: {\n      type: String,\n      default: ''\n    }\n  },\n  computed: {\n    iconFetcher() {\n      let icon;\n      try {\n        // eslint-disable-next-line\n        icon = require(`@/assets/images/currency/${lowerCaseCurrency}.svg`);\n      } catch (e) {\n        icon = this.icon;\n      }\n      return icon;\n    },\n    lowerCaseCurrency() {\n      return this.tokenSymbol.toLowerCase();\n    },\n    checksumAddress() {\n      if (isAddress(this.tokenTransferTo.toLowerCase()))\n        return toChecksumAddress(this.tokenTransferTo.toLowerCase());\n      if (isAddress(this.address)) return toChecksumAddress(this.address);\n      return '';\n    },\n    tokenChecksumAddress() {\n      if (isAddress(this.address)) return toChecksumAddress(this.address);\n      return '';\n    }\n  },\n  methods: {\n    converter(num) {\n      return web3.utils.fromWei(num.toString(), 'ether');\n    }\n  }\n};\n",{"version":3,"sources":["AddressBlock.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AddressBlock.vue","sourceRoot":"src/containers/ConfirmationContainer/components/AddressBlock","sourcesContent":["<template lang=\"html\">\n  <div class=\"address-container\">\n    <div class=\"currency-container\">\n      <div class=\"icon-matcher\">\n        <img :src=\"iconFetcher\" alt />\n      </div>\n      <p>\n        <span class=\"currency-amt\">\n          {{ direction === 'from' ? '-' : '+' }}\n          {{ tokenTransferVal !== '' ? tokenTransferVal : converter(value) }}\n        </span>\n        <span class=\"currency-type\"\n          >{{ tokenSymbol !== '' ? tokenSymbol : currency.toUpperCase() }}\n        </span>\n      </p>\n    </div>\n    <div class=\"identicon-container\">\n      <p>{{ direction | capitalize }} Address</p>\n    </div>\n    <div class=\"address\">{{ checksumAddress }}</div>\n    <div v-if=\"tokenSymbol !== '' && direction === 'to'\">\n      <p>Via contract</p>\n      <div class=\"address\">{{ tokenChecksumAddress }}</div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { isAddress, toChecksumAddress } from '@/helpers/addressUtils';\nimport web3 from 'web3';\nexport default {\n  props: {\n    address: {\n      type: String,\n      default: ''\n    },\n    direction: {\n      type: String,\n      default: ''\n    },\n    value: {\n      type: String,\n      default: ''\n    },\n    currency: {\n      type: String,\n      default: 'eth'\n    },\n    tokenTransferTo: {\n      type: String,\n      default: ''\n    },\n    tokenTransferVal: {\n      type: String,\n      default: ''\n    },\n    tokenSymbol: {\n      type: String,\n      default: ''\n    },\n    icon: {\n      type: String,\n      default: ''\n    }\n  },\n  computed: {\n    iconFetcher() {\n      let icon;\n      try {\n        // eslint-disable-next-line\n        icon = require(`@/assets/images/currency/${lowerCaseCurrency}.svg`);\n      } catch (e) {\n        icon = this.icon;\n      }\n      return icon;\n    },\n    lowerCaseCurrency() {\n      return this.tokenSymbol.toLowerCase();\n    },\n    checksumAddress() {\n      if (isAddress(this.tokenTransferTo.toLowerCase()))\n        return toChecksumAddress(this.tokenTransferTo.toLowerCase());\n      if (isAddress(this.address)) return toChecksumAddress(this.address);\n      return '';\n    },\n    tokenChecksumAddress() {\n      if (isAddress(this.address)) return toChecksumAddress(this.address);\n      return '';\n    }\n  },\n  methods: {\n    converter(num) {\n      return web3.utils.fromWei(num.toString(), 'ether');\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import 'AddressBlock.scss';\n</style>\n"]}]}