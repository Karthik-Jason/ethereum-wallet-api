import BigNumber from 'bignumber.js';
import { TemporalUnit } from '../eac';
import { TransactionRequestCore, TransactionRequestCoreRawData } from '../../types/web3-contracts/TransactionRequestCore';
interface TransactionRequestScheduleData {
    claimWindowSize: BigNumber;
    freezePeriod: BigNumber;
    reservedWindowSize: BigNumber;
    temporalUnit: TemporalUnit;
    windowSize: BigNumber;
    windowStart: BigNumber;
}
interface TransactionRequestClaimData {
    claimedBy: string;
    claimDeposit: BigNumber;
    paymentModifier: number;
    requiredDeposit: BigNumber;
}
interface TransactionRequestTransferData {
    callGas: BigNumber;
    callValue: BigNumber;
    gasPrice: BigNumber;
    toAddress: string;
}
interface TransactionRequestMetaData {
    createdBy: string;
    owner: string;
    isCancelled: boolean;
    wasCalled: boolean;
    wasSuccessful: boolean;
}
export interface TransactionRequestPaymentData {
    feeRecipient: string;
    bountyBenefactor: string;
    fee: BigNumber;
    feeOwed: BigNumber;
    bounty: BigNumber;
    bountyOwed: BigNumber;
}
export default class TransactionRequestData {
    static from(txRequest: TransactionRequestCore): Promise<TransactionRequestData>;
    claimData: TransactionRequestClaimData;
    meta: TransactionRequestMetaData;
    paymentData: TransactionRequestPaymentData;
    schedule: TransactionRequestScheduleData;
    txData: TransactionRequestTransferData;
    txRequest: TransactionRequestCore;
    constructor(data: TransactionRequestCoreRawData, txRequest: TransactionRequestCore);
    fill(data: TransactionRequestCoreRawData): void;
    refresh(): Promise<void>;
}
export {};
