"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _applyDecoratedDescriptor2 = _interopRequireDefault(require("@babel/runtime/helpers/applyDecoratedDescriptor"));

var _servicesCore = require("@makerdao/services-core");

var _contracts = _interopRequireDefault(require("../../contracts/contracts"));

var _Currency = require("./Currency");

var _tracksTransactions = _interopRequireDefault(require("../utils/tracksTransactions"));

var _class;

// FIXME we should probably just get rid of this service entirely and move the
// functions into WethToken and PethToken
var TokenConversionService = (_class =
/*#__PURE__*/
function (_PrivateService) {
  (0, _inherits2["default"])(TokenConversionService, _PrivateService);

  function TokenConversionService() {
    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'conversion';
    (0, _classCallCheck2["default"])(this, TokenConversionService);
    return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(TokenConversionService).call(this, name, ['smartContract', 'token', 'allowance']));
  }

  (0, _createClass2["default"])(TokenConversionService, [{
    key: "_getToken",
    value: function _getToken(token) {
      return this.get('token').getToken(token);
    }
  }, {
    key: "convertEthToWeth",
    value: function convertEthToWeth(amount, options) {
      return this._getToken(_Currency.WETH).deposit(amount, options);
    }
  }, {
    key: "convertWethToPeth",
    value: function () {
      var _convertWethToPeth = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee(amount) {
        var _ref,
            _ref$unit,
            unit,
            promise,
            pethContract,
            _args = arguments;

        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _ref = _args.length > 1 && _args[1] !== undefined ? _args[1] : {}, _ref$unit = _ref.unit, unit = _ref$unit === void 0 ? _Currency.WETH : _ref$unit, promise = _ref.promise;
                pethContract = this._getToken(_Currency.PETH);
                _context.next = 4;
                return this.get('allowance').requireAllowance(_Currency.WETH, this.get('smartContract').getContract(_contracts["default"].SAI_TUB).address, {
                  promise: promise
                });

              case 4:
                return _context.abrupt("return", pethContract.join(amount, {
                  unit: unit,
                  promise: promise
                }));

              case 5:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function convertWethToPeth(_x) {
        return _convertWethToPeth.apply(this, arguments);
      }

      return convertWethToPeth;
    }()
  }, {
    key: "convertEthToPeth",
    value: function () {
      var _convertEthToPeth = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee2(value, _ref2) {
        var promise;
        return _regenerator["default"].wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                promise = _ref2.promise;
                _context2.next = 3;
                return this.convertEthToWeth(value, {
                  promise: promise
                });

              case 3:
                return _context2.abrupt("return", this.convertWethToPeth(value, {
                  promise: promise
                }));

              case 4:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function convertEthToPeth(_x2, _x3) {
        return _convertEthToPeth.apply(this, arguments);
      }

      return convertEthToPeth;
    }()
  }, {
    key: "convertWethToEth",
    value: function convertWethToEth(amount, options) {
      return this._getToken(_Currency.WETH).withdraw(amount, options);
    }
  }, {
    key: "convertPethToWeth",
    value: function () {
      var _convertPethToWeth = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee3(amount, _ref3) {
        var _ref3$unit, unit, promise, pethToken;

        return _regenerator["default"].wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _ref3$unit = _ref3.unit, unit = _ref3$unit === void 0 ? _Currency.WETH : _ref3$unit, promise = _ref3.promise;
                pethToken = this._getToken(_Currency.PETH);
                _context3.next = 4;
                return this.get('allowance').requireAllowance(_Currency.PETH, this.get('smartContract').getContract(_contracts["default"].SAI_TUB).address, {
                  promise: promise
                });

              case 4:
                return _context3.abrupt("return", pethToken.exit(amount, {
                  unit: unit,
                  promise: promise
                }));

              case 5:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function convertPethToWeth(_x4, _x5) {
        return _convertPethToWeth.apply(this, arguments);
      }

      return convertPethToWeth;
    }()
  }, {
    key: "convertPethToEth",
    value: function () {
      var _convertPethToEth = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee4(amount, _ref4) {
        var promise;
        return _regenerator["default"].wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                promise = _ref4.promise;
                _context4.next = 3;
                return this.convertPethToWeth(amount, {
                  promise: promise
                });

              case 3:
                return _context4.abrupt("return", this.convertWethToEth(amount, {
                  promise: promise
                }));

              case 4:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function convertPethToEth(_x6, _x7) {
        return _convertPethToEth.apply(this, arguments);
      }

      return convertPethToEth;
    }()
  }]);
  return TokenConversionService;
}(_servicesCore.PrivateService), ((0, _applyDecoratedDescriptor2["default"])(_class.prototype, "convertWethToPeth", [_tracksTransactions["default"]], Object.getOwnPropertyDescriptor(_class.prototype, "convertWethToPeth"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "convertEthToPeth", [_tracksTransactions["default"]], Object.getOwnPropertyDescriptor(_class.prototype, "convertEthToPeth"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "convertPethToWeth", [_tracksTransactions["default"]], Object.getOwnPropertyDescriptor(_class.prototype, "convertPethToWeth"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "convertPethToEth", [_tracksTransactions["default"]], Object.getOwnPropertyDescriptor(_class.prototype, "convertPethToEth"), _class.prototype)), _class);
exports["default"] = TokenConversionService;