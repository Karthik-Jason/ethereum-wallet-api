"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _Erc20Token2 = _interopRequireDefault(require("./Erc20Token"));

var _Currency = require("../Currency");

var WethToken =
/*#__PURE__*/
function (_Erc20Token) {
  (0, _inherits2["default"])(WethToken, _Erc20Token);

  function WethToken(contract, web3Service, decimals) {
    (0, _classCallCheck2["default"])(this, WethToken);
    return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(WethToken).call(this, contract, web3Service, decimals, 'WETH'));
  }

  (0, _createClass2["default"])(WethToken, [{
    key: "name",
    value: function name() {
      return this._contract.name();
    }
  }, {
    key: "deposit",
    value: function deposit(amount) {
      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          _ref$unit = _ref.unit,
          unit = _ref$unit === void 0 ? _Currency.ETH : _ref$unit,
          options = (0, _objectWithoutProperties2["default"])(_ref, ["unit"]);

      return this._contract.deposit((0, _objectSpread2["default"])({
        value: this._valueForContract(amount, unit)
      }, options));
    }
  }, {
    key: "withdraw",
    value: function withdraw(amount) {
      var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          _ref2$unit = _ref2.unit,
          unit = _ref2$unit === void 0 ? _Currency.WETH : _ref2$unit,
          options = (0, _objectWithoutProperties2["default"])(_ref2, ["unit"]);

      var value = this._valueForContract(amount, unit);

      return this._contract.withdraw(value, options);
    }
  }]);
  return WethToken;
}(_Erc20Token2["default"]);

exports["default"] = WethToken;