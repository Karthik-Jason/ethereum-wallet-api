"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _servicesCore = require("@makerdao/services-core");

var _contracts = _interopRequireDefault(require("../../contracts/contracts"));

var _constants = require("../utils/constants");

var _bignumber = _interopRequireDefault(require("bignumber.js"));

var _web3EthAbi = _interopRequireDefault(require("web3-eth-abi"));

var _Currency = require("./Currency");

var PriceService =
/*#__PURE__*/
function (_PrivateService) {
  (0, _inherits2["default"])(PriceService, _PrivateService);

  /**
   * @param {string} name
   */
  function PriceService() {
    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'price';
    (0, _classCallCheck2["default"])(this, PriceService);
    return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(PriceService).call(this, name, ['token', 'smartContract', 'event']));
  }

  (0, _createClass2["default"])(PriceService, [{
    key: "initialize",
    value: function initialize() {
      var _this = this;

      this.get('event').registerPollEvents({
        'price/ETH_USD': {
          price: function price() {
            return _this.getEthPrice();
          }
        },
        'price/MKR_USD': {
          price: function price() {
            return _this.getMkrPrice();
          }
        },
        'price/WETH_PETH': {
          ratio: function ratio() {
            return _this.getWethToPethRatio();
          }
        }
      });
    }
  }, {
    key: "_getContract",
    value: function _getContract(contract) {
      return this.get('smartContract').getContract(contract);
    }
  }, {
    key: "_valueForContract",
    value: function _valueForContract(value, unit) {
      var str = (0, _Currency.getCurrency)(value, unit).toFixed('wei');
      return _web3EthAbi["default"].encodeParameter('uint256', str);
    }
  }, {
    key: "getWethToPethRatio",
    value: function getWethToPethRatio() {
      return this._getContract(_contracts["default"].SAI_TUB).per().then(function (bn) {
        return new _bignumber["default"](bn.toString()).dividedBy(_constants.RAY).toNumber();
      });
    }
  }, {
    key: "getEthPrice",
    value: function () {
      var _getEthPrice = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee() {
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.t0 = _Currency.USD_ETH;
                _context.next = 3;
                return this._getContract(_contracts["default"].SAI_PIP).read();

              case 3:
                _context.t1 = _context.sent;
                return _context.abrupt("return", _context.t0.wei.call(_context.t0, _context.t1));

              case 5:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function getEthPrice() {
        return _getEthPrice.apply(this, arguments);
      }

      return getEthPrice;
    }()
  }, {
    key: "getPethPrice",
    value: function () {
      var _getPethPrice = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee2() {
        return _regenerator["default"].wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.t0 = _Currency.USD_PETH;
                _context2.next = 3;
                return this._getContract(_contracts["default"].SAI_TUB).tag();

              case 3:
                _context2.t1 = _context2.sent;
                return _context2.abrupt("return", _context2.t0.ray.call(_context2.t0, _context2.t1));

              case 5:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function getPethPrice() {
        return _getPethPrice.apply(this, arguments);
      }

      return getPethPrice;
    }()
  }, {
    key: "getMkrPrice",
    value: function () {
      var _getMkrPrice = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee3() {
        return _regenerator["default"].wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.t0 = _Currency.USD_MKR;
                _context3.next = 3;
                return this._getContract(_contracts["default"].SAI_PEP).peek();

              case 3:
                _context3.t1 = _context3.sent[0];
                return _context3.abrupt("return", _context3.t0.wei.call(_context3.t0, _context3.t1));

              case 5:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function getMkrPrice() {
        return _getMkrPrice.apply(this, arguments);
      }

      return getMkrPrice;
    }()
  }, {
    key: "setEthPrice",
    value: function setEthPrice(newPrice) {
      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          _ref$unit = _ref.unit,
          unit = _ref$unit === void 0 ? _Currency.ETH : _ref$unit,
          promise = _ref.promise;

      var value = this._valueForContract(newPrice, unit);

      return this._getContract(_contracts["default"].SAI_PIP).poke(value, {
        promise: promise
      });
    }
  }, {
    key: "setMkrPrice",
    value: function setMkrPrice(newPrice) {
      var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          _ref2$unit = _ref2.unit,
          unit = _ref2$unit === void 0 ? _Currency.MKR : _ref2$unit,
          promise = _ref2.promise;

      var value = this._valueForContract(newPrice, unit);

      return this._getContract(_contracts["default"].SAI_PEP).poke(value, {
        promise: promise
      });
    }
  }]);
  return PriceService;
}(_servicesCore.PrivateService);

exports["default"] = PriceService;