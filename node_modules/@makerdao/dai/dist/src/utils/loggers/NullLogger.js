"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _servicesCore = require("@makerdao/services-core");

var _ = function _() {};

var NullLogger =
/*#__PURE__*/
function (_LocalService) {
  (0, _inherits2["default"])(NullLogger, _LocalService);

  /**
   * @param {string} name
   */
  function NullLogger() {
    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'log';
    (0, _classCallCheck2["default"])(this, NullLogger);
    return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(NullLogger).call(this, name));
  }
  /**
   * @param {object} service
   * @returns {object}
   */


  (0, _createClass2["default"])(NullLogger, [{
    key: "serviceLogger",
    value: function serviceLogger(service) {
      if (!_servicesCore.ServiceManager.isValidService(service)) {
        throw new Error('Invalid service object');
      }

      return {
        trace: _,
        debug: _,
        info: _,
        warn: _,
        error: _,
        fatal: _
      };
    }
  }, {
    key: "trace",
    value: function trace() {}
  }, {
    key: "debug",
    value: function debug() {}
  }, {
    key: "info",
    value: function info() {}
  }, {
    key: "warn",
    value: function warn() {}
  }, {
    key: "error",
    value: function error() {}
  }, {
    key: "fatal",
    value: function fatal() {}
  }]);
  return NullLogger;
}(_servicesCore.LocalService);

exports["default"] = NullLogger;